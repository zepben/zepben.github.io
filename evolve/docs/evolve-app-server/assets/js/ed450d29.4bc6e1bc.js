"use strict";(self.webpackChunkewb_app_server_doco=self.webpackChunkewb_app_server_doco||[]).push([[8799],{3905:(e,t,a)=>{a.d(t,{Zo:()=>l,kt:()=>f});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},i=Object.keys(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)a=i[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var s=r.createContext({}),c=function(e){var t=r.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},l=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,s=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),u=c(a),g=n,f=u["".concat(s,".").concat(g)]||u[g]||d[g]||i;return a?r.createElement(f,o(o({ref:t},l),{},{components:a})):r.createElement(f,o({ref:t},l))}));function f(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,o=new Array(i);o[0]=g;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p[u]="string"==typeof e?e:n,o[1]=p;for(var c=2;c<i;c++)o[c]=a[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,a)}g.displayName="MDXCreateElement"},6179:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>p,toc:()=>c});var r=a(7462),n=(a(7294),a(3905));const i={id:"hosting-capacity-mutations-api",slug:"/api/graphql/hosting-capacity-mutations",title:"Hosting Capacity Mutations",hide_title:!0},o=void 0,p={unversionedId:"api/graphql/hosting-capacity-mutations-api",id:"version-2.1.0/api/graphql/hosting-capacity-mutations-api",title:"Hosting Capacity Mutations",description:"Hosting Capacity Mutations API",source:"@site/versioned_docs/version-2.1.0/api/graphql/hostingcapacitymutations.mdx",sourceDirName:"api/graphql",slug:"/api/graphql/hosting-capacity-mutations",permalink:"/evolve/docs/evolve-app-server/2.1.0/api/graphql/hosting-capacity-mutations",draft:!1,tags:[],version:"2.1.0",frontMatter:{id:"hosting-capacity-mutations-api",slug:"/api/graphql/hosting-capacity-mutations",title:"Hosting Capacity Mutations",hide_title:!0},sidebar:"sidebar",previous:{title:"Metrics",permalink:"/evolve/docs/evolve-app-server/2.1.0/api/graphql/metrics"},next:{title:"Permissions",permalink:"/evolve/docs/evolve-app-server/2.1.0/permissions"}},s={},c=[{value:"Hosting Capacity Mutations API",id:"hosting-capacity-mutations-api",level:2},{value:"Queries",id:"queries",level:2},{value:"Example queries",id:"example-queries",level:2},{value:"Expected Values",id:"expected-values",level:2}],l={toc:c},u="wrapper";function d(e){let{components:t,...a}=e;return(0,n.kt)(u,(0,r.Z)({},l,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"hosting-capacity-mutations-api"},"Hosting Capacity Mutations API"),(0,n.kt)("p",null,"The Hosting Capacity Mutations of the GraphQL API grants the ability to execute and cancel hosting capacity work packages and generate diffs between two work packages. The GraphQL API is served at ",(0,n.kt)("inlineCode",{parentName:"p"},"/api/graphql"),"."),(0,n.kt)("h2",{id:"queries"},"Queries"),(0,n.kt)("p",null,"The Hosting Capacity Mutations component of the GraphQL API comprises the following queries:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"runWorkPackage(input: GqlWorkPackageInput, workPackageName: String): [ID]"),": runs a hosting capacity work package and returns its ID."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"cancelWorkPackage(workPackageId: ID): [ID]"),": cancels a hosting capacity work package and returns its ID."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"generateNetworkPerformanceDiff(workPackageId1: ID, workPackageId2: ID, scenario: String?, feeder: String?, year: Int?): [Number of Entries generated for this diff_ID]"),": generate and store the differences of network performance metrics between two work packages and returns the number of entries generated with the ID of this diff package."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"generateEnhancedNetworkPerformanceDiff(workPackageId1: ID, workPackageId2: ID, scenario: String?, feeder: String?, year: Int?, season: String?, timeOfDay: String?): [Number of Entries generated for this diff_ID]"),": generate and store the differences of enhanced network performance metrics between two work packages and returns the number of entries generated with the ID of this diff package.")),(0,n.kt)("h2",{id:"example-queries"},"Example queries"),(0,n.kt)("p",null,"Some example queries:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'mutation {\n        generateNetworkPerformanceDiff(workPackageId1: "id1", workPackageId2: "id2", scenario: null, feeder: "feeder", year: 2023)\n}\n')),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'mutation {\n        generateEnhancedNetworkPerformanceDiff(workPackageId1: "id1", workPackageId2: "id2", scenario: null, feeder: null, year: 2023, season: "summer", timeOfDay: "solar_day")\n}\n')),(0,n.kt)("h2",{id:"expected-values"},"Expected Values"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"season : summer | winter | yearly | sprint | autumn\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"timeOfDay : night | all | solar_day | day\n")))}d.isMDXComponent=!0}}]);