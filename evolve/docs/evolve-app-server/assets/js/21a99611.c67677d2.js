"use strict";(self.webpackChunkewb_app_server_doco=self.webpackChunkewb_app_server_doco||[]).push([[81],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),p=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return o.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),d=r,h=u["".concat(s,".").concat(d)]||u[d]||m[d]||a;return n?o.createElement(h,i(i({ref:t},c),{},{components:n})):o.createElement(h,i({ref:t},c))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:r,i[1]=l;for(var p=2;p<a;p++)i[p]=n[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},235:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var o=n(7462),r=(n(7294),n(3905));const a={id:"authentication",title:"Authentication",slug:"/authentication"},i=void 0,l={unversionedId:"authentication",id:"version-2.5.0/authentication",title:"Authentication",description:"EAS's only method of authentication is through Microsoft EntraID (formally Microsoft Active Directory). This document covers the implementation and deployment models",source:"@site/versioned_docs/version-2.5.0/authentication.md",sourceDirName:".",slug:"/authentication",permalink:"/evolve/docs/evolve-app-server/2.5.0/authentication",draft:!1,tags:[],version:"2.5.0",frontMatter:{id:"authentication",title:"Authentication",slug:"/authentication"},sidebar:"sidebar",previous:{title:"Personal Access Tokens",permalink:"/evolve/docs/evolve-app-server/2.5.0/personal-access-tokens"}},s={},p=[{value:"Implementation",id:"implementation",level:2},{value:"Deployment Models",id:"deployment-models",level:2},{value:"Zepben Managed",id:"zepben-managed",level:3},{value:"Customer Managed",id:"customer-managed",level:3},{value:"Setup Process",id:"setup-process",level:4}],c={toc:p},u="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"EAS's only method of authentication is through Microsoft EntraID (formally Microsoft Active Directory). This document covers the implementation and deployment models"),(0,r.kt)("h2",{id:"implementation"},"Implementation"),(0,r.kt)("p",null,"EAS implements the OpenID Connect (OIDC) protocol where JWT tokens issued by an IdP are validated using published JWKS keys. The frontend implements the OAuth 2.0 Authorization code flow with PKCE to login the user and the resulting JWT is sent to EAS in every request. Both the frontend and EAS leave it to  the IdP to perform any custom authentication rules such as MFA and session timeouts."),(0,r.kt)("h2",{id:"deployment-models"},"Deployment Models"),(0,r.kt)("p",null,"There are two deployment models, each with their own tradeoffs."),(0,r.kt)("h3",{id:"zepben-managed"},"Zepben Managed"),(0,r.kt)("p",null,"This deployment methodology involves Zepben setting a up a dedicated EntraID tenant for your deployment. Zepben will then configure applications to use this tenant as its authentication provider. This is a fast, low overhead way of getting your Zepben platform setup."),(0,r.kt)("p",null,"With this deployment style:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"User additions/removes/role assignemnts will be managed by Zepben support"),(0,r.kt)("li",{parentName:"ul"},"Users will have a separate own username and password to login, password resets will be conducted by Zepben support",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"If the email addresses belong to their own EntraID tenant, then ",(0,r.kt)("a",{parentName:"li",href:"https://learn.microsoft.com/en-us/entra/external-id/what-is-b2b"},"EntraID B2B Collaboration")," will be used where users use the source tenant credentials to login"))),(0,r.kt)("li",{parentName:"ul"},"Multi-factor authentication is used and resets are managed by Zepben support"),(0,r.kt)("li",{parentName:"ul"},"There are no customizations available, eg. Geo-location rules, IP rules etc.")),(0,r.kt)("h3",{id:"customer-managed"},"Customer Managed"),(0,r.kt)("p",null,"This deployment methodology allow customers to bring your own EntraID tenant for authentication. Zepben will integrate our applications to allow logins from your tenant using EntraID Single Sign On (SSO)."),(0,r.kt)("p",null,"With this deployment style:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Users additions/remove/role assignments are managed by the Customer"),(0,r.kt)("li",{parentName:"ul"},"Customer will manage user password/MFA resets"),(0,r.kt)("li",{parentName:"ul"},"Custom authentication rules using ",(0,r.kt)("a",{parentName:"li",href:"https://learn.microsoft.com/en-us/entra/identity/conditional-access/overview"},"EntraID Conditional Access")," can be used to control authentication requirements"),(0,r.kt)("li",{parentName:"ul"},"Zepben will continue to manage application configuration in our own tenant")),(0,r.kt)("h4",{id:"setup-process"},"Setup Process"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Customer will provide Zepben with their EntraID tenant ID"),(0,r.kt)("li",{parentName:"ol"},"Zepben will provision EntraID Application registrations as ",(0,r.kt)("a",{parentName:"li",href:"https://learn.microsoft.com/en-us/entra/identity/conditional-access/overview"},"multi tenant applications")),(0,r.kt)("li",{parentName:"ol"},"Zepben will provide a set of Enterprise Application client ids to Customer"),(0,r.kt)("li",{parentName:"ol"},"Customer will ",(0,r.kt)("a",{parentName:"li",href:"https://learn.microsoft.com/en-us/entra/identity/enterprise-apps/create-service-principal-cross-tenant?pivots=azure-cli"},"add each Enterprise Application")," to their tenant"),(0,r.kt)("li",{parentName:"ol"},"Customer will grant ",(0,r.kt)("a",{parentName:"li",href:"https://learn.microsoft.com/en-us/entra/identity/enterprise-apps/grant-admin-consent?pivots=portal"},"admin consent")," for all roles in each Enterprise Application"),(0,r.kt)("li",{parentName:"ol"},"Zepben will configure applications to trust logins from customer tenant and provide customer platform URL"),(0,r.kt)("li",{parentName:"ol"},"Customer can ",(0,r.kt)("a",{parentName:"li",href:"https://learn.microsoft.com/en-us/entra/identity/enterprise-apps/assign-user-or-group-access-portal?pivots=portal"},"assign users")," to application roles"),(0,r.kt)("li",{parentName:"ol"},"Users can now login to the Zepben platform")))}m.isMDXComponent=!0}}]);