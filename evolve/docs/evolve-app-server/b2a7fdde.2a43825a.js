(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{101:function(e,r,t){"use strict";t.d(r,"a",(function(){return d}));var n=t(0),a=t.n(n);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function i(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function c(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?i(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function l(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=a.a.createContext({}),u=function(e){var r=a.a.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):c({},r,{},e)),t},p={inlineCode:"code",wrapper:function(e){var r=e.children;return a.a.createElement(a.a.Fragment,{},r)}},v=Object(n.forwardRef)((function(e,r){var t=e.components,n=e.mdxType,o=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),v=u(t),d=n,b=v["".concat(i,".").concat(d)]||v[d]||p[d]||o;return t?a.a.createElement(b,c({ref:r},s,{components:t})):a.a.createElement(b,c({ref:r},s))}));function d(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var o=t.length,i=new Array(o);i[0]=v;var c={};for(var l in r)hasOwnProperty.call(r,l)&&(c[l]=r[l]);c.originalType=e,c.mdxType="string"==typeof e?e:n,i[1]=c;for(var s=2;s<o;s++)i[s]=t[s];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,t)}v.displayName="MDXCreateElement"},91:function(e,r,t){"use strict";t.r(r),t.d(r,"frontMatter",(function(){return i})),t.d(r,"metadata",(function(){return c})),t.d(r,"toc",(function(){return l})),t.d(r,"default",(function(){return u}));var n=t(3),a=t(7),o=(t(0),t(101)),i={id:"overview",title:"Overview",slug:"/"},c={unversionedId:"overview",id:"version-1.8.0/overview",isDocsHomePage:!1,title:"Overview",description:"The Evolve App allows users to visualise, search, and perform analysis on an energy distribution network in a",source:"@site/versioned_docs/version-1.8.0/overview.md",slug:"/",permalink:"/evolve/docs/evolve-app-server/",editUrl:"https://github.com/zepben/versioned_docs/version-1.8.0/overview.md",version:"1.8.0",sidebar:"version-1.8.0/sidebar",next:{title:"Configuration",permalink:"/evolve/docs/evolve-app-server/config"}},l=[{value:"Build",id:"build",children:[]},{value:"Configuration",id:"configuration",children:[]},{value:"Run",id:"run",children:[]},{value:"Test",id:"test",children:[]},{value:"API",id:"api",children:[]}],s={toc:l};function u(e){var r=e.components,t=Object(a.a)(e,["components"]);return Object(o.a)("wrapper",Object(n.a)({},s,t,{components:r,mdxType:"MDXLayout"}),Object(o.a)("p",null,"The Evolve App allows users to visualise, search, and perform analysis on an energy distribution network in a\nbrowser. The Evolve App Server handles all requests from the Evolve Web Client - providing the client with\nauthentication and configuration information, as well as persisting user preferences and session state. The Evolve App\nServer also acts as a gateway between the Evolve Web Client and the Energy Workbench Server, making sure the user is\nauthenticated before passing through requests for map tiles or network data to EWB."),Object(o.a)("p",null,"This document describes how to configure and run the Evolve App Server."),Object(o.a)("hr",null),Object(o.a)("h2",{id:"build"},"Build"),Object(o.a)("p",null,"To build and package, run:"),Object(o.a)("pre",null,Object(o.a)("code",Object(n.a)({parentName:"pre"},{}),"mvn clean package\n")),Object(o.a)("hr",null),Object(o.a)("h2",{id:"configuration"},"Configuration"),Object(o.a)("p",null,"Configuration for the Evolve App Server is specified in a JSON file. The server requires a configuration file to start."),Object(o.a)("p",null,"For details on how to write a configuration file, refer to ",Object(o.a)("a",Object(n.a)({parentName:"p"},{href:"/evolve/docs/evolve-app-server/config"}),"Configuration"),"."),Object(o.a)("hr",null),Object(o.a)("h2",{id:"run"},"Run"),Object(o.a)("p",null,"To start the server using the resulting jar, run:"),Object(o.a)("pre",null,Object(o.a)("code",Object(n.a)({parentName:"pre"},{}),"java -jar evolve-app-server.jar -c path/to/config.json\n")),Object(o.a)("hr",null),Object(o.a)("h2",{id:"test"},"Test"),Object(o.a)("p",null,"To run tests, run:"),Object(o.a)("pre",null,Object(o.a)("code",Object(n.a)({parentName:"pre"},{}),"mvn clean test\n")),Object(o.a)("hr",null),Object(o.a)("h2",{id:"api"},"API"),Object(o.a)("p",null,"When the server is running, it exposes an API than can be used by a client to find information about the app,\nor pass through requests to EWB."),Object(o.a)("p",null,"For thorough API documentation, refer to ",Object(o.a)("a",Object(n.a)({parentName:"p"},{href:"/evolve/docs/evolve-app-server/api"}),"API"),"."),Object(o.a)("hr",null))}u.isMDXComponent=!0}}]);