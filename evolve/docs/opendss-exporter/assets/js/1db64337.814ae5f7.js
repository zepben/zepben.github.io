"use strict";(self.webpackChunkopendss_exporter_doco=self.webpackChunkopendss_exporter_doco||[]).push([[413],{5680:(e,t,n)=>{n.d(t,{xA:()=>c,yg:()=>m});var r=n(6540);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=s(n),f=o,m=u["".concat(l,".").concat(f)]||u[f]||d[f]||i;return n?r.createElement(m,a(a({ref:t},c),{},{components:n})):r.createElement(m,a({ref:t},c))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=f;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[u]="string"==typeof e?e:o,a[1]=p;for(var s=2;s<i;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},3943:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>p,toc:()=>s});var r=n(8168),o=(n(6540),n(5680));const i={id:"overview",title:"Overview",slug:"/"},a="OpenDSS Exporter",p={unversionedId:"overview",id:"overview",title:"Overview",description:"The OpenDSS exporter is a library that allows transforming Zepben CIM models to OpenDSS models.",source:"@site/docs/overview.md",sourceDirName:".",slug:"/",permalink:"/evolve/docs/opendss-exporter/next/",draft:!1,tags:[],version:"current",frontMatter:{id:"overview",title:"Overview",slug:"/"},sidebar:"sidebar"},l={},s=[{value:"Converting CIM to OpenDSS",id:"converting-cim-to-opendss",level:2}],c={toc:s},u="wrapper";function d(e){let{components:t,...n}=e;return(0,o.yg)(u,(0,r.A)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"opendss-exporter"},"OpenDSS Exporter"),(0,o.yg)("p",null,"The OpenDSS exporter is a library that allows transforming Zepben CIM models to OpenDSS models."),(0,o.yg)("p",null,"The ",(0,o.yg)("inlineCode",{parentName:"p"},"com.zepben.opendss.model")," package holds the definition of the OpenDSS model."),(0,o.yg)("h1",{id:"usage"},"Usage"),(0,o.yg)("h2",{id:"converting-cim-to-opendss"},"Converting CIM to OpenDSS"),(0,o.yg)("p",null,"The main function in this library is to convert a CIM NetworkService into an OpenDSS model. This is performed through the\n",(0,o.yg)("inlineCode",{parentName:"p"},"CimToOpenDss")," class."),(0,o.yg)("p",null,"To translate a model, call:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre"},"CimToOpenDss.translate(networkService, ..., generatorConfig)\n")),(0,o.yg)("p",null,"The ",(0,o.yg)("inlineCode",{parentName:"p"},"GeneratorConfig")," can be used to configure specific things about the OpenDss model during translation."),(0,o.yg)("p",null,"Consult the documentation in hosting-capacity-utils for the potential configuration options and their impacts."))}d.isMDXComponent=!0}}]);