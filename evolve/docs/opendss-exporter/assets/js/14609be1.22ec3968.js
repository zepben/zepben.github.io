"use strict";(self.webpackChunkopendss_exporter_doco=self.webpackChunkopendss_exporter_doco||[]).push([[33],{5680:(e,n,a)=>{a.d(n,{xA:()=>g,yg:()=>y});var t=a(6540);function i(e,n,a){return n in e?Object.defineProperty(e,n,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[n]=a,e}function l(e,n){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),a.push.apply(a,t)}return a}function r(e){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?l(Object(a),!0).forEach((function(n){i(e,n,a[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(a,n))}))}return e}function o(e,n){if(null==e)return{};var a,t,i=function(e,n){if(null==e)return{};var a,t,i={},l=Object.keys(e);for(t=0;t<l.length;t++)a=l[t],n.indexOf(a)>=0||(i[a]=e[a]);return i}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(t=0;t<l.length;t++)a=l[t],n.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=t.createContext({}),d=function(e){var n=t.useContext(s),a=n;return e&&(a="function"==typeof e?e(n):r(r({},n),e)),a},g=function(e){var n=d(e.components);return t.createElement(s.Provider,{value:n},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},u=t.forwardRef((function(e,n){var a=e.components,i=e.mdxType,l=e.originalType,s=e.parentName,g=o(e,["components","mdxType","originalType","parentName"]),p=d(a),u=i,y=p["".concat(s,".").concat(u)]||p[u]||m[u]||l;return a?t.createElement(y,r(r({ref:n},g),{},{components:a})):t.createElement(y,r({ref:n},g))}));function y(e,n){var a=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var l=a.length,r=new Array(l);r[0]=u;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o[p]="string"==typeof e?e:i,r[1]=o;for(var d=2;d<l;d++)r[d]=a[d];return t.createElement.apply(null,r)}return t.createElement.apply(null,a)}u.displayName="MDXCreateElement"},9519:(e,n,a)=>{a.r(n),a.d(n,{contentTitle:()=>r,default:()=>p,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var t=a(8168),i=(a(6540),a(5680));const l={},r=void 0,o={type:"mdx",permalink:"/evolve/docs/opendss-exporter/release-notes",source:"@site/src/pages/release-notes.md",description:"Release History",frontMatter:{}},s=[{value:"Release History",id:"release-history",level:4},{value:"Breaking Changes",id:"breaking-changes",level:5},{value:"New Features",id:"new-features",level:5},{value:"Enhancements",id:"enhancements",level:5},{value:"Fixes",id:"fixes",level:5},{value:"Notes",id:"notes",level:5},{value:"Breaking Changes",id:"breaking-changes-1",level:3},{value:"New Features",id:"new-features-1",level:3},{value:"Enhancements",id:"enhancements-1",level:3},{value:"Fixes",id:"fixes-1",level:3},{value:"Notes",id:"notes-1",level:3},{value:"Breaking Changes",id:"breaking-changes-2",level:3},{value:"New Features",id:"new-features-2",level:3},{value:"Enhancements",id:"enhancements-2",level:3},{value:"Fixes",id:"fixes-2",level:3},{value:"Notes",id:"notes-2",level:3},{value:"Breaking Changes",id:"breaking-changes-3",level:5},{value:"New Features",id:"new-features-3",level:5},{value:"Enhancements",id:"enhancements-3",level:5},{value:"Fixes",id:"fixes-3",level:5},{value:"Notes",id:"notes-3",level:5},{value:"Breaking Changes",id:"breaking-changes-4",level:3},{value:"New Features",id:"new-features-4",level:3},{value:"Enhancements",id:"enhancements-4",level:3},{value:"Fixes",id:"fixes-4",level:3},{value:"Notes",id:"notes-4",level:3},{value:"Breaking Changes",id:"breaking-changes-5",level:3},{value:"New Features",id:"new-features-5",level:3},{value:"Enhancements",id:"enhancements-5",level:3},{value:"Fixes",id:"fixes-5",level:3},{value:"Notes",id:"notes-5",level:3},{value:"Breaking Changes",id:"breaking-changes-6",level:3},{value:"New Features",id:"new-features-6",level:3},{value:"Enhancements",id:"enhancements-6",level:3},{value:"Fixes",id:"fixes-6",level:3},{value:"Notes",id:"notes-6",level:3},{value:"Breaking Changes",id:"breaking-changes-7",level:3},{value:"New Features",id:"new-features-7",level:3},{value:"Enhancements",id:"enhancements-7",level:3},{value:"Fixes",id:"fixes-7",level:3},{value:"Notes",id:"notes-7",level:3}],d={toc:s},g="wrapper";function p(e){let{components:n,...a}=e;return(0,i.yg)(g,(0,t.A)({},d,a,{components:n,mdxType:"MDXLayout"}),(0,i.yg)("h4",{id:"release-history"},"Release History"),(0,i.yg)("table",null,(0,i.yg)("thead",{parentName:"table"},(0,i.yg)("tr",{parentName:"thead"},(0,i.yg)("th",{parentName:"tr",align:null},"Version"),(0,i.yg)("th",{parentName:"tr",align:null},"Released"))),(0,i.yg)("tbody",{parentName:"table"},(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},(0,i.yg)("a",{parentName:"td",href:"#v060"},"0.6.0")),(0,i.yg)("td",{parentName:"tr",align:null},(0,i.yg)("inlineCode",{parentName:"td"},"30 July 2025"))),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},(0,i.yg)("a",{parentName:"td",href:"#v050"},"0.5.0")),(0,i.yg)("td",{parentName:"tr",align:null},(0,i.yg)("inlineCode",{parentName:"td"},"26 June 2025"))),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},(0,i.yg)("a",{parentName:"td",href:"#v040"},"0.4.0")),(0,i.yg)("td",{parentName:"tr",align:null},(0,i.yg)("inlineCode",{parentName:"td"},"23 October 2024"))),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},(0,i.yg)("a",{parentName:"td",href:"#v030"},"0.3.0")),(0,i.yg)("td",{parentName:"tr",align:null},(0,i.yg)("inlineCode",{parentName:"td"},"01 September 2024"))),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},(0,i.yg)("a",{parentName:"td",href:"#v020"},"0.2.0")),(0,i.yg)("td",{parentName:"tr",align:null},(0,i.yg)("inlineCode",{parentName:"td"},"09 April 2024"))),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},(0,i.yg)("a",{parentName:"td",href:"#v010"},"0.1.0")),(0,i.yg)("td",{parentName:"tr",align:null},(0,i.yg)("inlineCode",{parentName:"td"},"13 September 2023"))))),(0,i.yg)("hr",null),(0,i.yg)("h5",{id:"breaking-changes"},"Breaking Changes"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"PostgresLoadDataFetcher")," now takes a ",(0,i.yg)("inlineCode",{parentName:"li"},"Instant")," instead of a ",(0,i.yg)("inlineCode",{parentName:"li"},"Date")," for ",(0,i.yg)("inlineCode",{parentName:"li"},"yearStart"),"."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"LoadDataFetcher")," now uses suspend functions."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"PostgresLoadDataFetcher")," now suspends on a cache hit instead of blocking for synchronization."),(0,i.yg)("li",{parentName:"ul"},"Renamed ",(0,i.yg)("inlineCode",{parentName:"li"},"TranslationConfig")," to ",(0,i.yg)("inlineCode",{parentName:"li"},"ModelConfig"),"."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"CimToOpenDss")," now takes a ",(0,i.yg)("inlineCode",{parentName:"li"},"ModelConfig")," as an argument in ",(0,i.yg)("inlineCode",{parentName:"li"},"translate()")," rather than a constructor argument."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"OpenDssTranslator")," now takes a ",(0,i.yg)("inlineCode",{parentName:"li"},"SolveConfig")," and a ",(0,i.yg)("inlineCode",{parentName:"li"},"OutputConfig")," as arguments for ",(0,i.yg)("inlineCode",{parentName:"li"},"translate()")," rather than constructor arguments."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"CimToOpenDss")," now takes an additional boolean flag ",(0,i.yg)("inlineCode",{parentName:"li"},"reportMeterVoltages")," in ",(0,i.yg)("inlineCode",{parentName:"li"},"translate()"),"."),(0,i.yg)("li",{parentName:"ul"},"Three winding transformers with split phase LV are now modelled correctly."),(0,i.yg)("li",{parentName:"ul"},"Model startTime can now be configured via ModelConfig. This allows fixed time models to be written out with the correct timestamp."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"CimToOpenDss::translate")," now returns a ",(0,i.yg)("inlineCode",{parentName:"li"},"CimToOpenDssResult"),", which contains both the OpenDSS model and a mapping from CIM terminals to OpenDSS meter names."),(0,i.yg)("li",{parentName:"ul"},"Removed ",(0,i.yg)("inlineCode",{parentName:"li"},"PostgresLoadDataFetcher"),".")),(0,i.yg)("h5",{id:"new-features"},"New Features"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Added classes to model an OpenDSS circuit."),(0,i.yg)("li",{parentName:"ul"},"Modelled OpenDSS commands (e.g. Clear, New, Solve)."),(0,i.yg)("li",{parentName:"ul"},"Added CIM to OpenDSS model translation."),(0,i.yg)("li",{parentName:"ul"},"Added OpenDSS model writer and OpenDSS to Protobuf translation."),(0,i.yg)("li",{parentName:"ul"},"Added support for load data fetching."),(0,i.yg)("li",{parentName:"ul"},"Added support for power electronics (PV, EV, BESS)."),(0,i.yg)("li",{parentName:"ul"},"Improved split phase detection (XYN secondary is now created as 3-winding transformer)"),(0,i.yg)("li",{parentName:"ul"},"Shunt compensators are now translated to capacitors."),(0,i.yg)("li",{parentName:"ul"},"Feeder load aggregates are now modelled as proxy loads in OpenDSS."),(0,i.yg)("li",{parentName:"ul"},"Substation transformers are now included in the OpenDSS models."),(0,i.yg)("li",{parentName:"ul"},"Regulator properties (e.g. tap changer controls) are now translated."),(0,i.yg)("li",{parentName:"ul"},"Equipment from external feeders are now excluded."),(0,i.yg)("li",{parentName:"ul"},"Added support for config options in the protobuf ",(0,i.yg)("inlineCode",{parentName:"li"},"Job")," message (e.g. ",(0,i.yg)("inlineCode",{parentName:"li"},"voltageBases"),", ",(0,i.yg)("inlineCode",{parentName:"li"},"baseFrequency"),")."),(0,i.yg)("li",{parentName:"ul"},"Added option to enable ",(0,i.yg)("inlineCode",{parentName:"li"},"phaseVolt")," for meters in ",(0,i.yg)("inlineCode",{parentName:"li"},"CimToOpenDss"),"."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"CimToOpenDss::translate")," now returns a mapping from CIM terminals to OpenDSS meter names along with the model.")),(0,i.yg)("h5",{id:"enhancements"},"Enhancements"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"None.")),(0,i.yg)("h5",{id:"fixes"},"Fixes"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Fixed issue where system timezone changes the results by shifting them by a number of hours forwards/backwards."),(0,i.yg)("li",{parentName:"ul"},"Ingress and egress readings are now interpreted in Wh instead of average W over the interval length."),(0,i.yg)("li",{parentName:"ul"},"Fixed tap settings by dividing the ",(0,i.yg)("inlineCode",{parentName:"li"},"tapStepIncrement")," by 100%. Tap settings are now only on winding 1."),(0,i.yg)("li",{parentName:"ul"},"RevBand is now set on RegControls, solving an issue with regulators."),(0,i.yg)("li",{parentName:"ul"},"Fixed issue where ",(0,i.yg)("inlineCode",{parentName:"li"},"baseVoltage")," of transformer ends were ignored in translation from CIM to OpenDSS."),(0,i.yg)("li",{parentName:"ul"},"Fixed incorrect connectivity of loads. Only the phases on the underlying EC/PEC's terminals will be used."),(0,i.yg)("li",{parentName:"ul"},"Fixed issue where ",(0,i.yg)("inlineCode",{parentName:"li"},"maxIter")," and ",(0,i.yg)("inlineCode",{parentName:"li"},"maxControlIter")," are excluded from the OpenDSS script."),(0,i.yg)("li",{parentName:"ul"},"Set model=7 for all Generators.")),(0,i.yg)("h5",{id:"notes"},"Notes"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Removed logging of load fetching progress.\\n\\n---\\n")),(0,i.yg)("h3",{id:"breaking-changes-1"},"Breaking Changes"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Updated the LoadShape message to use a repeated float field rather than a byte array."),(0,i.yg)("li",{parentName:"ul"},"Handle strings in child class parameters rather than InstantiableElement and fix XfmrCode output"),(0,i.yg)("li",{parentName:"ul"},"Added the new ResultsConfig message to encapsulate different Results Types and used it in the Syf and Job messages."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"ModelConfig")," now uses ",(0,i.yg)("inlineCode",{parentName:"li"},"Instant")," instead of a ",(0,i.yg)("inlineCode",{parentName:"li"},"LocalDateTime")," for ",(0,i.yg)("inlineCode",{parentName:"li"},"startTime")," type."),(0,i.yg)("li",{parentName:"ul"},"Updated exporter to support latest changes to the Syf proto message to include measurement zone information."),(0,i.yg)("li",{parentName:"ul"},"Update super pom version to 0.34.1."),(0,i.yg)("li",{parentName:"ul"},"Added ",(0,i.yg)("inlineCode",{parentName:"li"},"GeneratorConfig")," for dynamic configuration from the hosting capacity service. ")),(0,i.yg)("h3",{id:"new-features-1"},"New Features"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Added the new ResultsConfig protobuf message to the SYF message to propagate to the Results Processor."),(0,i.yg)("li",{parentName:"ul"},"Update OutputConfig to work with new ResultsConfig messages."),(0,i.yg)("li",{parentName:"ul"},"Arbitrary JSON configuration is now passed through the Syf to the executor and the results processor."),(0,i.yg)("li",{parentName:"ul"},"Added ability to pass a load scaling factor to the CimToOpenDss for load scaling.")),(0,i.yg)("h3",{id:"enhancements-1"},"Enhancements"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Meter names are prefixed with hv/lv and asset category (feeder head, recloser/fuse/loadbreakswitch/etc., tx, calibration)"),(0,i.yg)("li",{parentName:"ul"},"Added ",(0,i.yg)("inlineCode",{parentName:"li"},"endTime")," property to ",(0,i.yg)("inlineCode",{parentName:"li"},"ModelConfig")," to specify the end of load time period."),(0,i.yg)("li",{parentName:"ul"},"Added ",(0,i.yg)("inlineCode",{parentName:"li"},"fixedTime")," property to ",(0,i.yg)("inlineCode",{parentName:"li"},"ModelConfig")," to specify single hour load time."),(0,i.yg)("li",{parentName:"ul"},"Added ",(0,i.yg)("inlineCode",{parentName:"li"},"timezone")," property to ",(0,i.yg)("inlineCode",{parentName:"li"},"ModelConfig")," to specify timezone for load time data."),(0,i.yg)("li",{parentName:"ul"},"Changed ",(0,i.yg)("inlineCode",{parentName:"li"},"IdentifiedObject.elementUid")," extension to use ",(0,i.yg)("inlineCode",{parentName:"li"},"mRID")," for equality instead of structure when retrieving objects from the map ")),(0,i.yg)("h3",{id:"fixes-1"},"Fixes"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Fixed bug where energy meters are placed on both sides of an LV switch due to being in a loop. Only the terminal directly facing the distribution transformer\nwill get an energy meter."),(0,i.yg)("li",{parentName:"ul"},"Explicitly set conn=wye on loads and generators to stop OpenDSS doing its own thing"),(0,i.yg)("li",{parentName:"ul"},"Force vMaxPu to 2 for PV Generators")),(0,i.yg)("h3",{id:"notes-1"},"Notes"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Calibration meters are now added into the model regardless of whether their corresponding customer has load."),(0,i.yg)("li",{parentName:"ul"},"Updated to version 0.2.0 of the hosting-capacity-utils\\n\\n---\\n")),(0,i.yg)("h3",{id:"breaking-changes-2"},"Breaking Changes"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Looped LV Circuits will no longer have EnergyMeters created for them to avoid EnergyMeters with nonsense results. You will have to infer results from the distribution transformer where looped LV circuits exist.")),(0,i.yg)("h3",{id:"new-features-2"},"New Features"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"GeneratorConfig now includes a 'includeEnergyConsumerMeterGroup' field to include energy consumer meters outside of calibration models."),(0,i.yg)("li",{parentName:"ul"},"Added FixedLoadDataMocker for mocking fixed time points."),(0,i.yg)("li",{parentName:"ul"},"Added support for enabling rudimentary closed loop voltage control through the GeneratorConfig\nWhen ",(0,i.yg)("inlineCode",{parentName:"li"},"closedLoopVRegEnabled")," is true, zone transformers will be configured to provide voltage control based on the voltage at the furthest HV point in the\nfeeder from the zone transformer.")),(0,i.yg)("h3",{id:"enhancements-2"},"Enhancements"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"None.")),(0,i.yg)("h3",{id:"fixes-2"},"Fixes"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Don't create load for PECs on a UsagePoint."),(0,i.yg)("li",{parentName:"ul"},"OpenDSS model IDs are now sanitised - replacing periods and colons with underscores, to avoid the model breaking."),(0,i.yg)("li",{parentName:"ul"},"Fixed issue where generators had their reactive power the wrong sign assigned when considering opendss convention.")),(0,i.yg)("h3",{id:"notes-2"},"Notes"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"None.")),(0,i.yg)("h5",{id:"breaking-changes-3"},"Breaking Changes"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"PostgresLoadDataFetcher")," now takes a ",(0,i.yg)("inlineCode",{parentName:"li"},"LocalDateTime")," instead of a ",(0,i.yg)("inlineCode",{parentName:"li"},"Date")," for ",(0,i.yg)("inlineCode",{parentName:"li"},"yearStart"),"."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"LoadDataFetcher")," now uses suspend functions."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"PostgresLoadDataFetcher")," now suspends on a cache hit instead of blocking for synchronization."),(0,i.yg)("li",{parentName:"ul"},"Renamed ",(0,i.yg)("inlineCode",{parentName:"li"},"TranslationConfig")," to ",(0,i.yg)("inlineCode",{parentName:"li"},"ModelConfig"),"."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"CimToOpenDss")," now takes a ",(0,i.yg)("inlineCode",{parentName:"li"},"ModelConfig")," as an argument in ",(0,i.yg)("inlineCode",{parentName:"li"},"translate()")," rather than a constructor argument."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"OpenDssTranslator")," now takes a ",(0,i.yg)("inlineCode",{parentName:"li"},"SolveConfig")," and a ",(0,i.yg)("inlineCode",{parentName:"li"},"OutputConfig")," as arguments for ",(0,i.yg)("inlineCode",{parentName:"li"},"translate()")," rather than constructor arguments."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"CimToOpenDss")," now takes an additional boolean flag ",(0,i.yg)("inlineCode",{parentName:"li"},"reportMeterVoltages")," in ",(0,i.yg)("inlineCode",{parentName:"li"},"translate()"),"."),(0,i.yg)("li",{parentName:"ul"},"Three winding transformers with split phase LV are now modelled correctly."),(0,i.yg)("li",{parentName:"ul"},"Model startTime can now be configured via ModelConfig. This allows fixed time models to be written out with the correct timestamp."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"CimToOpenDss::translate")," now returns a ",(0,i.yg)("inlineCode",{parentName:"li"},"CimToOpenDssResult"),", which contains both the OpenDSS model and a mapping from CIM terminals to OpenDSS meter names."),(0,i.yg)("li",{parentName:"ul"},"Removed ",(0,i.yg)("inlineCode",{parentName:"li"},"PostgresLoadDataFetcher"),".")),(0,i.yg)("h5",{id:"new-features-3"},"New Features"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Added classes to model an OpenDSS circuit."),(0,i.yg)("li",{parentName:"ul"},"Modelled OpenDSS commands (e.g. Clear, New, Solve)."),(0,i.yg)("li",{parentName:"ul"},"Added CIM to OpenDSS model translation."),(0,i.yg)("li",{parentName:"ul"},"Added OpenDSS model writer and OpenDSS to Protobuf translation."),(0,i.yg)("li",{parentName:"ul"},"Added support for load data fetching."),(0,i.yg)("li",{parentName:"ul"},"Added support for power electronics (PV, EV, BESS)."),(0,i.yg)("li",{parentName:"ul"},"Improved split phase detection (XYN secondary is now created as 3-winding transformer)"),(0,i.yg)("li",{parentName:"ul"},"Shunt compensators are now translated to capacitors."),(0,i.yg)("li",{parentName:"ul"},"Feeder load aggregates are now modelled as proxy loads in OpenDSS."),(0,i.yg)("li",{parentName:"ul"},"Substation transformers are now included in the OpenDSS models."),(0,i.yg)("li",{parentName:"ul"},"Regulator properties (e.g. tap changer controls) are now translated."),(0,i.yg)("li",{parentName:"ul"},"Equipment from external feeders are now excluded."),(0,i.yg)("li",{parentName:"ul"},"Added support for config options in the protobuf ",(0,i.yg)("inlineCode",{parentName:"li"},"Job")," message (e.g. ",(0,i.yg)("inlineCode",{parentName:"li"},"voltageBases"),", ",(0,i.yg)("inlineCode",{parentName:"li"},"baseFrequency"),")."),(0,i.yg)("li",{parentName:"ul"},"Added option to enable ",(0,i.yg)("inlineCode",{parentName:"li"},"phaseVolt")," for meters in ",(0,i.yg)("inlineCode",{parentName:"li"},"CimToOpenDss"),"."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"CimToOpenDss::translate")," now returns a mapping from CIM terminals to OpenDSS meter names along with the model."),(0,i.yg)("li",{parentName:"ul"},"added support for Dzn0 vector group REFCEL Isolation transformer"),(0,i.yg)("li",{parentName:"ul"},"added support for closed loop voltage regulators")),(0,i.yg)("h5",{id:"enhancements-3"},"Enhancements"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"In calibration mode, the Circuit will be modelled with an ideal voltage source rather than one with very small impedance.")),(0,i.yg)("h5",{id:"fixes-3"},"Fixes"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Fixed issue where system timezone changes the results by shifting them by a number of hours forwards/backwards."),(0,i.yg)("li",{parentName:"ul"},"Ingress and egress readings are now interpreted in Wh instead of average W over the interval length."),(0,i.yg)("li",{parentName:"ul"},"Fixed tap settings by dividing the ",(0,i.yg)("inlineCode",{parentName:"li"},"tapStepIncrement")," by 100%. Tap settings are now only on winding 1."),(0,i.yg)("li",{parentName:"ul"},"RevBand is now set on RegControls, solving an issue with regulators."),(0,i.yg)("li",{parentName:"ul"},"Fixed issue where ",(0,i.yg)("inlineCode",{parentName:"li"},"baseVoltage")," of transformer ends were ignored in translation from CIM to OpenDSS."),(0,i.yg)("li",{parentName:"ul"},"Fixed incorrect connectivity of loads. Only the phases on the underlying EC/PEC's terminals will be used."),(0,i.yg)("li",{parentName:"ul"},"Fixed issue where ",(0,i.yg)("inlineCode",{parentName:"li"},"maxIter")," and ",(0,i.yg)("inlineCode",{parentName:"li"},"maxControlIter")," are excluded from the OpenDSS script."),(0,i.yg)("li",{parentName:"ul"},"Set model=7 for all Generators."),(0,i.yg)("li",{parentName:"ul"},"Updated code to take into account the model step size when calculating the number of steps for the model"),(0,i.yg)("li",{parentName:"ul"},"Skip scaling proxy feeders that are missing a demand forecast.")),(0,i.yg)("h5",{id:"notes-3"},"Notes"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Removed logging of load fetching progress.\\n\\n---\\n")),(0,i.yg)("h3",{id:"breaking-changes-4"},"Breaking Changes"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Updated code to account for changes to ewb-grpc and hosting-capacity-utils. Now all configuration has been moved to data classes in the hosting-capacity-utils and they get stored in the proto messages as compressed, base64'd encoded json."),(0,i.yg)("li",{parentName:"ul"},"Moved Load related classes to hosting capacity utils. You will need to specify hosting-capacity-utils and re-import them if you were using them."),(0,i.yg)("li",{parentName:"ul"},"The evolve-grpc version now includes the failure opendss report type.")),(0,i.yg)("h3",{id:"new-features-4"},"New Features"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"None.")),(0,i.yg)("h3",{id:"enhancements-4"},"Enhancements"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"None.")),(0,i.yg)("h3",{id:"fixes-4"},"Fixes"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"PV, EV, and BESS in the model will now contain their feeder mRID in their ID - a side effect of supporting scenario models for multiple feeders (from hosting-capacity-utils update)."),(0,i.yg)("li",{parentName:"ul"},"The default SwitchMeterPlacementConfig will now correctly match all Reclosers.")),(0,i.yg)("h3",{id:"notes-4"},"Notes"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Moved some classes from model processor to this library (where they should belong)."),(0,i.yg)("li",{parentName:"ul"},"Intervention protobuf definitions now available in Syf and Job protos."),(0,i.yg)("li",{parentName:"ul"},"evolve-sdk updated to 0.23.0"),(0,i.yg)("li",{parentName:"ul"},"Now use normalPhases directly from the Terminal rather than TracedPhases")),(0,i.yg)("h3",{id:"breaking-changes-5"},"Breaking Changes"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Updated the LoadShape message to use a repeated float field rather than a byte array."),(0,i.yg)("li",{parentName:"ul"},"Handle strings in child class parameters rather than InstantiableElement and fix XfmrCode output"),(0,i.yg)("li",{parentName:"ul"},"Added the new ResultsConfig message to encapsulate different Results Types and used it in the Syf and Job messages."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"ModelConfig")," now uses ",(0,i.yg)("inlineCode",{parentName:"li"},"Instant")," instead of a ",(0,i.yg)("inlineCode",{parentName:"li"},"LocalDateTime")," for ",(0,i.yg)("inlineCode",{parentName:"li"},"startTime")," type."),(0,i.yg)("li",{parentName:"ul"},"Updated exporter to support latest changes to the Syf proto message to include measurement zone information."),(0,i.yg)("li",{parentName:"ul"},"Update super pom version to 0.34.1."),(0,i.yg)("li",{parentName:"ul"},"Added ",(0,i.yg)("inlineCode",{parentName:"li"},"GeneratorConfig")," for dynamic configuration from the hosting capacity service. ")),(0,i.yg)("h3",{id:"new-features-5"},"New Features"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Added the new ResultsConfig protobuf message to the SYF message to propagate to the Results Processor."),(0,i.yg)("li",{parentName:"ul"},"Update OutputConfig to work with new ResultsConfig messages."),(0,i.yg)("li",{parentName:"ul"},"Arbitrary JSON configuration is now passed through the Syf to the executor and the results processor."),(0,i.yg)("li",{parentName:"ul"},"Added ability to pass a load scaling factor to the CimToOpenDss for load scaling."),(0,i.yg)("li",{parentName:"ul"},"Added support for LoadShapes with reactive power profiles."),(0,i.yg)("li",{parentName:"ul"},"Power factor is now nullable and if defined in the GeneratorConfig it will take precedence over the reactive power profile.")),(0,i.yg)("h3",{id:"enhancements-5"},"Enhancements"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Meter names are prefixed with hv/lv and asset category (feeder head, recloser/fuse/loadbreakswitch/etc., tx, calibration)"),(0,i.yg)("li",{parentName:"ul"},"Added ",(0,i.yg)("inlineCode",{parentName:"li"},"endTime")," property to ",(0,i.yg)("inlineCode",{parentName:"li"},"ModelConfig")," to specify the end of load time period."),(0,i.yg)("li",{parentName:"ul"},"Added ",(0,i.yg)("inlineCode",{parentName:"li"},"fixedTime")," property to ",(0,i.yg)("inlineCode",{parentName:"li"},"ModelConfig")," to specify single hour load time."),(0,i.yg)("li",{parentName:"ul"},"Added ",(0,i.yg)("inlineCode",{parentName:"li"},"timezone")," property to ",(0,i.yg)("inlineCode",{parentName:"li"},"ModelConfig")," to specify timezone for load time data."),(0,i.yg)("li",{parentName:"ul"},"Changed ",(0,i.yg)("inlineCode",{parentName:"li"},"IdentifiedObject.elementUid")," extension to use ",(0,i.yg)("inlineCode",{parentName:"li"},"mRID")," for equality instead of structure when retrieving objects from the map ")),(0,i.yg)("h3",{id:"fixes-5"},"Fixes"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Fixed bug where energy meters are placed on both sides of an LV switch due to being in a loop. Only the terminal directly facing the distribution transformer\nwill get an energy meter."),(0,i.yg)("li",{parentName:"ul"},"Explicitly set conn=wye on loads and generators to stop OpenDSS doing its own thing"),(0,i.yg)("li",{parentName:"ul"},"Force vMaxPu to 2 for PV Generators")),(0,i.yg)("h3",{id:"notes-5"},"Notes"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Calibration meters are now added into the model regardless of whether their corresponding customer has load."),(0,i.yg)("li",{parentName:"ul"},"Updated to version 0.2.0 of the hosting-capacity-utils\\n\\n---\\n")),(0,i.yg)("h3",{id:"breaking-changes-6"},"Breaking Changes"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"From hosting-capacity-utils:",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Added field ",(0,i.yg)("inlineCode",{parentName:"li"},"intervention: InterventionConfig? = null")," to ",(0,i.yg)("inlineCode",{parentName:"li"},"WorkPackageConfig")," and ",(0,i.yg)("inlineCode",{parentName:"li"},"WorkPackageRequest"),"."),(0,i.yg)("li",{parentName:"ul"},"Added optional field ",(0,i.yg)("inlineCode",{parentName:"li"},"transformerTapSettings")," to ",(0,i.yg)("inlineCode",{parentName:"li"},"ModelConfig"),"."),(0,i.yg)("li",{parentName:"ul"},"All timestamp strings being parsed to Kotlin/Java types must include seconds. This is due to the update of kotlinx-datetime to 0.6.1."),(0,i.yg)("li",{parentName:"ul"},"Added new configuration class ",(0,i.yg)("inlineCode",{parentName:"li"},"SyfConfig")," to group variables moved out of ",(0,i.yg)("inlineCode",{parentName:"li"},"WorkPackageRequest")," and ",(0,i.yg)("inlineCode",{parentName:"li"},"WorkPackageConfig"),".",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"ForecastConfig")," - Functionally similar to old set up where it holds a list of feeders, years, scenarios and load time."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"FeederConfigs")," - Holds a list of individual feeder settings so each feeder can run a hosting capacity study with distinct settings."))),(0,i.yg)("li",{parentName:"ul"},"Added new configuration class ",(0,i.yg)("inlineCode",{parentName:"li"},"LoadTime")," and ",(0,i.yg)("inlineCode",{parentName:"li"},"LocalLoadTime")," which holds load specific variables.",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"FixedTime"),"/",(0,i.yg)("inlineCode",{parentName:"li"},"LocalFixedTime")," - Fixed time setting for the study, includes an optional map of ",(0,i.yg)("inlineCode",{parentName:"li"},"FixedTimeLoadOverrides"),"."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"TimePeriod"),"/",(0,i.yg)("inlineCode",{parentName:"li"},"LocalTimePeriod")," - Time period setting for the study, includes an optional map of ",(0,i.yg)("inlineCode",{parentName:"li"},"TimePEriodLoadOverrides"),"."))),(0,i.yg)("li",{parentName:"ul"},"Major refactoring of configuration.",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"WorkPackageRequest"),(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Moved ",(0,i.yg)("inlineCode",{parentName:"li"},"feeders"),", ",(0,i.yg)("inlineCode",{parentName:"li"},"years"),", ",(0,i.yg)("inlineCode",{parentName:"li"},"scenarios"),", ",(0,i.yg)("inlineCode",{parentName:"li"},"timePeriod")," and ",(0,i.yg)("inlineCode",{parentName:"li"},"fixedTime")," into ",(0,i.yg)("inlineCode",{parentName:"li"},"SyfConfig")," and ",(0,i.yg)("inlineCode",{parentName:"li"},"LocalLoadTime"),"."))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"WorkPackageConfig"),(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Moved ",(0,i.yg)("inlineCode",{parentName:"li"},"feeders"),", ",(0,i.yg)("inlineCode",{parentName:"li"},"years"),", ",(0,i.yg)("inlineCode",{parentName:"li"},"scenarios"),", ",(0,i.yg)("inlineCode",{parentName:"li"},"timePeriod")," and ",(0,i.yg)("inlineCode",{parentName:"li"},"fixedTime")," into ",(0,i.yg)("inlineCode",{parentName:"li"},"SyfConfig")," and ",(0,i.yg)("inlineCode",{parentName:"li"},"LocalLoadTime"),"."))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"CommonConfig"),(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Moved ",(0,i.yg)("inlineCode",{parentName:"li"},"timePeriod")," and ",(0,i.yg)("inlineCode",{parentName:"li"},"fixedTime")," into ",(0,i.yg)("inlineCode",{parentName:"li"},"LoadTime"),"."))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"ModelConfig"),(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Moved ",(0,i.yg)("inlineCode",{parentName:"li"},"fixedTimeLoadOverride")," and ",(0,i.yg)("inlineCode",{parentName:"li"},"timePeriodLoadOverride")," into ",(0,i.yg)("inlineCode",{parentName:"li"},"LoadTime")," and ",(0,i.yg)("inlineCode",{parentName:"li"},"LocalLoadTime"))))))))),(0,i.yg)("h3",{id:"new-features-6"},"New Features"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Added field ",(0,i.yg)("inlineCode",{parentName:"li"},"CimToOpenDssResult.conductingEquipmentToLoadUIDs")," to support load reshaping after running ",(0,i.yg)("inlineCode",{parentName:"li"},"CimToOpenDss.translate()"),"."),(0,i.yg)("li",{parentName:"ul"},"Distribution Transformers will now create RegControl in the model when tap changer control is present. "),(0,i.yg)("li",{parentName:"ul"},"Added new classes to support LvStatCom intervention.",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"InvControl")," - an InvControl controls all STATCOM pvsystems"),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"PvSystem")," - representation of a pv system"),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"XYCurve")," - a control curve of an InvControl"))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"CimToOpenDss.translate()")," now takes an optional ",(0,i.yg)("inlineCode",{parentName:"li"},"LvStatComInstance"),". When specified, a ",(0,i.yg)("inlineCode",{parentName:"li"},"PvSystem")," is created for each ",(0,i.yg)("inlineCode",{parentName:"li"},"StaticVarCompensator")," in the\nCIM model with the electrical properties listed in the ",(0,i.yg)("inlineCode",{parentName:"li"},"LvStatComInstance"),"."),(0,i.yg)("li",{parentName:"ul"},"Distribution Transformers will now create RegControl in the model when tap changer control is present."),(0,i.yg)("li",{parentName:"ul"},"Supports passing of default load data to be used when no load data is found in the database. "),(0,i.yg)("li",{parentName:"ul"},"From hosting-capacity-utils:",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Added intervention config to work packages (config and request DTOs). This config is relevant for both the PRRP and the model generator."))),(0,i.yg)("li",{parentName:"ul"},"Adds access to ",(0,i.yg)("inlineCode",{parentName:"li"},"PhaseRebalanceProcessor")," for intervention."),(0,i.yg)("li",{parentName:"ul"},"Distribution Transformers will now create RegControl in the model when tap changer control is present."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"CimToOpenDss.translate()")," now takes an optional list of ",(0,i.yg)("inlineCode",{parentName:"li"},"BessAllocation"),". When specified, a ",(0,i.yg)("inlineCode",{parentName:"li"},"Storage"),", ",(0,i.yg)("inlineCode",{parentName:"li"},"StorageController"),", and ",(0,i.yg)("inlineCode",{parentName:"li"},"XYCurve")," are created and\nadded to the model. If the bess's control mode is profile, then a ",(0,i.yg)("inlineCode",{parentName:"li"},"LoadShape")," object will also be assigned or created."),(0,i.yg)("li",{parentName:"ul"},"Added new classes to support LvStatCom intervention.",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"Storage")," - a class that represent an energy storage"),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"StorageController")," - a control for energy storages"))),(0,i.yg)("li",{parentName:"ul"},"A list of upstream meter zones is now included in each ",(0,i.yg)("inlineCode",{parentName:"li"},"MeterZoneInfo")," returned by ",(0,i.yg)("inlineCode",{parentName:"li"},"calculateMeterZoneInfos"),"."),(0,i.yg)("li",{parentName:"ul"},"Added functionality to take in ",(0,i.yg)("inlineCode",{parentName:"li"},"TimePeriodLoadOverride")," or ",(0,i.yg)("inlineCode",{parentName:"li"},"FixedTimeLoadOverride")," to override load profile of specific meter.")),(0,i.yg)("h3",{id:"enhancements-6"},"Enhancements"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Update to utilize new tracing functionality"),(0,i.yg)("li",{parentName:"ul"},"Added support to ",(0,i.yg)("inlineCode",{parentName:"li"},"TestNetworkBuilder")," for:",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"withClamp")," - Adds a clamp to the previously added ",(0,i.yg)("inlineCode",{parentName:"li"},"AcLineSegment")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"withCut")," - Adds a cut to the previously added ",(0,i.yg)("inlineCode",{parentName:"li"},"AcLineSegment")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"connectTo")," - Connects the previously added item, rather than having to specify it again in ",(0,i.yg)("inlineCode",{parentName:"li"},"connect"),"."))),(0,i.yg)("li",{parentName:"ul"},"Skip creating ",(0,i.yg)("inlineCode",{parentName:"li"},"Load"),"s and ",(0,i.yg)("inlineCode",{parentName:"li"},"Generator"),"s for ",(0,i.yg)("inlineCode",{parentName:"li"},"EnergyConsumer"),"s and ",(0,i.yg)("inlineCode",{parentName:"li"},"PowerElectronicsConnection"),"s with missing phases.")),(0,i.yg)("h3",{id:"fixes-6"},"Fixes"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"From hosting-capacity-utils: Circuit impedance is now scaled by the squared voltage ratio between the primary and secondary windings of inserted virtual transformer."),(0,i.yg)("li",{parentName:"ul"},"Fix incorrect ",(0,i.yg)("inlineCode",{parentName:"li"},"minTap")," and ",(0,i.yg)("inlineCode",{parentName:"li"},"maxTap")," settings for substation transformer. ",(0,i.yg)("inlineCode",{parentName:"li"},"minTap")," and ",(0,i.yg)("inlineCode",{parentName:"li"},"maxTap")," should be specified in terms of pu volts rather than ratios. As a result minTap should always be less than maxTap.",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Tap settings are now always set on the primary winding rather than the secondary"))),(0,i.yg)("li",{parentName:"ul"},"Increase rated current of switches to 1000A to avoid unknown switch ratings causing constraints to be identified in the results\\"),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"SetDirection")," now correctly sets directions for networks with ",(0,i.yg)("inlineCode",{parentName:"li"},"BusbarSection"),", ",(0,i.yg)("inlineCode",{parentName:"li"},"Cut")," and ",(0,i.yg)("inlineCode",{parentName:"li"},"Clamp"),"."),(0,i.yg)("li",{parentName:"ul"},"The follow fixes were added to Traversal and NetworkTrace:",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"canStopAtStartItem")," now works for branching traversals."),(0,i.yg)("li",{parentName:"ul"},"Traversal start items are added to the queue before traversal starts, so that the start items honour the queue type order."),(0,i.yg)("li",{parentName:"ul"},"Stop conditions on the ",(0,i.yg)("inlineCode",{parentName:"li"},"NetworkTrace")," now are checked based on a step type, like ",(0,i.yg)("inlineCode",{parentName:"li"},"QueueCondition")," does, rather than by checking ",(0,i.yg)("inlineCode",{parentName:"li"},"canActionItem"),"."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"Cut")," and ",(0,i.yg)("inlineCode",{parentName:"li"},"Clamp")," are now correctly supported in ",(0,i.yg)("inlineCode",{parentName:"li"},"SetDirection")," and ",(0,i.yg)("inlineCode",{parentName:"li"},"DirectionCondition"),"."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"NetworkTrace")," now handles starting on ",(0,i.yg)("inlineCode",{parentName:"li"},"Cut")," , ",(0,i.yg)("inlineCode",{parentName:"li"},"Clamp"),", and ",(0,i.yg)("inlineCode",{parentName:"li"},"AcLineSegment")," and their terminals in a explicit / sensible way."),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"NetworkTracePathProvider")," now correctly handles next paths when starting on a ",(0,i.yg)("inlineCode",{parentName:"li"},"Clamp")," terminal."))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"NetworkTraceStepPathProvider")," now correctly handles:",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Next paths when starting on a ",(0,i.yg)("inlineCode",{parentName:"li"},"Clamp")," terminal."),(0,i.yg)("li",{parentName:"ul"},"Traversing AcLineSegments with single cuts or clamps."))),(0,i.yg)("li",{parentName:"ul"},"Properly handle irregular traced phases in the OpenDSS bus connections e.g. ",(0,i.yg)("inlineCode",{parentName:"li"},"bus.2.3.1")," for traced phases A ","\u2192"," B, B ","\u2192"," C, C ","\u2192"," A."),(0,i.yg)("li",{parentName:"ul"},"Customers without A/B/C phases are excluded when applying scenarios, preventing problems resulting from missing phases."),(0,i.yg)("li",{parentName:"ul"},"mRIDs with spaces in them will now be replaced with underscores.")),(0,i.yg)("h3",{id:"notes-6"},"Notes"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Updated ",(0,i.yg)("inlineCode",{parentName:"li"},"hosting-capacity-utils")," version to one that supports the following interventions:",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Tap optimization"),(0,i.yg)("li",{parentName:"ul"},"Phase rebalancing"),(0,i.yg)("li",{parentName:"ul"},"DVMS"))),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"evolve-sdk")," is now a transitive dependency via ",(0,i.yg)("inlineCode",{parentName:"li"},"hosting-capacity-utils"),".",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},"Support up to evolve-sdk-jvm-0.26.0\\n\\n---\\n")))),(0,i.yg)("h3",{id:"breaking-changes-7"},"Breaking Changes"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"None.")),(0,i.yg)("h3",{id:"new-features-7"},"New Features"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Added ",(0,i.yg)("inlineCode",{parentName:"li"},"ctPrimScalingFactor")," to ",(0,i.yg)("inlineCode",{parentName:"li"},"ModelConfig")," to allow CTPrim calculation when creating zone sub transformers when proxy load is not in use.")),(0,i.yg)("h3",{id:"enhancements-7"},"Enhancements"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"Changed ",(0,i.yg)("inlineCode",{parentName:"li"},"fetchLoadTime")," variable in both ",(0,i.yg)("inlineCode",{parentName:"li"},"LoadTime")," and ",(0,i.yg)("inlineCode",{parentName:"li"},"LocalLoadTime")," to ",(0,i.yg)("inlineCode",{parentName:"li"},"loadTime")," for naming consistency and ease of use."),(0,i.yg)("li",{parentName:"ul"},"Add support for load profile set up with ",(0,i.yg)("inlineCode",{parentName:"li"},"FixedTimeLoadOverride")," instead of only supporting a single value for each variable."),(0,i.yg)("li",{parentName:"ul"},"Update load fetcher to work with the new schema update."),(0,i.yg)("li",{parentName:"ul"},"Separate load and generator vMinPu and vMaxPu configuration so generator no longer uses value from load settings. New variables are as follows:",(0,i.yg)("ul",{parentName:"li"},(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"loadVMinPu")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"loadVMaxPu")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"genVMinPu")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)("inlineCode",{parentName:"li"},"genVMaxPu"))))),(0,i.yg)("h3",{id:"fixes-7"},"Fixes"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"None.")),(0,i.yg)("h3",{id:"notes-7"},"Notes"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},"None.\\n\\n---\\n")))}p.isMDXComponent=!0}}]);