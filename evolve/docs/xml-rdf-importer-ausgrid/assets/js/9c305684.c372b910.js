"use strict";(self.webpackChunkxml_rdf_network_importer_doco=self.webpackChunkxml_rdf_network_importer_doco||[]).push([[810],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(n),g=o,m=d["".concat(l,".").concat(g)]||d[g]||u[g]||a;return n?r.createElement(m,i(i({ref:t},p),{},{components:n})):r.createElement(m,i({ref:t},p))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=g;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},1581:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var r=n(7462),o=(n(7294),n(3905));const a={id:"overview",title:"Overview",slug:"/"},i=void 0,s={unversionedId:"overview",id:"version-0.1.0/overview",title:"Overview",description:"This tool provides a way to generate CIM EVOLVE network models based on XML RDF network data.",source:"@site/versioned_docs/version-0.1.0/overview.mdx",sourceDirName:".",slug:"/",permalink:"/evolve/docs/xml-rdf-network-importer/0.1.0/",draft:!1,tags:[],version:"0.1.0",frontMatter:{id:"overview",title:"Overview",slug:"/"},sidebar:"someSidebar"},l={},c=[{value:"AusGrid XML RDF to EVOLVE Profile Mapping",id:"ausgrid-xml-rdf-to-evolve-profile-mapping",level:2},{value:"Mappings:",id:"mappings",level:2},{value:"WireInfo",id:"wireinfo",level:3},{value:"CircuitType and Feeders",id:"circuittype-and-feeders",level:3},{value:"Rated Voltage to BaseVoltage",id:"rated-voltage-to-basevoltage",level:3},{value:"ServiceLocation to EnergyConsumer",id:"servicelocation-to-energyconsumer",level:3},{value:"FeederObject and PowerTransformers",id:"feederobject-and-powertransformers",level:3},{value:"Post-Mapping",id:"post-mapping",level:2},{value:"DiagramObject Creation",id:"diagramobject-creation",level:3},{value:"Location Creation",id:"location-creation",level:3},{value:"PerLengthSequenceImpedance Creation",id:"perlengthsequenceimpedance-creation",level:3}],p={toc:c},d="wrapper";function u(e){let{components:t,...n}=e;return(0,o.kt)(d,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"This tool provides a way to generate CIM EVOLVE network models based on XML RDF network data."),(0,o.kt)("h2",{id:"ausgrid-xml-rdf-to-evolve-profile-mapping"},"AusGrid XML RDF to EVOLVE Profile Mapping"),(0,o.kt)("p",null,"For all CIM classes, the mapping between AusGrid's XML RDF data and the EVOLVE Profile are one-to-one unless otherwise specified below.\nTo view the implemented EVOLVE Profile CIM classes refer to the ",(0,o.kt)("span",null,(0,o.kt)("a",{href:"https://zepben.github.io/evolve/docs/cim/evolve/",target:"_blank"},"EVOLVE Profile Documentation")),"."),(0,o.kt)("h2",{id:"mappings"},"Mappings:"),(0,o.kt)("h3",{id:"wireinfo"},"WireInfo"),(0,o.kt)("p",null,"In AusGrid's data we find that ",(0,o.kt)("strong",{parentName:"p"},"WireInfo")," is a concrete class as opposed the EVOLVE Profile's ",(0,o.kt)("span",null,(0,o.kt)("a",{href:"https://zepben.github.io/evolve/docs/cim/evolve/IEC61968/AssetInfo/WireInfo/",target:"_blank"},"WireInfo"))," which is abstract with two concrete subclasses: ",(0,o.kt)("span",null,(0,o.kt)("a",{href:"https://zepben.github.io/evolve/docs/cim/evolve/IEC61968/AssetInfo/OverheadWireInfo/",target:"_blank"},"OverheadWireInfo"))," and ",(0,o.kt)("span",null,(0,o.kt)("a",{href:"https://zepben.github.io/evolve/docs/cim/evolve/IEC61968/AssetInfo/CableInfo/",target:"_blank"},"CableInfo")),"."),(0,o.kt)("p",null,"The difference between these two classes comes into play when associated with an ",(0,o.kt)("span",null,(0,o.kt)("a",{href:"https://zepben.github.io/evolve/docs/cim/evolve/IEC61970/Base/Wires/ACLineSegment/",target:"_blank"},"AcLineSegment")),", an ",(0,o.kt)("strong",{parentName:"p"},"AcLineSegment")," associated to an instance of ",(0,o.kt)("strong",{parentName:"p"},"OverheadWireInfo")," is flagged as being an overhead line and when associated to an instance of ",(0,o.kt)("strong",{parentName:"p"},"CableInfo")," it is flagged as an underground line."),(0,o.kt)("p",null,"In AusGrid's data the information specifying whether an AcLineSegment is overhead or underground is found in ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},"sedms:PowerSystemResource.underground"))," ( Schneider Electric DMS extension ) and it is used to instantiate the correct subclass of ",(0,o.kt)("strong",{parentName:"p"},"WireInfo")," when mapping to the EVOLVE Profile."),(0,o.kt)("h3",{id:"circuittype-and-feeders"},"CircuitType and Feeders"),(0,o.kt)("p",null,"Due to the AusGrid's ",(0,o.kt)("strong",{parentName:"p"},"Circuit")," class representing as far as we can tell the equivalent of the ",(0,o.kt)("span",null,(0,o.kt)("a",{href:"https://zepben.github.io/evolve/docs/cim/evolve/IEC61970/Base/Core/EquipmentContainer/",target:"_blank"},"EquipmentContainer"))," class in the EVOLVE Profile, we only process the Circuits that have a ",(0,o.kt)("strong",{parentName:"p"},"CircuitType")," of ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},"'Feeder'"))," to create instances of ",(0,o.kt)("span",null,(0,o.kt)("a",{href:"https://zepben.github.io/evolve/docs/cim/evolve/IEC61970/Base/Core/Feeder/",target:"_blank"},"Feeder")),"."),(0,o.kt)("h3",{id:"rated-voltage-to-basevoltage"},"Rated Voltage to BaseVoltage"),(0,o.kt)("p",null,"Due to AusGrid's data not containing the class ",(0,o.kt)("span",null,(0,o.kt)("a",{href:"https://zepben.github.io/evolve/docs/cim/evolve/IEC61970/Base/Core/BaseVoltage/",target:"_blank"},"BaseVoltage"))," we make use of ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},"ConductingEquipment.ratedVoltage"))," value ( Schneider Electric DMS extension ) to create instances of ",(0,o.kt)("strong",{parentName:"p"},"BaseVoltage")," for ",(0,o.kt)("span",null,(0,o.kt)("a",{href:"https://zepben.github.io/evolve/docs/cim/evolve/IEC61970/Base/Core/ConductingEquipment/",target:"_blank"},"ConductingEquipment")),"."),(0,o.kt)("h3",{id:"servicelocation-to-energyconsumer"},"ServiceLocation to EnergyConsumer"),(0,o.kt)("p",null,"Even though AusGrid's data contains a class called ServiceLocation which maps to a CIM class, the attribution in AusGrid's ServiceLocation does not conform to CIM so we mapped instances of ServiceLocation in AusGrid data to ",(0,o.kt)("span",null,(0,o.kt)("a",{href:"https://zepben.github.io/evolve/docs/cim/evolve/IEC61970/Base/Wires/EnergyConsumer/",target:"_blank"},"EnergyConsumer")),"."),(0,o.kt)("h3",{id:"feederobject-and-powertransformers"},"FeederObject and PowerTransformers"),(0,o.kt)("p",null,"Distribution substations in AusGrid's data are represented by the class FeederObject. We use the FeederObject's DiagramObject to generate diagram objects for the instances of PowerTransformers after being mapped to the EVOLVE Profile."),(0,o.kt)("h2",{id:"post-mapping"},"Post-Mapping"),(0,o.kt)("h3",{id:"diagramobject-creation"},"DiagramObject Creation"),(0,o.kt)("p",null,"After mapping all classes supported by the EVOLVE Profile we try to generate DiagramObject's for any piece of ConductingEquipment connected to an AcLineSegment that has no DiagramObjects already."),(0,o.kt)("h3",{id:"location-creation"},"Location Creation"),(0,o.kt)("p",null,"After generating the post-mapping diagram objects we generate a location (if one is not already present) for every piece of conducting equipment with a diagram object and use the position points in the diagram object to create the coordinates for the Location instance."),(0,o.kt)("h3",{id:"perlengthsequenceimpedance-creation"},"PerLengthSequenceImpedance Creation"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"PerLengthSequenceImpedance"),"s in AusGrid data seem to all be zero-impedance. Specify ",(0,o.kt)("strong",{parentName:"p"},'"lineCodeCsv"')," in the network config to point to a CSV containing line code data to ingest the ",(0,o.kt)("strong",{parentName:"p"},"PerLengthSequenceImpedance"),"s separately."))}u.isMDXComponent=!0}}]);