"use strict";(self.webpackChunkzepben_commons_doco=self.webpackChunkzepben_commons_doco||[]).push([[5312],{1470:(e,t,r)=>{r.d(t,{A:()=>k});var n=r(8168),a=r(6540),l=r(53),i=r(3104),o=r(6347),s=r(7485),u=r(1682),c=r(9466);function p(e){return function(e){return a.Children.map(e,e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})}(e).map(e=>{let{props:{value:t,label:r,attributes:n,default:a}}=e;return{value:t,label:r,attributes:n,default:a}})}function m(e){const{values:t,children:r}=e;return(0,a.useMemo)(()=>{const e=null!=t?t:p(r);return function(e){const t=(0,u.X)(e,(e,t)=>e.value===t.value);if(t.length>0)throw new Error('Docusaurus error: Duplicate values "'+t.map(e=>e.value).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e},[t,r])}function d(e){let{value:t,tabValues:r}=e;return r.some(e=>e.value===t)}function f(e){let{queryString:t=!1,groupId:r}=e;const n=(0,o.W6)(),l=function(e){let{queryString:t=!1,groupId:r}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=r?r:null}({queryString:t,groupId:r});return[(0,s.aZ)(l),(0,a.useCallback)(e=>{if(!l)return;const t=new URLSearchParams(n.location.search);t.set(l,e),n.replace(Object.assign({},n.location,{search:t.toString()}))},[l,n])]}function g(e){const{defaultValue:t,queryString:r=!1,groupId:n}=e,l=m(e),[i,o]=(0,a.useState)(()=>function(e){var t;let{defaultValue:r,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(r){if(!d({value:r,tabValues:n}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+r+'" but none of its children has the corresponding value. Available values are: '+n.map(e=>e.value).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return r}const a=null!=(t=n.find(e=>e.default))?t:n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:l})),[s,u]=f({queryString:r,groupId:n}),[p,g]=function(e){let{groupId:t}=e;const r=function(e){return e?"docusaurus.tab."+e:null}(t),[n,l]=(0,c.Dv)(r);return[n,(0,a.useCallback)(e=>{r&&l.set(e)},[r,l])]}({groupId:n}),y=(()=>{const e=null!=s?s:p;return d({value:e,tabValues:l})?e:null})();(0,a.useLayoutEffect)(()=>{y&&o(y)},[y]);return{selectedValue:i,selectValue:(0,a.useCallback)(e=>{if(!d({value:e,tabValues:l}))throw new Error("Can't select invalid tab value="+e);o(e),u(e),g(e)},[u,g,l]),tabValues:l}}var y=r(2303);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function v(e){let{className:t,block:r,selectedValue:o,selectValue:s,tabValues:u}=e;const c=[],{blockElementScrollPositionUntilNextRender:p}=(0,i.a_)(),m=e=>{const t=e.currentTarget,r=c.indexOf(t),n=u[r].value;n!==o&&(p(t),s(n))},d=e=>{var t;let r=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{var n;const t=c.indexOf(e.currentTarget)+1;r=null!=(n=c[t])?n:c[0];break}case"ArrowLeft":{var a;const t=c.indexOf(e.currentTarget)-1;r=null!=(a=c[t])?a:c[c.length-1];break}}null==(t=r)||t.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.A)("tabs",{"tabs--block":r},t)},u.map(e=>{let{value:t,label:r,attributes:i}=e;return a.createElement("li",(0,n.A)({role:"tab",tabIndex:o===t?0:-1,"aria-selected":o===t,key:t,ref:e=>c.push(e),onKeyDown:d,onClick:m},i,{className:(0,l.A)("tabs__item",b.tabItem,null==i?void 0:i.className,{"tabs__item--active":o===t})}),null!=r?r:t)}))}function h(e){let{lazy:t,children:r,selectedValue:n}=e;if(r=Array.isArray(r)?r:[r],t){const e=r.find(e=>e.props.value===n);return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},r.map((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==n})))}function w(e){const t=g(e);return a.createElement("div",{className:(0,l.A)("tabs-container",b.tabList)},a.createElement(v,(0,n.A)({},e,t)),a.createElement(h,(0,n.A)({},e,t)))}function k(e){const t=(0,y.A)();return a.createElement(w,(0,n.A)({key:String(t)},e))}},1591:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>m,contentTitle:()=>c,default:()=>y,frontMatter:()=>u,metadata:()=>p,toc:()=>d});var n=r(8168),a=r(8587),l=(r(6540),r(5680)),i=r(1470),o=r(9365);const s=["components"],u={id:"network-simplifier",title:"Network Simplifier"},c=void 0,p={unversionedId:"network-simplifier",id:"version-1.0.1/network-simplifier",title:"Network Simplifier",description:"The NetworkSimplifier simplifies a CIM network model to prepare it for direct translation to a bus-branch model (e.g. OpenDSS).",source:"@site/versioned_docs/version-1.0.1/network-simplifier.mdx",sourceDirName:".",slug:"/network-simplifier",permalink:"/evolve/docs/commons/1.0.1/network-simplifier",draft:!1,tags:[],version:"1.0.1",frontMatter:{id:"network-simplifier",title:"Network Simplifier"},sidebar:"someSidebar",previous:{title:"Metrics Creators",permalink:"/evolve/docs/commons/1.0.1/metrics-creators"},next:{title:"Metrics for Issues",permalink:"/evolve/docs/commons/1.0.1/metrics-for-issues"}},m={},d=[{value:"Usage",id:"usage",level:2}],f={toc:d},g="wrapper";function y(e){let{components:t}=e,r=(0,a.A)(e,s);return(0,l.yg)(g,(0,n.A)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,l.yg)("p",null,"The NetworkSimplifier simplifies a CIM network model to prepare it for direct translation to a bus-branch model (e.g. OpenDSS)."),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Only certain types of equipment are kept: lines, transformers, energy sources, energy consumers, and power electronics connections."),(0,l.yg)("li",{parentName:"ul"},"Switches may be included in the simplified network by setting the ",(0,l.yg)("inlineCode",{parentName:"li"},"keepSwitches")," parameter to ",(0,l.yg)("inlineCode",{parentName:"li"},"true"),". Otherwise, closed switches are collapsed and open\nswitches are removed."),(0,l.yg)("li",{parentName:"ul"},"All other equipment, such as junctions, are treated as having zero impedance and are collapsed."),(0,l.yg)("li",{parentName:"ul"},"Strings of connected lines sharing a common impedance, phasing, and wire info are collapsed into a longer line. The length of this line is equal to the sum\nof the lengths of the original lines."),(0,l.yg)("li",{parentName:"ul"},"Networks below SWER isolation transformers and distribution transformers may also be optionally collapsed."),(0,l.yg)("li",{parentName:"ul"},"Feeder head terminals are relocated to an appropriate nearby terminal if the original terminal is collapsed as part of a group of excluded equipment."),(0,l.yg)("li",{parentName:"ul"},"To make translation to certain models easier (e.g. OpenDSS), each terminal is guaranteed to be connected to a connectivity node.")),(0,l.yg)("h2",{id:"usage"},"Usage"),(0,l.yg)("p",null,"Create a ",(0,l.yg)("inlineCode",{parentName:"p"},"NetworkSimplifier")," and process a ",(0,l.yg)("inlineCode",{parentName:"p"},"NetworkService"),"."),(0,l.yg)(i.A,{groupId:"code-example",defaultValue:"kotlin",values:[{label:"Kotlin",value:"kotlin"}],mdxType:"Tabs"},(0,l.yg)(o.A,{value:"kotlin",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-kotlin"},"val networkSimplifier = NetworkSimplifier()\n\nnetworkSimplifier.process(networkService)\n")))),(0,l.yg)("p",null,"Create a ",(0,l.yg)("inlineCode",{parentName:"p"},"NetworkSimplifier")," that keeps switches in the simplified model."),(0,l.yg)(i.A,{groupId:"code-example",defaultValue:"kotlin",values:[{label:"Kotlin",value:"kotlin"}],mdxType:"Tabs"},(0,l.yg)(o.A,{value:"kotlin",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-kotlin"},"val networkSimplifier = NetworkSimplifier(keepSwitches = true)\n\nnetworkSimplifier.process(networkService)\n")))),(0,l.yg)("p",null,"Create a ",(0,l.yg)("inlineCode",{parentName:"p"},"NetworkSimplifier")," that uses the current state of the switches, rather than their normal state."),(0,l.yg)(i.A,{groupId:"code-example",defaultValue:"kotlin",values:[{label:"Kotlin",value:"kotlin"}],mdxType:"Tabs"},(0,l.yg)(o.A,{value:"kotlin",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-kotlin"},"val networkSimplifier = NetworkSimplifier(networkState = NetworkState.Current)\n\nnetworkSimplifier.process(networkService)\n")))),(0,l.yg)("p",null,"Create a ",(0,l.yg)("inlineCode",{parentName:"p"},"NetworkSimplifier")," with a different threshold for line resistance and reactance. Lines that fail to exceed either threshold are treated as if they\nhad zero impedance, and are collapsed along with adjacent zero-impedance equipment."),(0,l.yg)(i.A,{groupId:"code-example",defaultValue:"kotlin",values:[{label:"Kotlin",value:"kotlin"}],mdxType:"Tabs"},(0,l.yg)(o.A,{value:"kotlin",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-kotlin"},"val networkSimplifier = NetworkSimplifier(minLineResistanceOhms = 0.002, minLineReactanceOhms = 0.003)\n\nnetworkSimplifier.process(networkService)\n")))),(0,l.yg)("p",null,"Create a ",(0,l.yg)("inlineCode",{parentName:"p"},"NetworkSimplifier")," that collapses both SWER and distribution networks."),(0,l.yg)(i.A,{groupId:"code-example",defaultValue:"kotlin",values:[{label:"Kotlin",value:"kotlin"}],mdxType:"Tabs"},(0,l.yg)(o.A,{value:"kotlin",mdxType:"TabItem"},(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-kotlin"},"val networkSimplifier = NetworkSimplifier(collapsedSwerVoltage = 250, collapseLvNetwork = true)\n\nnetworkSimplifier.process(networkService)\n")))))}y.isMDXComponent=!0},5680:(e,t,r)=>{r.d(t,{xA:()=>c,yg:()=>f});var n=r(6540);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach(function(t){a(e,t,r[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))})}return e}function o(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef(function(e,t){var r=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=u(r),d=a,f=p["".concat(s,".").concat(d)]||p[d]||m[d]||l;return r?n.createElement(f,i(i({ref:t},c),{},{components:r})):n.createElement(f,i({ref:t},c))});function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=r.length,i=new Array(l);i[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[p]="string"==typeof e?e:a,i[1]=o;for(var u=2;u<l;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},9365:(e,t,r)=>{r.d(t,{A:()=>i});var n=r(6540),a=r(53);const l={tabItem:"tabItem_Ymn6"};function i(e){let{children:t,hidden:r,className:i}=e;return n.createElement("div",{role:"tabpanel",className:(0,a.A)(l.tabItem,i),hidden:r},t)}}}]);