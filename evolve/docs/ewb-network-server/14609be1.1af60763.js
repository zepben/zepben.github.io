(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{78:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return b})),n.d(t,"metadata",(function(){return r})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return d}));var a=n(3),i=n(7),l=(n(0),n(172)),b={},r={type:"mdx",permalink:"/evolve/docs/network-server/release-notes",source:"@site/src/pages/release-notes.md"},c=[{value:"2.9.0",id:"290",children:[{value:"Breaking Changes",id:"breaking-changes",children:[]},{value:"New Features",id:"new-features",children:[]},{value:"Enhancements",id:"enhancements",children:[]},{value:"Fixes",id:"fixes",children:[]},{value:"Notes",id:"notes",children:[]}]},{value:"2.8.0",id:"280",children:[{value:"Breaking Changes",id:"breaking-changes-1",children:[]},{value:"New Features",id:"new-features-1",children:[]},{value:"Enhancements",id:"enhancements-1",children:[]},{value:"Fixes",id:"fixes-1",children:[]},{value:"Notes",id:"notes-1",children:[]}]},{value:"2.7.0",id:"270",children:[{value:"Breaking Changes",id:"breaking-changes-2",children:[]},{value:"New Features",id:"new-features-2",children:[]},{value:"Enhancements",id:"enhancements-2",children:[]},{value:"Fixes",id:"fixes-2",children:[]},{value:"Notes",id:"notes-2",children:[]},{value:"v2.6.0",id:"v260",children:[]},{value:"v2.5.0",id:"v250",children:[]},{value:"v2.4.0",id:"v240",children:[]},{value:"v2.3.0",id:"v230",children:[]},{value:"v2.2.0",id:"v220",children:[]},{value:"v2.1.0",id:"v210",children:[]},{value:"v2.0.0",id:"v200",children:[]},{value:"v1.2.0",id:"v120",children:[]},{value:"v1.1.0",id:"v110",children:[]}]}],o={toc:c};function d(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(l.b)("wrapper",Object(a.a)({},o,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h4",{id:"release-history"},"Release History"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:null}),"Version"),Object(l.b)("th",Object(a.a)({parentName:"tr"},{align:"left"}),"Date"))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("a",Object(a.a)({parentName:"td"},{href:"#v290"}),"2.9.0")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(l.b)("inlineCode",{parentName:"td"},"31 May 2023"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("a",Object(a.a)({parentName:"td"},{href:"#v280"}),"2.8.0")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(l.b)("inlineCode",{parentName:"td"},"08 February 2023"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("a",Object(a.a)({parentName:"td"},{href:"#v270"}),"2.7.0")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(l.b)("inlineCode",{parentName:"td"},"24 October 2022"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("a",Object(a.a)({parentName:"td"},{href:"#v260"}),"2.6.0")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(l.b)("inlineCode",{parentName:"td"},"26 August 2022"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("a",Object(a.a)({parentName:"td"},{href:"#v250"}),"2.5.0")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(l.b)("inlineCode",{parentName:"td"},"04 March 2022"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("a",Object(a.a)({parentName:"td"},{href:"#v240"}),"2.4.0")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(l.b)("inlineCode",{parentName:"td"},"23 September 2021"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("a",Object(a.a)({parentName:"td"},{href:"#v230"}),"2.3.0")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(l.b)("inlineCode",{parentName:"td"},"06 April 2021"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("a",Object(a.a)({parentName:"td"},{href:"#v220"}),"2.2.0")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(l.b)("inlineCode",{parentName:"td"},"01 February 2021"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("a",Object(a.a)({parentName:"td"},{href:"#v210"}),"2.1.0")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(l.b)("inlineCode",{parentName:"td"},"13 January 2021"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("a",Object(a.a)({parentName:"td"},{href:"#v200"}),"2.0.0")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(l.b)("inlineCode",{parentName:"td"},"10 November 2020"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("a",Object(a.a)({parentName:"td"},{href:"#v120"}),"1.2.0")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(l.b)("inlineCode",{parentName:"td"},"8 November 2019"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),Object(l.b)("a",Object(a.a)({parentName:"td"},{href:"#v110"}),"1.1.0")),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(l.b)("inlineCode",{parentName:"td"},"21 June 2019"))),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:null}),"1.0.0"),Object(l.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(l.b)("inlineCode",{parentName:"td"},"7 March 2019"))))),Object(l.b)("hr",null),Object(l.b)("h2",{id:"290"},"[2.9.0]"),Object(l.b)("h3",{id:"breaking-changes"},"Breaking Changes"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Updated to ewb-network-routes 2.15.0 and latest SDK version. This removed RecloseSequences and corresponding CIM + Gql types.")),Object(l.b)("h3",{id:"new-features"},"New Features"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Added GraphQl query ",Object(l.b)("inlineCode",{parentName:"li"},"getDownstreamEquipment()")," which given an mRID and a network state will perform a downstream trace from the mRID and provide all objects")),Object(l.b)("h3",{id:"enhancements"},"Enhancements"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"None.")),Object(l.b)("h3",{id:"fixes"},"Fixes"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"getUpstreamEquipment()")," GraphQL query will no longer stop on LvFeeder heads, and will instead exhaustively trace if no stop type/mRID is given.")),Object(l.b)("h3",{id:"notes"},"Notes"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"None.")),Object(l.b)("hr",null),Object(l.b)("h2",{id:"280"},"[2.8.0]"),Object(l.b)("h3",{id:"breaking-changes-1"},"Breaking Changes"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"None.")),Object(l.b)("h3",{id:"new-features-1"},"New Features"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"The evolve-sdk now includes an EquivalentNetworkUtils class to add equivalent networks at the edge of equipment containers."),Object(l.b)("li",{parentName:"ul"},"Added support for version 0.14.0 of the Evolve SDK. This includes support for the following CIM types:",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"CurrentTransformer")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"CurrentTransformerInfo")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"PotentialTransformer")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"PotentialTransformerInfo")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"ProtectionEquipment")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"CurrentRelay")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"CurrentRelayInfo")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"SwitchInfo")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"RecloseSequence")))),Object(l.b)("li",{parentName:"ul"},"Added support for version 2.14.0 of ewb-network-routes."),Object(l.b)("li",{parentName:"ul"},"The evolve-sdk now includes an EquivalentNetworkUtils class to add equivalent networks at the edge of equipment containers.")),Object(l.b)("h3",{id:"enhancements-1"},"Enhancements"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Added the following properties to the Mapbox vector tiles:",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"a partially off supply flag for equipment that is only partially energised."),Object(l.b)("li",{parentName:"ul"},"a flag to indicate if something is a switch, allowing detection of switches with invalid/missing symbols."))),Object(l.b)("li",{parentName:"ul"},"Add container mRIDs to equipment in vector tiles features."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"normalPhases")," and ",Object(l.b)("inlineCode",{parentName:"li"},"currentPhases")," (traced phases) are now exposed through GqlTerminal")),Object(l.b)("h3",{id:"fixes-1"},"Fixes"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"From SDK 0.14.0: Fixed limited connected traces with ",Object(l.b)("inlineCode",{parentName:"li"},"maximumSteps = 1")," were including equipment 2 steps away."),Object(l.b)("li",{parentName:"ul"},"Fixes issue in the evolve-sdk where the AuxiliaryEquipment and ProtectionEquipment was not getting properly assigned by the AssignToFeeder class.")),Object(l.b)("h3",{id:"notes-1"},"Notes"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"None.")),Object(l.b)("hr",null),Object(l.b)("h2",{id:"270"},"[2.7.0]"),Object(l.b)("h3",{id:"breaking-changes-2"},"Breaking Changes"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Database versions prior to v43 are no longer supported."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"Feeder")," instances are now only assigned to HV/MV equipment. ",Object(l.b)("inlineCode",{parentName:"li"},"LvFeeder")," instances are assigned to LV equipment."),Object(l.b)("li",{parentName:"ul"},"The GraphQL ",Object(l.b)("inlineCode",{parentName:"li"},"Equipment.currentFeeders")," field has been replaced with ",Object(l.b)("inlineCode",{parentName:"li"},"Equipment.currentContainers"),", which takes an optional list of CIM type names to filter the collection. If you\nwish to keep your GraphQL requests backwards compatible, you can use the following to return only the current feeders in the previous field:")),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{}),'// old:\ncurrentFeeders {\n    <field selectors>\n}\n\n// equivalent:\ncurrentFeeders: currentContainers(types: ["Feeder"]) {\n    ... on Feeder {\n        <field selectors>\n    }\n}\n')),Object(l.b)("h3",{id:"new-features-2"},"New Features"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Added support for YYN single phase transformers when setting phases."),Object(l.b)("li",{parentName:"ul"},"Added support for ",Object(l.b)("inlineCode",{parentName:"li"},"LvFeeder"),", which contains a section of network below a distribution transformer."),Object(l.b)("li",{parentName:"ul"},"Added the following GraphQL queries:",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"getUpstreamEquipment()"),": Performs an upstream trace, configurably stopping on either a particular type or a certain mRID, or the feeder head if neither were found."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"getNetworkHierarchy()"),": Retrieve the network hierarchy classes."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"getIsolatedEquipment()"),": Request the equipment that belongs to an isolation area."))),Object(l.b)("li",{parentName:"ul"},"Added the following optional arguments to the ",Object(l.b)("inlineCode",{parentName:"li"},"getEquipmentForContainers")," gRPC call:",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"includeEnergizingContainers"),": Specifies whether to include equipment from containers energizing the ones listed in\n",Object(l.b)("inlineCode",{parentName:"li"},"mRIDs"),". This is of the enum type ",Object(l.b)("inlineCode",{parentName:"li"},"IncludedEnergizingContainers"),", which has three possible values:",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"EXCLUDE_ENERGIZING_CONTAINERS"),": No additional effect (default)."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"INCLUDE_ENERGIZING_FEEDERS"),": Include HV/MV feeders that power LV feeders listed in ",Object(l.b)("inlineCode",{parentName:"li"},"mRIDs"),"."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"INCLUDE_ENERGIZING_SUBSTATIONS"),": In addition to ",Object(l.b)("inlineCode",{parentName:"li"},"INCLUDE_ENERGIZING_FEEDERS"),", include substations that energize a HV/MV feeder listed in ",Object(l.b)("inlineCode",{parentName:"li"},"mRIDs")," or included\nvia ",Object(l.b)("inlineCode",{parentName:"li"},"INCLUDE_ENERGIZING_FEEDERS"),"."))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"includeEnergizedContainers"),": Specifies whether to include equipment from containers energized by the ones listed in\n",Object(l.b)("inlineCode",{parentName:"li"},"mRIDs"),". This is of the enum type ",Object(l.b)("inlineCode",{parentName:"li"},"IncludedEnergizedContainers"),", which has three possible values:",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"EXCLUDE_ENERGIZED_CONTAINERS"),": No additional effect (default)."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"INCLUDE_ENERGIZED_FEEDERS"),": Include HV/MV feeders powered by substations listed in ",Object(l.b)("inlineCode",{parentName:"li"},"mRIDs"),"."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"INCLUDE_ENERGIZED_LV_FEEDERS"),": In addition to ",Object(l.b)("inlineCode",{parentName:"li"},"INCLUDE_ENERGIZED_FEEDERS"),", include LV feeders that are energizes by a HV/MV feeder listed in ",Object(l.b)("inlineCode",{parentName:"li"},"mRIDs")," or included\nvia ",Object(l.b)("inlineCode",{parentName:"li"},"INCLUDE_ENERGIZED_FEEDERS"),"."))))),Object(l.b)("li",{parentName:"ul"},"Added an ",Object(l.b)("inlineCode",{parentName:"li"},"isSwer")," flag to the Mapbox vector tiles, indicating if a feature is part of the SWER network.")),Object(l.b)("h3",{id:"enhancements-2"},"Enhancements"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"None.")),Object(l.b)("h3",{id:"fixes-2"},"Fixes"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"None.")),Object(l.b)("h3",{id:"notes-2"},"Notes"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"None.")),Object(l.b)("hr",null),Object(l.b)("h3",{id:"v260"},"v2.6.0"),Object(l.b)("h5",{id:"breaking-changes-3"},"Breaking Changes"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"None.")),Object(l.b)("h5",{id:"new-features-3"},"New Features"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Added GraphQL route ",Object(l.b)("inlineCode",{parentName:"li"},"/ewb/graphql/api"),". This includes the following queries:",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"getIdentifiedObject"),": Request an ",Object(l.b)("inlineCode",{parentName:"li"},"IdentifiedObject")," by mRID."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"getIdentifiedObjects"),": Request many ",Object(l.b)("inlineCode",{parentName:"li"},"IdentifiedObject")," instances by their mRIDs"),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"findIdentifiedObjects"),": Find all ",Object(l.b)("inlineCode",{parentName:"li"},"IdentifiedObject")," instances that match the provided criteria."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"findIdentifiedObjectsByName"),": Find multiple objects by their ",Object(l.b)("inlineCode",{parentName:"li"},"name")," and NMI ",Object(l.b)("inlineCode",{parentName:"li"},"nametype"),"."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"getAssetInfo"),": Returns all ",Object(l.b)("inlineCode",{parentName:"li"},"AssetInfo")," and ",Object(l.b)("inlineCode",{parentName:"li"},"PerLengthLineParameter")," objects that match the requested types."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"getDownstreamEquipmentTree"),": Performs a downstream trace and return the paths found."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"findUpstreamEquipment"),": Performs an upstream trace looking for objects of a particular type."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"getConnectedEquipment"),": Performs a trace outwards from a selected object for a set number of steps, and optionally, only in a specified direction.")))),Object(l.b)("h5",{id:"enhancements-3"},"Enhancements"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"None.")),Object(l.b)("h5",{id:"fixes-3"},"Fixes"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"None.")),Object(l.b)("h5",{id:"notes-3"},"Notes"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"None.")),Object(l.b)("hr",null),Object(l.b)("h3",{id:"v250"},"v2.5.0"),Object(l.b)("h5",{id:"breaking-changes-4"},"Breaking Changes"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"NMI and load aggregation processing has been updated for semantic relocation in the CIM model."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"PowerTransformer")," instances are now distinguished using their ",Object(l.b)("inlineCode",{parentName:"li"},"function")," rather than an associated ",Object(l.b)("inlineCode",{parentName:"li"},"DiagramObject"),"."),Object(l.b)("li",{parentName:"ul"},"Updated ",Object(l.b)("inlineCode",{parentName:"li"},"isPrimary")," flag in old JSON API's to reference ",Object(l.b)("inlineCode",{parentName:"li"},"isExternalGrid")," rather than an ",Object(l.b)("inlineCode",{parentName:"li"},"EnergySource")," having any associated ",Object(l.b)("inlineCode",{parentName:"li"},"EnergySourcePhase"),"."),Object(l.b)("li",{parentName:"ul"},"Feeder API's that return ",Object(l.b)("inlineCode",{parentName:"li"},"infeeds")," will now return the head of the feeder rather than the external grid source."),Object(l.b)("li",{parentName:"ul"},"Renamed ",Object(l.b)("inlineCode",{parentName:"li"},"PhaseDirection")," to ",Object(l.b)("inlineCode",{parentName:"li"},"FeederDirection"),":",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"IN")," renamed to ",Object(l.b)("inlineCode",{parentName:"li"},"UPSTREAM")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"OUT")," renamed to ",Object(l.b)("inlineCode",{parentName:"li"},"DOWNSTREAM")))),Object(l.b)("li",{parentName:"ul"},"Separated feeder direction from phase.",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"Direction has been removed from ",Object(l.b)("inlineCode",{parentName:"li"},"TracedPhases")," and is now accessed directly off the ",Object(l.b)("inlineCode",{parentName:"li"},"Terminal"),"."),Object(l.b)("li",{parentName:"ul"},"Direction has been removed from ",Object(l.b)("inlineCode",{parentName:"li"},"PhaseStatus")," and is now accessed via ",Object(l.b)("inlineCode",{parentName:"li"},"DirectionStatus"),"."))),Object(l.b)("li",{parentName:"ul"},"The following ",Object(l.b)("inlineCode",{parentName:"li"},"Terminal")," fields are now Kotlin properties rather than accessor functions:",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"connectivityNodeId")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"isConnected")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"normalPhases")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"currentPhases")))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"PhaseCode.singlePhases")," is now a Kotlin read-only property rather than an accessor function.")),Object(l.b)("h5",{id:"new-features-4"},"New Features"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"The connection point identifier is now configurable via the config file option ",Object(l.b)("inlineCode",{parentName:"li"},"connectionPointIdentifier"),". Defaults to ",Object(l.b)("inlineCode",{parentName:"li"},"NMI")," if not specified."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"PowerTransformer")," now has a ",Object(l.b)("inlineCode",{parentName:"li"},"function")," and ",Object(l.b)("inlineCode",{parentName:"li"},"constructionKind"),".")),Object(l.b)("h5",{id:"enhancements-4"},"Enhancements"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Updated GQL filtering mechanism to allow more precise matching of objects."),Object(l.b)("li",{parentName:"ul"},"Expanded the number of fields available for a ",Object(l.b)("inlineCode",{parentName:"li"},"StreetAddress")),Object(l.b)("li",{parentName:"ul"},"Added fields to ",Object(l.b)("inlineCode",{parentName:"li"},"EnergySource")," to allow representation of a higher-level power grid connection modelled as a slack bus."),Object(l.b)("li",{parentName:"ul"},"Reworked phase connectivity to better handle unknown primary phases (X/Y).")),Object(l.b)("h5",{id:"fixes-4"},"Fixes"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"JASNI startup exception has been resolved."),Object(l.b)("li",{parentName:"ul"},"nmis-transformers-feeders API now correctly populates feeders for NMIs / usage points that have no upstream transformer on the feeder."),Object(l.b)("li",{parentName:"ul"},"Relaxed the constraint on ",Object(l.b)("inlineCode",{parentName:"li"},"power_electronics_connection_mrid")," (no longer unique) in the following tables:",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"battery_unit")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"photo_voltaic_unit")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"power_electronics_wind_unit")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"power_electronics_connection_phase"))))),Object(l.b)("h5",{id:"notes-4"},"Notes"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"None.")),Object(l.b)("hr",null),Object(l.b)("h3",{id:"v240"},"v2.4.0"),Object(l.b)("h5",{id:"breaking-changes-5"},"Breaking Changes"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"All classes will now send their class name via the REST API rather than ",Object(l.b)("inlineCode",{parentName:"li"},"BasicNode")," if they did not exist in the old network model."),Object(l.b)("li",{parentName:"ul"},"ID correlations are no longer used. Equivalent functionality has been introduced into the CIM.")),Object(l.b)("h5",{id:"new-features-5"},"New Features"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"The gRPC API now supports the following CIM classes:",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"EquivalentBranch")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"NoLoadTest")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"OpenCircuitTest")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"ShortCircuitTest")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"ShuntCompensatorInfo")))),Object(l.b)("li",{parentName:"ul"},"Added ",Object(l.b)("inlineCode",{parentName:"li"},"isVirtual")," and ",Object(l.b)("inlineCode",{parentName:"li"},"connectionCategory")," to ",Object(l.b)("inlineCode",{parentName:"li"},"UsagePoint"))),Object(l.b)("h5",{id:"enhancements-5"},"Enhancements"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"None.")),Object(l.b)("h5",{id:"fixes-5"},"Fixes"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Conductor colouring has been corrected in the graphics routes."),Object(l.b)("li",{parentName:"ul"},"Switch states have been corrected in the graphics routes.")),Object(l.b)("h5",{id:"notes-5"},"Notes"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"None.")),Object(l.b)("hr",null),Object(l.b)("h3",{id:"v230"},"v2.3.0"),Object(l.b)("h5",{id:"breaking-changes-6"},"Breaking Changes"),Object(l.b)("p",null," None."),Object(l.b)("h5",{id:"new-features-6"},"New Features"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"Added support for:"),Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"BusBarSection")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"LoadBreakSwitch")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"TransformerEndInfo")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"TransformerTankInfo")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"TransformerStarImpedance")))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"gRPC service to listen for switch state changes. Note functionality is not implemented yet, the request is just logged.")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"Added endpoint to request associated transformers and feeders for nmis - ",Object(l.b)("inlineCode",{parentName:"p"},"/ewb/network/api/v1/nmi-transformers-feeders"),". See the API documentation for details."))),Object(l.b)("h5",{id:"enhancements-6"},"Enhancements"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Asset response for equipment now includes location.")),Object(l.b)("h5",{id:"fixes-6"},"Fixes"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"None.")),Object(l.b)("h5",{id:"notes-6"},"Notes"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Updated to Vert.x 3.9.6.")),Object(l.b)("hr",null),Object(l.b)("h3",{id:"v220"},"v2.2.0"),Object(l.b)("h5",{id:"breaking-changes-7"},"Breaking Changes"),Object(l.b)("p",null," None."),Object(l.b)("h5",{id:"new-features-7"},"New Features"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"None.")),Object(l.b)("h5",{id:"enhancements-7"},"Enhancements"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"None.")),Object(l.b)("h5",{id:"fixes-7"},"Fixes"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"None.")),Object(l.b)("h5",{id:"notes-7"},"Notes"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"None.")),Object(l.b)("hr",null),Object(l.b)("h3",{id:"v210"},"v2.1.0"),Object(l.b)("h5",{id:"breaking-changes-8"},"Breaking Changes"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Updated ewb-network-routes version to latest snapshot.")),Object(l.b)("h5",{id:"new-features-8"},"New Features"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Added a new route for retrieving metadata about the network - ",Object(l.b)("inlineCode",{parentName:"li"},"/ewb/network/api/v1/metadata"),".\nSee the API documentation for details.")),Object(l.b)("h5",{id:"enhancements-8"},"Enhancements"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"None.")),Object(l.b)("h5",{id:"fixes-8"},"Fixes"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Transformer voltage is extracted from the first of the transformer's ends.")),Object(l.b)("h5",{id:"notes-8"},"Notes"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"None.")),Object(l.b)("hr",null),Object(l.b)("h3",{id:"v200"},"v2.0.0"),Object(l.b)("h5",{id:"breaking-changes-9"},"Breaking Changes"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Fault indicators are no longer included in network traces (including feeder assets)."),Object(l.b)("li",{parentName:"ul"},"Updated database version."),Object(l.b)("li",{parentName:"ul"},"Updated to use new patch API JSON format and layers.")),Object(l.b)("h5",{id:"new-features-9"},"New Features"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},'Added a new trace to find conducting equipment with attached usage points downstream from the\nspecified conducting equipment, with an optional conducting equipment stop condition to support\n"between" tracing. If there is no path between from -> to, a trace in the opposite direction will\nalso be performed (i.e. to -> from)'),Object(l.b)("li",{parentName:"ul"},"Support for load profile manipulation has been added to the patch processor. The final manipulation value is ",Object(l.b)("inlineCode",{parentName:"li"},"quantity / df"),"."),Object(l.b)("li",{parentName:"ul"},"A REST API has been added to retrieve load manipulations at ",Object(l.b)("inlineCode",{parentName:"li"},"/ewb/patch/api/v1/load-manipulations"),".\nSee the ",Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"https://docs.zepben.com"}),"online documentation")," for details. ")),Object(l.b)("h5",{id:"enhancements-9"},"Enhancements"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"The mapbox vector tiles now include conductor paths if available.")),Object(l.b)("h5",{id:"fixes-9"},"Fixes"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"None.")),Object(l.b)("h5",{id:"notes-9"},"Notes"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"None.")),Object(l.b)("hr",null),Object(l.b)("h3",{id:"v120"},"v1.2.0"),Object(l.b)("h5",{id:"breaking-changes-10"},"Breaking Changes"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Updated to use v11.0 network database.")),Object(l.b)("h5",{id:"new-features-10"},"New Features"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Underground/Overhead conductors are now supported. A flag ",Object(l.b)("em",{parentName:"li"},Object(l.b)("strong",{parentName:"em"},"isUnderground"))," has been added to all JSON payloads that\nreturn conductor details.  "),Object(l.b)("li",{parentName:"ul"},"Conductor styling has been added in the Mapbox Vector Tile feature properties. You can use the ",Object(l.b)("em",{parentName:"li"},Object(l.b)("strong",{parentName:"em"},"lineColor")),", ",Object(l.b)("em",{parentName:"li"},Object(l.b)("strong",{parentName:"em"},"lineWidth")),"\nand ",Object(l.b)("em",{parentName:"li"},Object(l.b)("strong",{parentName:"em"},"isUnderground"))," properties of conductor features to control the rendering of map layers."),Object(l.b)("li",{parentName:"ul"},"Added an isolation trace API that can find all assets within a proposed isolation area.")),Object(l.b)("h5",{id:"enhancements-10"},"Enhancements"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"HV supply point assets now include connected meter information like other supply points."),Object(l.b)("li",{parentName:"ul"},"A new field ",Object(l.b)("em",{parentName:"li"},Object(l.b)("strong",{parentName:"em"},"rating"))," has been added to all JSON payloads that return transformer details.")),Object(l.b)("h5",{id:"fixes-10"},"Fixes"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Phases are now being inferred when the core configuration drops phases.")),Object(l.b)("h5",{id:"notes-10"},"Notes"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"None.")),Object(l.b)("hr",null),Object(l.b)("h3",{id:"v110"},"v1.1.0"),Object(l.b)("h5",{id:"breaking-changes-11"},"Breaking Changes"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Updated to use v10.0 network database.")),Object(l.b)("h5",{id:"new-features-11"},"New Features"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Patch actions are now processed in order based on type (add, modify then remove)."),Object(l.b)("li",{parentName:"ul"},"Support for system tags (e.g. GIS) has been added to all routes that use asset ID's."),Object(l.b)("li",{parentName:"ul"},"Filtering has been added to all routes."),Object(l.b)("li",{parentName:"ul"},"Routes that return terminals now include the terminals lat/lon."),Object(l.b)("li",{parentName:"ul"},"Added support for cut conductor processing.")),Object(l.b)("h5",{id:"enhancements-11"},"Enhancements"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Feeder start points can now be the feeder circuit breaker, but it will trace the zone if there is one."),Object(l.b)("li",{parentName:"ul"},"No longer warning about primary sources on feeders if the primary source is the feeder start point."),Object(l.b)("li",{parentName:"ul"},"Unknown layers now result in an error rather than aborting.")),Object(l.b)("h5",{id:"fixes-11"},"Fixes"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"None.")),Object(l.b)("h5",{id:"notes-11"},"Notes"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"None.")))}d.isMDXComponent=!0}}]);