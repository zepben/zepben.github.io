"use strict";(self.webpackChunkhosting_capacity_service_doco=self.webpackChunkhosting_capacity_service_doco||[]).push([[8959],{3453:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>h,frontMatter:()=>l,metadata:()=>p,toc:()=>u});var n=a(8168),i=a(8587),o=(a(6540),a(5680));const r=["components"],l={id:"calibration",title:"How to run Model Calibration",slug:"/how-to-guides/calibration",toc_max_heading_level:4},s=void 0,p={unversionedId:"how-to-guides/calibration",id:"how-to-guides/calibration",title:"How to run Model Calibration",description:"Calibration has been undergoing development changes recently and may have some issues. If you encounter any problems or have questions, please contact Zepben support.",source:"@site/docs/how-to-guides/calibration.mdx",sourceDirName:"how-to-guides",slug:"/how-to-guides/calibration",permalink:"/evolve/docs/hosting-capacity-service/docs/next/how-to-guides/calibration",draft:!1,tags:[],version:"current",frontMatter:{id:"calibration",title:"How to run Model Calibration",slug:"/how-to-guides/calibration",toc_max_heading_level:4},sidebar:"theSidebar",previous:{title:"How to install Python",permalink:"/evolve/docs/hosting-capacity-service/docs/next/how-to-guides/install-python"},next:{title:"How to run Feeder Load Analysis",permalink:"/evolve/docs/hosting-capacity-service/docs/next/how-to-guides/feeder-load-analysis"}},c={},u=[{value:"Option 1: Using Python",id:"option-1-using-python",level:2},{value:"Option 1A: Using the Hosting Capacity Runner tool (Recommended)",id:"option-1a-using-the-hosting-capacity-runner-tool-recommended",level:3},{value:"Option 1B: Using the EAS Client Python Library",id:"option-1b-using-the-eas-client-python-library",level:3},{value:"Option 2: Using GraphQL",id:"option-2-using-graphql",level:3},{value:"Using the results",id:"using-the-results",level:2},{value:"Tap settings",id:"tap-settings",level:3},{value:"Raw Results",id:"raw-results",level:3}],d={toc:u},g="wrapper";function h(e){let{components:t}=e,a=(0,i.A)(e,r);return(0,o.yg)(g,(0,n.A)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,o.yg)("admonition",{type:"note"},(0,o.yg)("p",{parentName:"admonition"},"Calibration has been undergoing development changes recently and may have some issues. If you encounter any problems or have questions, please contact Zepben support.")),(0,o.yg)("h1",{id:"how-to-run-a-model-calibration-work-package"},"How to Run a Model Calibration Work Package"),(0,o.yg)("p",null,"This page provides a guide for network model calibration within the Hosting Capacity Module. It yields a table of tap settings for each off-load transformer, which can then be used in future work packages to run time-series modeling with the inferred tap positions. It also produces a set of raw results per energy consumer highlighting modelled (simulated) and measured (real) voltages, which can be used to for debugging and further analysis."),(0,o.yg)("h1",{id:"prerequisites"},"Prerequisites"),(0,o.yg)("p",null,"See the ",(0,o.yg)("a",{parentName:"p",href:"../how-to-guides/run-a-work-package"},"How to Run a Work Package")," guide for prerequisites on basic Work Package setup, which are the same for running a Model Calibration Work Package."),(0,o.yg)("p",null,"See the ",(0,o.yg)("a",{parentName:"p",href:"../reference/calibration-methodology"},"Model Calibration Methodology")," page for a detailed overview of the calibration process, including data requirements."),(0,o.yg)("admonition",{type:"note"},(0,o.yg)("p",{parentName:"admonition"},"Make sure the time you specify has available PQV data in the database, otherwise the calibration will not run successfully. Not all times will have PQV data available, and will depend on the data you have ingested into the system. To see details of how the PQV data was used, see the logs for detailed information on an individual calibration run. Contact Zepben support if you need help with this.")),(0,o.yg)("admonition",{type:"caution"},(0,o.yg)("p",{parentName:"admonition"},"Only one set of calibration results can be used on a given Work Package. When running a Work Package, ensure you use calibration results that include all feeders present in the Work Package")),(0,o.yg)("admonition",{type:"note"},(0,o.yg)("p",{parentName:"admonition"},"The Calibration workflow supports a custom work package config, if needed. This is set by Zepben for the whole EAS instance. Please contact Zepben support for making changes to the Calibration config. ")),(0,o.yg)("h1",{id:"how-to-run"},"How to run"),(0,o.yg)("h2",{id:"option-1-using-python"},"Option 1: Using Python"),(0,o.yg)("h3",{id:"option-1a-using-the-hosting-capacity-runner-tool-recommended"},"Option 1A: Using the Hosting Capacity Runner tool (Recommended)"),(0,o.yg)("p",null,"The Hosting Capacity Runner tool provides a user interface to run Model Calibration Work Packages."),(0,o.yg)("ol",null,(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("p",{parentName:"li"},"Clone the ",(0,o.yg)("a",{parentName:"p",href:"https://github.com/Zepben/hosting-capacity-runner"},"Hosting Capacity Runner")," repository. Ensure requirements are installed by running ",(0,o.yg)("inlineCode",{parentName:"p"},"pip install -r requirements.txt"),". Check the ",(0,o.yg)("inlineCode",{parentName:"p"},"README.md")," and ensure other prerequisites are as per the general ",(0,o.yg)("a",{parentName:"p",href:"../how-to-guides/run-a-work-package"},"Hosting Capacity Module prerequisites"),".")),(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("p",{parentName:"li"},"Open the ",(0,o.yg)("inlineCode",{parentName:"p"},"run_calibration.py")," file in the ",(0,o.yg)("inlineCode",{parentName:"p"},"hosting_capacity_runner")," directory.")),(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("p",{parentName:"li"},"Update the ",(0,o.yg)("inlineCode",{parentName:"p"},"calibration_name"),", ",(0,o.yg)("inlineCode",{parentName:"p"},"calibration_time_local"),", and ",(0,o.yg)("inlineCode",{parentName:"p"},"feeder_mrids")," parameters in the script to match your requirements.")),(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("p",{parentName:"li"},"Run the script uisng your IDE.")),(0,o.yg)("li",{parentName:"ol"},(0,o.yg)("p",{parentName:"li"},"To check the status of the Work Package, you can use the ",(0,o.yg)("inlineCode",{parentName:"p"},"monitor_calibration_run.py")," function in the same directory, using the calibration_id returned by the run_calibration.py script."))),(0,o.yg)("h3",{id:"option-1b-using-the-eas-client-python-library"},"Option 1B: Using the EAS Client Python Library"),(0,o.yg)("p",null,"If you prefer to use the EAS Client Python Library directly, you can run a Model Calibration Work Package using the ",(0,o.yg)("inlineCode",{parentName:"p"},"run_hosting_capacity_calibration")," method."),(0,o.yg)("p",null,"In the ",(0,o.yg)("inlineCode",{parentName:"p"},"eas-client-python")," client, run:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-python"},'run_hosting_capacity_calibration(`calibration_name`, `local_calibration_time`,["`feeder1`", "`feeder2`", "`feeder3etc`"])\n')),(0,o.yg)("p",null,"This will start a Model Calibration Work Package with the specified name and local time, for all feeders in the network model."),(0,o.yg)("p",null,"Parameters to change:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"calibration_name")," is a unique identifier for the calibration"),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"local_calibration_time")," is the local time of the calibration in ISO 8601 format (it should not have a timezone offset, as the calibration time is assumed to be in the local timezone of the network model, which is set up in the underlying model)"),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},'["feeder1", "feeder2", "feeder3etc"]')," is an array of feeder identifiers to run the calibration on. If you want to run the calibration on all feeders in the network model, you can omit this parameter.")),(0,o.yg)("h3",{id:"option-2-using-graphql"},"Option 2: Using GraphQL"),(0,o.yg)("p",null,"Run a GraphQL query to start a Model Calibration Work Package."),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-graphql"},'mutation {runCalibration(calibrationName: "tap_settings_42", calibrationTimeLocal: "2025-01-15T00:00:00" , feeders: ["feeder1", "feeder2", "feeder3etc"])}\n')),(0,o.yg)("p",null,"This will start a Model Calibration Work Package with the specified name and local time, for all feeders in the network model."),(0,o.yg)("p",null,"Parameters to change:"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"calibrationName")," is a unique identifier for the calibration"),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"calibrationTimeLocal")," is the local time of the calibration in ISO 8601 format (it should not have a timezone offset, as the calibration time is assumed to be in the local timezone of the network model, which is set up in the underlying model)"),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"feeders")," is an array of feeder identifiers to run the calibration on. If you want to run the calibration on all feeders in the network model, you can omit this parameter.")),(0,o.yg)("h2",{id:"using-the-results"},"Using the results"),(0,o.yg)("h3",{id:"tap-settings"},"Tap settings"),(0,o.yg)("p",null,"The tap settings from a calibration run are stored in the input database (input as they form part of the inputs to a regular work package), in a table called ",(0,o.yg)("inlineCode",{parentName:"p"},"calibrated_taps"),". See the Calibrated Taps Table in the ",(0,o.yg)("a",{parentName:"p",href:"../reference/input-tables"},"Input Tables")," section for a full breakdown. These can then be called by their unique name in a Work Package config for use in that Work Package."),(0,o.yg)("h3",{id:"raw-results"},"Raw Results"),(0,o.yg)("p",null,"The raw results of the calibration run are stored in the ",(0,o.yg)("inlineCode",{parentName:"p"},"calibration_meter_results")," table, which is stored in the results database. See the Calibration Meter results in the ",(0,o.yg)("a",{parentName:"p",href:"../reference/output-tables"},"Results Tables")," section for a full breakdown."),(0,o.yg)("p",null,"For more info see the ",(0,o.yg)("a",{parentName:"p",href:"../reference/calibration-methodology"},"Model Calibration Methodology")," page, which provides a detailed overview of the calibration process, including data ingestion, model adjustments, load flow execution, and off-load tap position determination."),(0,o.yg)("p",null,"And the ",(0,o.yg)("a",{parentName:"p",href:"../explanation/calibration-concepts"},"What is Network Model Calibration and why is it useful?")," page for an overview of the concepts behind network model calibration, its importance, and how it can be applied to improve the accuracy of power system models."))}h.isMDXComponent=!0},5680:(e,t,a)=>{a.d(t,{xA:()=>c,yg:()=>h});var n=a(6540);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},g=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(a),g=i,h=u["".concat(s,".").concat(g)]||u[g]||d[g]||o;return a?n.createElement(h,r(r({ref:t},c),{},{components:a})):n.createElement(h,r({ref:t},c))}));function h(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=a.length,r=new Array(o);r[0]=g;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:i,r[1]=l;for(var p=2;p<o;p++)r[p]=a[p];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}g.displayName="MDXCreateElement"}}]);