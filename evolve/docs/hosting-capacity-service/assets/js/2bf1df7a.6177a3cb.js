"use strict";(self.webpackChunkhosting_capacity_service_doco=self.webpackChunkhosting_capacity_service_doco||[]).push([[3218],{408:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>g,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var n=a(8168),r=a(8587),l=(a(6540),a(5680));const i=["components"],o={id:"feeder-load-analysis",title:"Feeder Load Analysis",slug:"/how-to-guides/feeder-load-analysis",toc_max_heading_level:4},g=void 0,s={unversionedId:"how-to-guides/feeder-load-analysis",id:"version-0.5.1/how-to-guides/feeder-load-analysis",title:"Feeder Load Analysis",description:"This page is a work in progress and may not be fully complete",source:"@site/versioned_docs/version-0.5.1/how-to-guides/feeder-load-analysis.mdx",sourceDirName:"how-to-guides",slug:"/how-to-guides/feeder-load-analysis",permalink:"/evolve/docs/hosting-capacity-service/docs/0.5.1/how-to-guides/feeder-load-analysis",draft:!1,tags:[],version:"0.5.1",frontMatter:{id:"feeder-load-analysis",title:"Feeder Load Analysis",slug:"/how-to-guides/feeder-load-analysis",toc_max_heading_level:4},sidebar:"theSidebar",previous:{title:"How to Run Model Calibration",permalink:"/evolve/docs/hosting-capacity-service/docs/0.5.1/how-to-guides/calibration"},next:{title:"How to run the OpenDSS Exporter",permalink:"/evolve/docs/hosting-capacity-service/docs/0.5.1/how-to-guides/opendss"}},d={},p=[{value:"How to run",id:"how-to-run",level:2},{value:"Configuration Parameters",id:"configuration-parameters",level:2},{value:"Report Outputs",id:"report-outputs",level:2}],m={toc:p},y="wrapper";function u(e){let{components:t}=e,a=(0,r.A)(e,i);return(0,l.yg)(y,(0,n.A)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,l.yg)("admonition",{title:"Work in Progress",type:"caution"},(0,l.yg)("p",{parentName:"admonition"},"This page is a work in progress and may not be fully complete")),(0,l.yg)("h1",{id:"feeder-load-analysis-segment-level-loading"},"Feeder Load Analysis (Segment Level Loading)"),(0,l.yg)("p",null,"Feeder level analysis, also known as ",(0,l.yg)("strong",{parentName:"p"},"Segment Level Loading"),"  is a tool that is built for finding the key parameters for a given list of feeders and/or substations."),(0,l.yg)("p",null,"Key Results:"),(0,l.yg)("ul",null,(0,l.yg)("li",{parentName:"ul"},"Maxmimum demand"),(0,l.yg)("li",{parentName:"ul"},"Maximum export"),(0,l.yg)("li",{parentName:"ul"},"Minimum usage/export (smallest absolute value that is not zero)")),(0,l.yg)("h2",{id:"how-to-run"},"How to run"),(0,l.yg)("ol",null,(0,l.yg)("li",{parentName:"ol"},(0,l.yg)("p",{parentName:"li"},"Clone the repo 'ewb-sdk-examples-python'")),(0,l.yg)("li",{parentName:"ol"},(0,l.yg)("p",{parentName:"li"},"As per the readme, install the required dependencies by running the command ",(0,l.yg)("inlineCode",{parentName:"p"},"pip install -e ."),". If you encounter any issues with installing the dependencies, please talk to your System Administrator for assistance.")),(0,l.yg)("li",{parentName:"ol"},(0,l.yg)("p",{parentName:"li"},"Open the file ",(0,l.yg)("inlineCode",{parentName:"p"},"request_feeder_load_analysis_study.py")," in your IDE of choice and modify the parameters to match your needs (see below)")),(0,l.yg)("li",{parentName:"ol"},(0,l.yg)("p",{parentName:"li"},"Fun the file"))),(0,l.yg)("p",null,"Here is an example of a feeder load analysis input that can be used to run the analysis:"),(0,l.yg)("pre",null,(0,l.yg)("code",{parentName:"pre",className:"language-code"},'class FeederLoadAnalysisInput:\n    feeders=["feeder1", "feeder2"],\n    substations=None,\n    subGeographicalRegions=None,\n    geographicalRegions=None,\n    startDate="2022-04-01",\n    endDate="2022-12-31",\n    fetchLvNetwork=True,\n    processFeederLoads=True,\n    processCoincidentLoads=True,\n    aggregateAtFeederLevel=False,\n    output="Test"\n')),(0,l.yg)("h2",{id:"configuration-parameters"},"Configuration Parameters"),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Field"),(0,l.yg)("th",{parentName:"tr",align:null},"Type"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"feeders"),(0,l.yg)("td",{parentName:"tr",align:null},"[List","[str]","]"),(0,l.yg)("td",{parentName:"tr",align:null},"Optional (must have at least 1 of these 4 parameters) - The mRIDs of feeders to solve for feeder load analysis")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"substations"),(0,l.yg)("td",{parentName:"tr",align:null},"[List","[str]","]"),(0,l.yg)("td",{parentName:"tr",align:null},"Optional (must have at least 1 of these 4 parameters)  -  The mRIDs of substations to solve for feeder load analysis")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"subGeographicalRegions"),(0,l.yg)("td",{parentName:"tr",align:null},"[List","[str]","]"),(0,l.yg)("td",{parentName:"tr",align:null},"Optional (must have at least 1 of these 4 parameters) - The mRIDs of sub-Geographical Region to solve for feeder load analysis")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"geographicalRegions"),(0,l.yg)("td",{parentName:"tr",align:null},"[List","[str]","]"),(0,l.yg)("td",{parentName:"tr",align:null},"Optional (must have at least 1 of these 4 parameters) - The mRIDs of Geographical Region to solve for feeder load analysis")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"startDate"),(0,l.yg)("td",{parentName:"tr",align:null},"str"),(0,l.yg)("td",{parentName:"tr",align:null},"Start date for this analysis")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"endDate"),(0,l.yg)("td",{parentName:"tr",align:null},"str"),(0,l.yg)("td",{parentName:"tr",align:null},"End date for this analysis")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"fetchLvNetwork"),(0,l.yg)("td",{parentName:"tr",align:null},"bool"),(0,l.yg)("td",{parentName:"tr",align:null},"Whether to stop analysis at distribution transformer")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"processFeederLoads"),(0,l.yg)("td",{parentName:"tr",align:null},"bool"),(0,l.yg)("td",{parentName:"tr",align:null},"Whether to include values corresponding to feeder event time points in the report")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"processCoincidentLoads"),(0,l.yg)("td",{parentName:"tr",align:null},"bool"),(0,l.yg)("td",{parentName:"tr",align:null},"Whether to include values corresponding to conductor event time points in the report")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"produceBasicReport"),(0,l.yg)("td",{parentName:"tr",align:null},"bool"),(0,l.yg)("td",{parentName:"tr",align:null},"Request for a basic report (see note below)")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"produceConductorReport"),(0,l.yg)("td",{parentName:"tr",align:null},"bool"),(0,l.yg)("td",{parentName:"tr",align:null},"Request for an extensive report")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"aggregateAtFeederLevel"),(0,l.yg)("td",{parentName:"tr",align:null},"bool"),(0,l.yg)("td",{parentName:"tr",align:null},"Request for a report which aggregate all downstream load at the feeder level")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"output"),(0,l.yg)("td",{parentName:"tr",align:null},"str"),(0,l.yg)("td",{parentName:"tr",align:null},"The file name of the resulting study")))),(0,l.yg)("h2",{id:"report-outputs"},"Report Outputs"),(0,l.yg)("table",null,(0,l.yg)("thead",{parentName:"table"},(0,l.yg)("tr",{parentName:"thead"},(0,l.yg)("th",{parentName:"tr",align:null},"Field Name"),(0,l.yg)("th",{parentName:"tr",align:null},"Description"))),(0,l.yg)("tbody",{parentName:"table"},(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"ID"),(0,l.yg)("td",{parentName:"tr",align:null},"mRID / unique identifier for the asset or segment")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"ASSET_TYPE"),(0,l.yg)("td",{parentName:"tr",align:null},"Type of asset (e.g., transformer, feeder)")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"FEEDER_LARGEST_IMPORTED_KVA"),(0,l.yg)("td",{parentName:"tr",align:null},"Demand of this asset at its feeders peak demand, in kVA")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"FEEDER_LARGEST_IMPORT_TIME"),(0,l.yg)("td",{parentName:"tr",align:null},"Timestamp of the feeder peak demand, in ISO 8601 time format (local time)")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"COINCIDENT_LARGEST_IMPORTED_KVA"),(0,l.yg)("td",{parentName:"tr",align:null},"Coincident peak demand, i.e. what is peak demand of this asset, in kVA")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"COINCIDENT_LARGEST_IMPORT_TIME"),(0,l.yg)("td",{parentName:"tr",align:null},"Timestamp of the asset peak demand, in ISO 8601 time format (local time)")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"FEEDER_LARGEST_EXPORT_KVA"),(0,l.yg)("td",{parentName:"tr",align:null},"Demand of this asset at its feeders peak export, in kVA")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"FEEDER_LARGEST_EXPORT_TIME"),(0,l.yg)("td",{parentName:"tr",align:null},"Timestamp of the feeder peak export, in ISO 8601 time format (local time)")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"COINCIDENT_LARGEST_EXPORTED_KVA"),(0,l.yg)("td",{parentName:"tr",align:null},"Coincident peak export, i.e. what is peak export of this asset, in kVA")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"COINCIDENT_LARGEST_EXPORT_TIME"),(0,l.yg)("td",{parentName:"tr",align:null},"Timestamp of the asset peak export, in ISO 8601 time format (local time)")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"FEEDER_LEAST_UTILIZATION_READING"),(0,l.yg)("td",{parentName:"tr",align:null},"When the feeder is least utilized (non-zero), what is the load of this asset, in kVA")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"FEEDER_LEAST_UTILIZATION_TIME"),(0,l.yg)("td",{parentName:"tr",align:null},"Timestamp of the minimum absolute utilization (non-zero) reading at the feeder head")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"COINCIDENT_LEAST_UTILIZATION_READING"),(0,l.yg)("td",{parentName:"tr",align:null},"Coincident least utilization, i.e. what is lowest load () of this asset, in kVA")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"COINCIDENT_LEAST_UTILIZATION_TIME"),(0,l.yg)("td",{parentName:"tr",align:null},"Timestamp of the minimum absolute utilization reading at the coincident (conductor) level")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"FEEDER_LARGEST_IMPORT_UTILIZATION_PERCENTAGE"),(0,l.yg)("td",{parentName:"tr",align:null},"Maximum import utilization percentage at the feeder level")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"COINCIDENT_LARGEST_IMPORT_UTILIZATION_PERCENTAGE"),(0,l.yg)("td",{parentName:"tr",align:null},"Maximum import utilization percentage at the coincident (conductor) level")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"FEEDER_LARGEST_EXPORT_UTILIZATION_PERCENTAGE"),(0,l.yg)("td",{parentName:"tr",align:null},"Maximum export utilization percentage at the feeder level")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"COINCIDENT_LARGEST_EXPORT_UTILIZATION_PERCENTAGE"),(0,l.yg)("td",{parentName:"tr",align:null},"Maximum export utilization percentage at the coincident (conductor) level")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"FEEDER_LEAST_UTILIZATION_PERCENTAGE"),(0,l.yg)("td",{parentName:"tr",align:null},"Minimum utilization percentage at the feeder level")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"COINCIDENT_LEAST_UTILIZATION_PERCENTAGE"),(0,l.yg)("td",{parentName:"tr",align:null},"Minimum utilization percentage at the coincident (conductor) level")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"RATING_KVA"),(0,l.yg)("td",{parentName:"tr",align:null},"Rated kVA capacity of the asset")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"OPERATING_VOLTAGE"),(0,l.yg)("td",{parentName:"tr",align:null},"Operating voltage of the asset")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"STATUS"),(0,l.yg)("td",{parentName:"tr",align:null},"Status of the asset (e.g., in service, out of service)")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"FEEDER"),(0,l.yg)("td",{parentName:"tr",align:null},"Name or identifier of the feeder")),(0,l.yg)("tr",{parentName:"tbody"},(0,l.yg)("td",{parentName:"tr",align:null},"LENGTH"),(0,l.yg)("td",{parentName:"tr",align:null},"Length of the asset (e.g., conductor length in meters or kilometers)")))))}u.isMDXComponent=!0},5680:(e,t,a)=>{a.d(t,{xA:()=>d,yg:()=>u});var n=a(6540);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var g=n.createContext({}),s=function(e){var t=n.useContext(g),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=s(e.components);return n.createElement(g.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},y=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,g=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),p=s(a),y=r,u=p["".concat(g,".").concat(y)]||p[y]||m[y]||l;return a?n.createElement(u,i(i({ref:t},d),{},{components:a})):n.createElement(u,i({ref:t},d))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=y;var o={};for(var g in t)hasOwnProperty.call(t,g)&&(o[g]=t[g]);o.originalType=e,o[p]="string"==typeof e?e:r,i[1]=o;for(var s=2;s<l;s++)i[s]=a[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}y.displayName="MDXCreateElement"}}]);