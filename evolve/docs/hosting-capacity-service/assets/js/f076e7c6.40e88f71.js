"use strict";(self.webpackChunkhosting_capacity_service=self.webpackChunkhosting_capacity_service||[]).push([["5654"],{5696:function(e,t,n){n.r(t),n.d(t,{frontMatter:()=>l,toc:()=>o,default:()=>h,metadata:()=>i,assets:()=>c,contentTitle:()=>d});var i=JSON.parse('{"id":"reference/definitions","title":"Definitions","description":"Work Package","source":"@site/versioned_docs/version-0.5.0/reference/definitions.mdx","sourceDirName":"reference","slug":"/reference/definitions","permalink":"/evolve/docs/hosting-capacity-service/0.5.0/reference/definitions","draft":false,"unlisted":false,"tags":[],"version":"0.5.0","frontMatter":{"id":"definitions","title":"Definitions","slug":"/reference/definitions"},"sidebar":"theSidebar","previous":{"title":"Reference Home","permalink":"/evolve/docs/hosting-capacity-service/0.5.0/reference/reference-home"},"next":{"title":"Input Tables","permalink":"/evolve/docs/hosting-capacity-service/0.5.0/reference/input-tables"}}'),r=n(4848),s=n(4429);let l={id:"definitions",title:"Definitions",slug:"/reference/definitions"},d,c={},o=[{value:"Work Package",id:"work-package",level:2},{value:"WorkPackageConfig",id:"workpackageconfig",level:2},{value:"Model Config",id:"model-config",level:2},{value:"TimePeriod",id:"timeperiod",level:2},{value:"Switch Meter Placement Config",id:"switch-meter-placement-config",level:2}];function a(e){let t={a:"a",h2:"h2",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h2,{id:"work-package",children:"Work Package"}),"\n",(0,r.jsx)(t.p,{children:"A work package represents a uniquely identified time series modelling job with a specific set of configuration options."}),"\n",(0,r.jsx)(t.h2,{id:"workpackageconfig",children:"WorkPackageConfig"}),"\n",(0,r.jsx)(t.p,{children:"A data class representing the configuration for a work package"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{style:{textAlign:"center"},children:"Property"}),(0,r.jsx)(t.th,{children:"Description"}),(0,r.jsx)(t.th,{children:"Type"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"feeders"}),(0,r.jsx)(t.td,{children:"List of feeder mRIDs for the feeders we want to model in this work package"}),(0,r.jsx)(t.td,{children:"List[String]"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"scenarios"}),(0,r.jsx)(t.td,{children:"List of scenario ids that we want apply to the feeders in this work package"}),(0,r.jsx)(t.td,{children:"List[String]"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"years"}),(0,r.jsx)(t.td,{children:"List of years to model for each scenario/feeder combination"}),(0,r.jsx)(t.td,{children:"List[Int]"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"model_config"}),(0,r.jsxs)(t.td,{children:["Configuration for the OpenDSS network model generation step",(0,r.jsx)("br",{}),"Refer Model Config below"]}),(0,r.jsx)(t.td,{children:"Object"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"solve_config"}),(0,r.jsxs)(t.td,{children:["Configuration for the OpenDSS network model solve step",(0,r.jsx)("br",{}),"Refer Solve Config below"]}),(0,r.jsx)(t.td,{children:"Object"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"results_config"}),(0,r.jsxs)(t.td,{children:["Configuration for managing the results produced by the work package",(0,r.jsx)("br",{}),"Refer Results Config below"]}),(0,r.jsx)(t.td,{children:"Object"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"quality_assurance_processing"}),(0,r.jsx)(t.td,{children:"Flag to enable QA checks for the OpenDSS model"}),(0,r.jsx)(t.td,{children:"Boolean"})]})]})]}),"\n",(0,r.jsx)(t.h2,{id:"model-config",children:"Model Config"}),"\n",(0,r.jsx)(t.p,{children:"A data class representing the configuration for the OpenDSS model generation in a work package"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{style:{textAlign:"center"},children:"Property"}),(0,r.jsx)(t.th,{children:"Description"}),(0,r.jsx)(t.th,{children:"Type"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"load_time"}),(0,r.jsx)(t.td,{children:"Date time range specifying the period of load data to use in the creation of the OpenDSS model"}),(0,r.jsx)(t.td,{children:"Object"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"vm_pu"}),(0,r.jsx)(t.td,{children:"Voltage per-unit of voltage source"}),(0,r.jsx)(t.td,{children:"Float"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"vmin_pu"}),(0,r.jsx)(t.td,{children:"Minimum per unit voltage for which the load model selected and generator model is assumed to apply. Below this value, the load/gen model reverts to a constant impedance model. For generator model used, this is used to determine the upper current limit. For example, if Vminpu is 0.90 then the current limit is (1/0.90) = 111%"}),(0,r.jsx)(t.td,{children:"Float"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"vmax_pu"}),(0,r.jsx)(t.td,{children:"Maximum per unit voltage for which the load model selected and generator model is assumed to apply. Above this value, the load/gen model reverts to a constant impedance model"}),(0,r.jsx)(t.td,{children:"Float"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"load_model"}),(0,r.jsxs)(t.td,{children:["Specifies how loads and generators in OpenDSS should be modelled.",(0,r.jsx)("br",{}),"1: Standard constant P+jQ load (Default)",(0,r.jsx)("br",{}),"2: Constant impedance load",(0,r.jsx)("br",{}),"3: Const P, Quadratic Q (like a motor)",(0,r.jsx)("br",{}),"4: Nominal Linear P, Quadratic Q (feeder mix). Use this with CVRfactor",(0,r.jsx)("br",{}),"5: Constant Current Magnitude",(0,r.jsx)("br",{}),"6: Const P, Fixed Q,",(0,r.jsx)("br",{}),"7: Const P, Fixed Impedance Q"]}),(0,r.jsx)(t.td,{children:"Int"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"collapse_swer"}),(0,r.jsx)(t.td,{children:"Whether to collapse SWER network"}),(0,r.jsx)(t.td,{children:"Boolean"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"meter_at_hv_source"}),(0,r.jsx)(t.td,{children:"Whether to place a meter at the voltage source."}),(0,r.jsx)(t.td,{children:"Boolean"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"meters_at_dist_transformers"}),(0,r.jsx)(t.td,{children:"Whether to place a meter at the secondary winding of each distribution transformer."}),(0,r.jsx)(t.td,{children:"Boolean"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"switch_meter_placement_configs"}),(0,r.jsxs)(t.td,{children:["List of switch meter placement configuration objects that specify which switch classes to place meters at, and the regex pattern to match for in the switch names ",(0,r.jsx)("br",{}),"Refer Switch Meter Placement Config below"]}),(0,r.jsx)(t.td,{children:"List of Objects"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"calibration"}),(0,r.jsx)(t.td,{children:"Whether to apply calibration modifications to model"}),(0,r.jsx)(t.td,{children:"Float"})]})]})]}),"\n",(0,r.jsx)(t.h2,{id:"timeperiod",children:"TimePeriod"}),"\n",(0,r.jsx)(t.p,{children:"The time period of the load data to use in OpenDSS model."}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{style:{textAlign:"center"},children:"Property"}),(0,r.jsx)(t.th,{children:"Description"}),(0,r.jsx)(t.th,{children:"Type"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"startTime"}),(0,r.jsx)(t.td,{children:"Local date time that represents the start of the time period"}),(0,r.jsx)(t.td,{children:"Datetime"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"endTime"}),(0,r.jsx)(t.td,{children:"Local date time that represents the end of the time period"}),(0,r.jsx)(t.td,{children:"Datetime"})]})]})]}),"\n",(0,r.jsx)(t.h2,{id:"switch-meter-placement-config",children:"Switch Meter Placement Config"}),"\n",(0,r.jsx)(t.p,{children:"Specifies which switch classes to place meters at, and the regex pattern to match for in the switch names."}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{style:{textAlign:"center"},children:"Property"}),(0,r.jsx)(t.th,{children:"Description"}),(0,r.jsx)(t.th,{children:"Type"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"meterSwitchClass"}),(0,r.jsx)(t.td,{children:"Specifies the switch class to add meters to. Possible values are: 'BREAKER', 'DISCONNECTOR', 'FUSE', 'JUMPER', 'LOAD_BREAK_SWITCH', 'RECLOSER'"}),(0,r.jsx)(t.td,{children:"String"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{style:{textAlign:"center"},children:"namePattern"}),(0,r.jsxs)(t.td,{children:["Java Regex (",(0,r.jsx)(t.a,{href:"https://www.w3schools.com/java/java_regex.asp",children:"https://www.w3schools.com/java/java_regex.asp"}),") that the switch's ID or name must match to get a meter assigned to it"]}),(0,r.jsx)(t.td,{children:"String"})]})]})]})]})}function h(e={}){let{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},4429:function(e,t,n){n.d(t,{R:()=>l,x:()=>d});var i=n(6540);let r={},s=i.createContext(r);function l(e){let t=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);