"use strict";(self.webpackChunk_name_=self.webpackChunk_name_||[]).push([[33],{7928:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"type":"mdx","permalink":"/evolve/docs/temporal-platform-worker/release-notes","source":"@site/src/pages/release-notes.md","description":"Release History","frontMatter":{},"unlisted":false}');var i=t(4848),l=t(8453);const r={},o=void 0,a={},d=[{value:"Release History",id:"release-history",level:4},{value:"Breaking Changes",id:"breaking-changes",level:3},{value:"New Features",id:"new-features",level:3},{value:"Enhancements",id:"enhancements",level:3},{value:"Fixes",id:"fixes",level:3},{value:"Notes",id:"notes",level:3}];function c(e){const n={a:"a",code:"code",h3:"h3",h4:"h4",hr:"hr",li:"li",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h4,{id:"release-history",children:"Release History"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Version"}),(0,i.jsx)(n.th,{style:{textAlign:"left"},children:"Date"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.a,{href:"#020",children:"0.2.0"})}),(0,i.jsx)(n.td,{style:{textAlign:"left"},children:(0,i.jsx)(n.code,{children:"02 October 2025"})})]})})]}),"\n",(0,i.jsx)(n.hr,{}),"\n",(0,i.jsx)(n.h3,{id:"breaking-changes",children:"Breaking Changes"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Workflow arguments encoded as Json are now expected to have all field names transformed to all lowercase. e.g. the field ",(0,i.jsx)(n.code,{children:'"calibrationName":'})," needs to be encoded as ",(0,i.jsx)(n.code,{children:'"calibrationname":'})]}),"\n",(0,i.jsx)(n.li,{children:"The tap calibration related workflows and activities now expect the PQV data in the load database to be stored in UTC rather that local time."}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"PopulateCalibrationTable.runForFeeder"})," now will only calculate taps if transformer tap settings are not provided to the workflow."]}),"\n",(0,i.jsx)(n.li,{children:"Calibration workflow now uses the global modelConfig default values."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"new-features",children:"New Features"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Add Sincal Forecast Workflow"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"enhancements",children:"Enhancements"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Calculation of tap settings will now take into account the existing transformer tap settings from the CIM network."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"fixes",children:"Fixes"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Fix memory allocation of ",(0,i.jsx)(n.code,{children:"HCInputDbImporterWorkflow"}),". Added ",(0,i.jsx)(n.code,{children:"batchSize"})," to the ",(0,i.jsx)(n.code,{children:"hcinputdbimporter"})," config for further tuning if needed."]}),"\n",(0,i.jsxs)(n.li,{children:["Create ingestor job with ",(0,i.jsx)(n.code,{children:"ttlSecondsAfterFinished"})," set to 5 minutes. This may improve the reliability of uploading ingestor logs"]}),"\n",(0,i.jsxs)(n.li,{children:["Fixed issue with ",(0,i.jsx)(n.code,{children:"GenerateCalibrationMeterGroupImpl"})," and ",(0,i.jsx)(n.code,{children:"PopulateCalibrationTableImpl"})," not handling feeders with EnergyConsumers but no CPI's."]}),"\n",(0,i.jsxs)(n.li,{children:["Fixed issue with ",(0,i.jsx)(n.code,{children:"CalibrationRunImpl"})," not writing out calibrated tap settings when ",(0,i.jsx)(n.code,{children:"transformerTapSettings"})," was not supplied."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"notes",children:"Notes"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Updated to temporal-platform-definitions to 0.4.0, ",(0,i.jsx)(n.code,{children:"com.zepben.commons"})," and ",(0,i.jsx)(n.code,{children:"com.zepben.ewb"})," v1.1.0\\n\\n---\\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>o});var s=t(6540);const i={},l=s.createContext(i);function r(e){const n=s.useContext(l);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);