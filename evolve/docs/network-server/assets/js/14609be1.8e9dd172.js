"use strict";(self.webpackChunkewb_network_server_doco=self.webpackChunkewb_network_server_doco||[]).push([[5033],{9519:(e,n,a)=>{a.r(n),a.d(n,{contentTitle:()=>r,default:()=>p,frontMatter:()=>l,metadata:()=>o,toc:()=>d});var i=a(8168),t=(a(6540),a(5680));const l={},r=void 0,o={type:"mdx",permalink:"/evolve/docs/network-server/release-notes",source:"@site/src/pages/release-notes.md",description:"Release History",frontMatter:{}},d=[{value:"Release History",id:"release-history",level:4},{value:"3.0.0",id:"300",level:2},{value:"Breaking Changes",id:"breaking-changes",level:3},{value:"New Features",id:"new-features",level:3},{value:"Enhancements",id:"enhancements",level:3},{value:"Fixes",id:"fixes",level:3},{value:"Notes",id:"notes",level:3},{value:"2.13.0",id:"2130",level:2},{value:"Breaking Changes",id:"breaking-changes-1",level:3},{value:"New Features",id:"new-features-1",level:3},{value:"Enhancements",id:"enhancements-1",level:3},{value:"Fixes",id:"fixes-1",level:3},{value:"Notes",id:"notes-1",level:3},{value:"2.12.0",id:"2120",level:2},{value:"Breaking Changes",id:"breaking-changes-2",level:3},{value:"New Features",id:"new-features-2",level:3},{value:"Enhancements",id:"enhancements-2",level:3},{value:"Fixes",id:"fixes-2",level:3},{value:"Notes",id:"notes-2",level:3},{value:"2.11.0",id:"2110",level:2},{value:"Breaking Changes",id:"breaking-changes-3",level:3},{value:"New Features",id:"new-features-3",level:3},{value:"Enhancements",id:"enhancements-3",level:3},{value:"Fixes",id:"fixes-3",level:3},{value:"Notes",id:"notes-3",level:3},{value:"2.10.0",id:"2100",level:2},{value:"Breaking Changes",id:"breaking-changes-4",level:3},{value:"New Features",id:"new-features-4",level:3},{value:"Enhancements",id:"enhancements-4",level:3},{value:"Fixes",id:"fixes-4",level:3},{value:"Notes",id:"notes-4",level:3},{value:"2.9.0",id:"290",level:2},{value:"Breaking Changes",id:"breaking-changes-5",level:3},{value:"New Features",id:"new-features-5",level:3},{value:"Enhancements",id:"enhancements-5",level:3},{value:"Fixes",id:"fixes-5",level:3},{value:"Notes",id:"notes-5",level:3},{value:"2.8.0",id:"280",level:2},{value:"Breaking Changes",id:"breaking-changes-6",level:3},{value:"New Features",id:"new-features-6",level:3},{value:"Enhancements",id:"enhancements-6",level:3},{value:"Fixes",id:"fixes-6",level:3},{value:"Notes",id:"notes-6",level:3},{value:"2.7.0",id:"270",level:2},{value:"Breaking Changes",id:"breaking-changes-7",level:3},{value:"New Features",id:"new-features-7",level:3},{value:"Enhancements",id:"enhancements-7",level:3},{value:"Fixes",id:"fixes-7",level:3},{value:"Notes",id:"notes-7",level:3},{value:"v2.6.0",id:"v260",level:3},{value:"Breaking Changes",id:"breaking-changes-8",level:5},{value:"New Features",id:"new-features-8",level:5},{value:"Enhancements",id:"enhancements-8",level:5},{value:"Fixes",id:"fixes-8",level:5},{value:"Notes",id:"notes-8",level:5},{value:"v2.5.0",id:"v250",level:3},{value:"Breaking Changes",id:"breaking-changes-9",level:5},{value:"New Features",id:"new-features-9",level:5},{value:"Enhancements",id:"enhancements-9",level:5},{value:"Fixes",id:"fixes-9",level:5},{value:"Notes",id:"notes-9",level:5},{value:"v2.4.0",id:"v240",level:3},{value:"Breaking Changes",id:"breaking-changes-10",level:5},{value:"New Features",id:"new-features-10",level:5},{value:"Enhancements",id:"enhancements-10",level:5},{value:"Fixes",id:"fixes-10",level:5},{value:"Notes",id:"notes-10",level:5},{value:"v2.3.0",id:"v230",level:3},{value:"Breaking Changes",id:"breaking-changes-11",level:5},{value:"New Features",id:"new-features-11",level:5},{value:"Enhancements",id:"enhancements-11",level:5},{value:"Fixes",id:"fixes-11",level:5},{value:"Notes",id:"notes-11",level:5},{value:"v2.2.0",id:"v220",level:3},{value:"Breaking Changes",id:"breaking-changes-12",level:5},{value:"New Features",id:"new-features-12",level:5},{value:"Enhancements",id:"enhancements-12",level:5},{value:"Fixes",id:"fixes-12",level:5},{value:"Notes",id:"notes-12",level:5},{value:"v2.1.0",id:"v210",level:3},{value:"Breaking Changes",id:"breaking-changes-13",level:5},{value:"New Features",id:"new-features-13",level:5},{value:"Enhancements",id:"enhancements-13",level:5},{value:"Fixes",id:"fixes-13",level:5},{value:"Notes",id:"notes-13",level:5},{value:"v2.0.0",id:"v200",level:3},{value:"Breaking Changes",id:"breaking-changes-14",level:5},{value:"New Features",id:"new-features-14",level:5},{value:"Enhancements",id:"enhancements-14",level:5},{value:"Fixes",id:"fixes-14",level:5},{value:"Notes",id:"notes-14",level:5},{value:"v1.2.0",id:"v120",level:3},{value:"Breaking Changes",id:"breaking-changes-15",level:5},{value:"New Features",id:"new-features-15",level:5},{value:"Enhancements",id:"enhancements-15",level:5},{value:"Fixes",id:"fixes-15",level:5},{value:"Notes",id:"notes-15",level:5},{value:"v1.1.0",id:"v110",level:3},{value:"Breaking Changes",id:"breaking-changes-16",level:5},{value:"New Features",id:"new-features-16",level:5},{value:"Enhancements",id:"enhancements-16",level:5},{value:"Fixes",id:"fixes-16",level:5},{value:"Notes",id:"notes-16",level:5}],s={toc:d},g="wrapper";function p(e){let{components:n,...a}=e;return(0,t.yg)(g,(0,i.A)({},s,a,{components:n,mdxType:"MDXLayout"}),(0,t.yg)("h4",{id:"release-history"},"Release History"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Version"),(0,t.yg)("th",{parentName:"tr",align:"left"},"Date"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("a",{parentName:"td",href:"#300"},"3.0.0")),(0,t.yg)("td",{parentName:"tr",align:"left"},(0,t.yg)("inlineCode",{parentName:"td"},"04 September 2025"))),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("a",{parentName:"td",href:"#v2130"},"2.13.0")),(0,t.yg)("td",{parentName:"tr",align:"left"},(0,t.yg)("inlineCode",{parentName:"td"},"21 January 2025"))),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("a",{parentName:"td",href:"#v2120"},"2.12.0")),(0,t.yg)("td",{parentName:"tr",align:"left"},(0,t.yg)("inlineCode",{parentName:"td"},"21 October 2024"))),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("a",{parentName:"td",href:"#v2110"},"2.11.0")),(0,t.yg)("td",{parentName:"tr",align:"left"},(0,t.yg)("inlineCode",{parentName:"td"},"21 May 2024"))),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("a",{parentName:"td",href:"#v2100"},"2.10.0")),(0,t.yg)("td",{parentName:"tr",align:"left"},(0,t.yg)("inlineCode",{parentName:"td"},"27 November 2023"))),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("a",{parentName:"td",href:"#v290"},"2.9.0")),(0,t.yg)("td",{parentName:"tr",align:"left"},(0,t.yg)("inlineCode",{parentName:"td"},"31 May 2023"))),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("a",{parentName:"td",href:"#v280"},"2.8.0")),(0,t.yg)("td",{parentName:"tr",align:"left"},(0,t.yg)("inlineCode",{parentName:"td"},"08 February 2023"))),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("a",{parentName:"td",href:"#v270"},"2.7.0")),(0,t.yg)("td",{parentName:"tr",align:"left"},(0,t.yg)("inlineCode",{parentName:"td"},"24 October 2022"))),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("a",{parentName:"td",href:"#v260"},"2.6.0")),(0,t.yg)("td",{parentName:"tr",align:"left"},(0,t.yg)("inlineCode",{parentName:"td"},"26 August 2022"))),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("a",{parentName:"td",href:"#v250"},"2.5.0")),(0,t.yg)("td",{parentName:"tr",align:"left"},(0,t.yg)("inlineCode",{parentName:"td"},"04 March 2022"))),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("a",{parentName:"td",href:"#v240"},"2.4.0")),(0,t.yg)("td",{parentName:"tr",align:"left"},(0,t.yg)("inlineCode",{parentName:"td"},"23 September 2021"))),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("a",{parentName:"td",href:"#v230"},"2.3.0")),(0,t.yg)("td",{parentName:"tr",align:"left"},(0,t.yg)("inlineCode",{parentName:"td"},"06 April 2021"))),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("a",{parentName:"td",href:"#v220"},"2.2.0")),(0,t.yg)("td",{parentName:"tr",align:"left"},(0,t.yg)("inlineCode",{parentName:"td"},"01 February 2021"))),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("a",{parentName:"td",href:"#v210"},"2.1.0")),(0,t.yg)("td",{parentName:"tr",align:"left"},(0,t.yg)("inlineCode",{parentName:"td"},"13 January 2021"))),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("a",{parentName:"td",href:"#v200"},"2.0.0")),(0,t.yg)("td",{parentName:"tr",align:"left"},(0,t.yg)("inlineCode",{parentName:"td"},"10 November 2020"))),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("a",{parentName:"td",href:"#v120"},"1.2.0")),(0,t.yg)("td",{parentName:"tr",align:"left"},(0,t.yg)("inlineCode",{parentName:"td"},"8 November 2019"))),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("a",{parentName:"td",href:"#v110"},"1.1.0")),(0,t.yg)("td",{parentName:"tr",align:"left"},(0,t.yg)("inlineCode",{parentName:"td"},"21 June 2019"))),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},"1.0.0"),(0,t.yg)("td",{parentName:"tr",align:"left"},(0,t.yg)("inlineCode",{parentName:"td"},"7 March 2019"))))),(0,t.yg)("hr",null),(0,t.yg)("h2",{id:"300"},"[3.0.0]"),(0,t.yg)("h3",{id:"breaking-changes"},"Breaking Changes"),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"IMPORTANT"),"\nThis version has underlying protocol breaking changes making it only compatible with SDK 1.0.0 onwards.\nOlder versions of the SDK will not work with this version."),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Upgrades to latest versions of protobuf and gRPC, which support latest SDK and latest version of Mapbox VectorTile"),(0,t.yg)("li",{parentName:"ul"},"Renamed the following enum values:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"PowerDirectionKind.UNKNOWN_DIRECTION")," -> ",(0,t.yg)("inlineCode",{parentName:"li"},"PowerDirectionKind.UNKNOWN")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"RegulatingControlModeKind.UNKNOWN_CONTROL_MODE")," -> ",(0,t.yg)("inlineCode",{parentName:"li"},"RegulatingControlModeKind.UNKNOWN")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"TransformerCoolingType.UNKNOWN_COOLING_TYPE")," -> ",(0,t.yg)("inlineCode",{parentName:"li"},"TransformerCoolingType.UNKNOWN")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"WindingConnection.UNKNOWN_WINDING")," -> ",(0,t.yg)("inlineCode",{parentName:"li"},"WindingConnection.UNKNOWN")))),(0,t.yg)("li",{parentName:"ul"},"Added ",(0,t.yg)("inlineCode",{parentName:"li"},"TransformerFunctionKind.UNKNOWN")," to allow distinction between an unknown function, and a function that is not covered by the enum (i.e. ",(0,t.yg)("inlineCode",{parentName:"li"},"other"),")."),(0,t.yg)("li",{parentName:"ul"},"Breaking changes to some of the gRPC response objects. More details on this are included in the SDK you use to interact with the gRPC services."),(0,t.yg)("li",{parentName:"ul"},"Removed support for outputting patching results to S3 and removed ",(0,t.yg)("inlineCode",{parentName:"li"},"-s3")," arg. Only local filesystem output is now supported."),(0,t.yg)("li",{parentName:"ul"},"The following CIM fields have been made nullable. Note if previously accessing these fields you will now have to handle them potentially being null.\nThis will be reflected for most fields in any GraphQL, REST, and map tile APIs.",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"Analog.positiveFlowIn")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"Document.*")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"EnergyConsumer.grounded")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"EnergySource.isExternalGrid")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"IdentifiedObject.name")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"IdentifiedObject.description")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"IdentifiedObject.numDiagramObjects")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"Meter.companyMeterId")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"NameType.description")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"Pole.classification")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"PowerSystemResource.numControls")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"RegulatingCondEq.controlEnabled")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"ShuntCompensator.grounded")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"StreetAddress.postalCode")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"StreetAddress.poBox")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"StreetDetail.*")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"SynchronousMachine.earthing")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"TapChanger.controlEnabled")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"TransformerEnd.grounded")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"UsagePoint.isVirtual")))),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"TranslatedId.name")," is now nullable in conjunction with ",(0,t.yg)("inlineCode",{parentName:"li"},"IdentifiedObject.name")," being nullable.")),(0,t.yg)("h3",{id:"new-features"},"New Features"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Added ",(0,t.yg)("inlineCode",{parentName:"li"},"GetSupplyingTransformersQuery")," to allow finding the transformer that supplies power to any conducting equipment/usage point."),(0,t.yg)("li",{parentName:"ul"},"Added ",(0,t.yg)("inlineCode",{parentName:"li"},"GetUnknownConnectivityEnergyConsumersQuery")," to retrieve all the energy consumers that are connected to EquivalentBranches inside an EquipmentContainer."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"Cut")," and ",(0,t.yg)("inlineCode",{parentName:"li"},"Clamp")," are now supported by tracing."),(0,t.yg)("li",{parentName:"ul"},"Databases with more than 2 terminals on an ",(0,t.yg)("inlineCode",{parentName:"li"},"AcLineSegment")," will no longer work. Please generate a new database from an updated migrator."),(0,t.yg)("li",{parentName:"ul"},"Data model changes:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Added ",(0,t.yg)("inlineCode",{parentName:"li"},"assets")," relationship to ",(0,t.yg)("inlineCode",{parentName:"li"},"PowerSystemResource")),(0,t.yg)("li",{parentName:"ul"},"Added ",(0,t.yg)("inlineCode",{parentName:"li"},"powerSystemResources")," relationship to ",(0,t.yg)("inlineCode",{parentName:"li"},"Asset")))),(0,t.yg)("li",{parentName:"ul"},"The GraphQL route configuration can now be specified via the ",(0,t.yg)("inlineCode",{parentName:"li"},"graphQlConfig")," key:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"maxIdentifiedObjects"),": The maximum number of identifiedObjects returned by the GraphQL ",(0,t.yg)("inlineCode",{parentName:"li"},"getIdentifiedObjects")," query (defaults to 100)."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"numWorkerThreads"),": The number of GraphQL worker threads used to handle GraphQL requests, which aren't shared with non-GraphQL queries (defaults to 4).\nPreviously this all ran on a single thread that was shared with all other API calls."))),(0,t.yg)("li",{parentName:"ul"},"Added ",(0,t.yg)("inlineCode",{parentName:"li"},"branching")," as an argument to ",(0,t.yg)("inlineCode",{parentName:"li"},"getDownstreamEquipmentTree")," which will change the backing ",(0,t.yg)("inlineCode",{parentName:"li"},"NetworkTrace")," to be a non-branching type, guaranteeing equipment\nis only added to the query results once, default behaviour is as it was before this change.")),(0,t.yg)("h3",{id:"enhancements"},"Enhancements"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Updated gRPC services to allow GrpcChannelBuilder's initial connectivity test to support permissions on a subset of services."),(0,t.yg)("li",{parentName:"ul"},"GraphQL query ",(0,t.yg)("inlineCode",{parentName:"li"},"findIdentifiedObjects")," has a new optional criteria parameter ",(0,t.yg)("inlineCode",{parentName:"li"},"inEquipmentContainerClasses")," for filtering by Equipment Container membership."),(0,t.yg)("li",{parentName:"ul"},"REST endpoint ",(0,t.yg)("inlineCode",{parentName:"li"},"ewb/network/api/v1/find/")," has a new optional ",(0,t.yg)("inlineCode",{parentName:"li"},"inEquipmentContainerClass")," parameter for filtering by Equipment Container membership."),(0,t.yg)("li",{parentName:"ul"},"MVT line features now have a ",(0,t.yg)("inlineCode",{parentName:"li"},"lineDirection")," property defining their paths are drawn from upstream to downstream."),(0,t.yg)("li",{parentName:"ul"},"Upgraded Mapbox VectorTile to version 2.1 (from 1.0)."),(0,t.yg)("li",{parentName:"ul"},"Added ",(0,t.yg)("inlineCode",{parentName:"li"},"stopTypes")," parameter to ",(0,t.yg)("inlineCode",{parentName:"li"},"getUpstreamEquipment")," GraphQL query that accepts a list of equipment types to stop on."),(0,t.yg)("li",{parentName:"ul"},"Added ",(0,t.yg)("inlineCode",{parentName:"li"},"types")," parameter to ",(0,t.yg)("inlineCode",{parentName:"li"},"findUpstreamEquipment")," GraphQL query that accepts a list of equipment types to find."),(0,t.yg)("li",{parentName:"ul"},"Added ",(0,t.yg)("inlineCode",{parentName:"li"},"branching")," as an argument to ",(0,t.yg)("inlineCode",{parentName:"li"},"getDownstreamEquipmentTree")," which will change the backing ",(0,t.yg)("inlineCode",{parentName:"li"},"NetworkTrace")," to be a non-branching type, guaranteeing equipment\nis only added to the query results once, default behaviour is as it was before this change.")),(0,t.yg)("h3",{id:"fixes"},"Fixes"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Junction mRIDs are now indexed in the ",(0,t.yg)("inlineCode",{parentName:"li"},"ItemMatcher")," correctly when being filtered out for duplicate names."),(0,t.yg)("li",{parentName:"ul"},"Fixed handling of terminals with nominal phases ",(0,t.yg)("inlineCode",{parentName:"li"},"NONE")," is the JSON and MVT processing."),(0,t.yg)("li",{parentName:"ul"},"The isolation trace now:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Checks the provided isolation points are valid."),(0,t.yg)("li",{parentName:"ul"},"Returns consistent results regardless of the order of the provided isolation points set."))),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"PowerElectronicUnits")," will now be correctly associated with their ",(0,t.yg)("inlineCode",{parentName:"li"},"powerElectronicsConnection")," ",(0,t.yg)("inlineCode",{parentName:"li"},"Feeder"),"/",(0,t.yg)("inlineCode",{parentName:"li"},"LvFeeder"),"."),(0,t.yg)("li",{parentName:"ul"},"Phases are now correctly assigned to the LV side of an LV2 transformer that is in parallel with a previously energised LV1 transformer."),(0,t.yg)("li",{parentName:"ul"},"Fixed bug that would cause a null pointer exception when processing metrics job sources with a null metadata timestamp"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"getSupplyingTransformers")," will now fall back to tracing upstream to a transformer if no Feeder is present on the starting equipment.")),(0,t.yg)("h3",{id:"notes"},"Notes"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Support up to evolve-sdk 1.0.0")),(0,t.yg)("hr",null),(0,t.yg)("h2",{id:"2130"},"[2.13.0]"),(0,t.yg)("h3",{id:"breaking-changes-1"},"Breaking Changes"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Removed ",(0,t.yg)("inlineCode",{parentName:"li"},"getCurrentEquipmentForFeeder")," implementation for ",(0,t.yg)("inlineCode",{parentName:"li"},"NetworkConsumerService")," as its functionality is now incorporated in ",(0,t.yg)("inlineCode",{parentName:"li"},"getEquipmentForContainers"),".")),(0,t.yg)("h3",{id:"new-features-1"},"New Features"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Add new config ",(0,t.yg)("inlineCode",{parentName:"li"},"auth.verifyCertificates")," to enable/disable server certificate verification when fetching JWKS from issuers. This option is defaulted to\n",(0,t.yg)("inlineCode",{parentName:"li"},"true")," in line with existing functionality."),(0,t.yg)("li",{parentName:"ul"},"Added the following new CIM classes:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"AssetFunction"),", the function performed by an asset."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"BatteryControl"),", a new class which describes behaviour specific to controlling a ",(0,t.yg)("inlineCode",{parentName:"li"},"BatteryUnit"),"."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"Clamp"),": A Clamp is a galvanic connection at a line segment where other equipment is connected. A Clamp does not cut the line segment. A Clamp is\nConductingEquipment and has one Terminal with an associated ConnectivityNode. Any other ConductingEquipment can be connected to the Clamp ConnectivityNode.\n",(0,t.yg)("strong",{parentName:"li"},"NOT CURRENTLY FULLY SUPPORTED BY TRACING")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"ControlledAppliance"),", a new class representing the identity of the appliance controlled by a specific ",(0,t.yg)("inlineCode",{parentName:"li"},"EndDeviceFunction"),"."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"Cut"),": A cut separates a line segment into two parts. The cut appears as a switch inserted between these two parts and connects them together. As the cut is\nnormally open there is no galvanic connection between the two line segment parts. But it is possible to close the cut to get galvanic connection. The cut\nterminals are oriented towards the line segment terminals with the same sequence number. Hence the cut terminal with sequence number equal to 1 is oriented\nto the line segment's terminal with sequence number equal to 1. The cut terminals also act as connection points for jumpers and other equipment, e.g. a\nmobile generator. To enable this, connectivity nodes are placed at the cut terminals. Once the connectivity nodes are in place any conducting equipment can\nbe connected at them.\n",(0,t.yg)("strong",{parentName:"li"},"NOT CURRENTLY FULLY SUPPORTED BY TRACING")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"EndDeviceFunction"),", the function performed by an end device such as a meter, communication equipment, controllers, etc."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"PanDemandResponseFunction"),", a new class which contains ",(0,t.yg)("inlineCode",{parentName:"li"},"EndDeviceFunctionKind")," and the identity of the ",(0,t.yg)("inlineCode",{parentName:"li"},"ControlledAppliance")," of this function."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"PerLengthPhaseImpedance"),", a new class used for representing the impedance of individual wires on an AcLineSegment."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"PhaseImpedanceData"),", a data class with a link to ",(0,t.yg)("inlineCode",{parentName:"li"},"PerLengthPhaseImpedance"),", for capturing the phase impedance data of an individual wire."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"StaticVarCompensator"),", a new class representing a facility for providing variable and controllable shunt reactive power."))),(0,t.yg)("li",{parentName:"ul"},"Added new enums:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"BatteryControlMode")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"EndDeviceFunctionKind")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"SVCControlMode")))),(0,t.yg)("li",{parentName:"ul"},"Added support for current state tiles. This has been implemented as v2 of the ",(0,t.yg)("inlineCode",{parentName:"li"},"mvt/geo-view")," route with the following new end points, containing only\ninformation about the requested state of the network (e.g. both the normal and current tiles will use ",(0,t.yg)("inlineCode",{parentName:"li"},"open")," for either the normally open or currently open\nstate of switches):",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"/ewb/network/graphics/api/v2/mvt/geo-view/normal/{z}/{x}/{y}"),(0,t.yg)("li",{parentName:"ul"},"/ewb/network/graphics/api/v2/mvt/geo-view/current/{z}/{x}/{y}"),(0,t.yg)("li",{parentName:"ul"},"/ewb/network/graphics/api/v2/mvt/geo-view/public/normal/{z}/{x}/{y}"))),(0,t.yg)("li",{parentName:"ul"},"Added ",(0,t.yg)("inlineCode",{parentName:"li"},"normalAdjacentFeeders()")," and ",(0,t.yg)("inlineCode",{parentName:"li"},"currentAdjacentFeeders()")," to Gql responses for ",(0,t.yg)("inlineCode",{parentName:"li"},"Feeder")," to allow looking up Feeders separated by an open switch."),(0,t.yg)("li",{parentName:"ul"},"Added ",(0,t.yg)("inlineCode",{parentName:"li"},"normalAdjacentLvFeeders()")," and ",(0,t.yg)("inlineCode",{parentName:"li"},"currentAdjacentLvFeeders()")," to Gql responses for ",(0,t.yg)("inlineCode",{parentName:"li"},"LvFeeder")," to allow looking up LvFeeders separated by an open switch.")),(0,t.yg)("h3",{id:"enhancements-1"},"Enhancements"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Added ",(0,t.yg)("inlineCode",{parentName:"li"},"ctPrimary")," and ",(0,t.yg)("inlineCode",{parentName:"li"},"minTargetDeadband")," to ",(0,t.yg)("inlineCode",{parentName:"li"},"RegulatingControl"),"."),(0,t.yg)("li",{parentName:"ul"},"Added collection of ",(0,t.yg)("inlineCode",{parentName:"li"},"BatteryControl")," to ",(0,t.yg)("inlineCode",{parentName:"li"},"BatteryUnit")),(0,t.yg)("li",{parentName:"ul"},"Added collection of ",(0,t.yg)("inlineCode",{parentName:"li"},"EndDeviceFunctionKind")," to ",(0,t.yg)("inlineCode",{parentName:"li"},"EndDevice")),(0,t.yg)("li",{parentName:"ul"},"Added an unordered collection comparator."),(0,t.yg)("li",{parentName:"ul"},"Updated ",(0,t.yg)("inlineCode",{parentName:"li"},"NetworkConsumerService.getEquipmentForContainers")," to allow requesting normal, current or all equipments.")),(0,t.yg)("h3",{id:"fixes-1"},"Fixes"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"None.")),(0,t.yg)("h3",{id:"notes-1"},"Notes"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Bump to Vert.x 4.5.11"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"Cut")," and ",(0,t.yg)("inlineCode",{parentName:"li"},"Clamp")," have been added to the model, but no processing for them has been added to the tracing, so results will not be what you expect.")),(0,t.yg)("hr",null),(0,t.yg)("h2",{id:"2120"},"[2.12.0]"),(0,t.yg)("h3",{id:"breaking-changes-2"},"Breaking Changes"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"The default pattern for extracting switch names to be used on map tiles has been removed (from ",(0,t.yg)("inlineCode",{parentName:"li"},'"^([0-9]{4,})[ ].*$"'),"). A new configuration option ",(0,t.yg)("inlineCode",{parentName:"li"},"switchNamePattern")," has been\nadded to ",(0,t.yg)("inlineCode",{parentName:"li"},"GeoViewConfig")," to allow the user to specify their own pattern for extracting switch names. This must be specified to be ",(0,t.yg)("inlineCode",{parentName:"li"},'"^([0-9]{4,})[ ].*$"')," if you were relying on\nthe existing behaviour for switch names on the map."),(0,t.yg)("li",{parentName:"ul"},"Renamed ",(0,t.yg)("inlineCode",{parentName:"li"},"TablePowerElectronicsUnit")," to ",(0,t.yg)("inlineCode",{parentName:"li"},"TablePowerElectronicsUnits"),"."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"Equipment")," to ",(0,t.yg)("inlineCode",{parentName:"li"},"EquipmentContainer")," links for LV feeders are no longer written to the database, they should never have been."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"Switch.ratedCurrent")," has been converted to a ",(0,t.yg)("inlineCode",{parentName:"li"},"double")," (used to be an ",(0,t.yg)("inlineCode",{parentName:"li"},"integer"),"). Type safe languages will need to be updated to support floating point\narithmatic/syntax."),(0,t.yg)("li",{parentName:"ul"},"Removed obsolete gRPC ",(0,t.yg)("inlineCode",{parentName:"li"},"SwitchStateService")," which only logged the functionality was not implemented. This will be replaced in a future release.")),(0,t.yg)("h3",{id:"new-features-2"},"New Features"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Data Model changes:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Added ",(0,t.yg)("inlineCode",{parentName:"li"},"specialNeed")," to ",(0,t.yg)("inlineCode",{parentName:"li"},"Customer")," to capture any special needs of the customer, e.g. life support."),(0,t.yg)("li",{parentName:"ul"},"Added ",(0,t.yg)("inlineCode",{parentName:"li"},"phaseCode")," field to the ",(0,t.yg)("inlineCode",{parentName:"li"},"UsagePoint"),". This field contains the phases supported by this ",(0,t.yg)("inlineCode",{parentName:"li"},"UsagePoint"),"."),(0,t.yg)("li",{parentName:"ul"},"Added new classes:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"Curve")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"CurveData")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"EarthFaultCompensator")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"GroundingImpedance")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"PetersenCoil")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"ReactiveCapabilityCurve")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"RotatingMachine")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"SynchronousMachine")))))),(0,t.yg)("li",{parentName:"ul"},"Added ",(0,t.yg)("inlineCode",{parentName:"li"},"/graphql/customers")," GraphQL endpoint for querying data held by the ",(0,t.yg)("inlineCode",{parentName:"li"},"CustomerService"),". This is a separate endpoint which requires specific authorisation for accessing customer data.",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"This endpoint implements queries ",(0,t.yg)("inlineCode",{parentName:"li"},"getIdentifiedObject"),", ",(0,t.yg)("inlineCode",{parentName:"li"},"getIdentifiedObjects"),", ",(0,t.yg)("inlineCode",{parentName:"li"},"findIdentifiedObjects"),", ",(0,t.yg)("inlineCode",{parentName:"li"},"findIdentifiedObjectsByName"),", and ",(0,t.yg)("inlineCode",{parentName:"li"},"getMetadata"),"."))),(0,t.yg)("li",{parentName:"ul"},"Added bounding boxes to GraphQL responses. A ",(0,t.yg)("inlineCode",{parentName:"li"},"BoundingBox")," will now be returned as part of a GQL query which plots a bounding polygon encapsulating the\nIdentifiedObjects contained within the result of the query."),(0,t.yg)("li",{parentName:"ul"},"Added ",(0,t.yg)("inlineCode",{parentName:"li"},"polygon")," field to the ",(0,t.yg)("inlineCode",{parentName:"li"},"GqlResponse"),". This field contains a convex polygon encompassing the locations(if available) of the ",(0,t.yg)("inlineCode",{parentName:"li"},"IdentifiedObject"),"'s returned in the response.")),(0,t.yg)("h3",{id:"enhancements-2"},"Enhancements"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"None.")),(0,t.yg)("h3",{id:"fixes-2"},"Fixes"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Any ",(0,t.yg)("inlineCode",{parentName:"li"},"DiagramObject")," returned via the GraphQL interface now correctly references the ",(0,t.yg)("inlineCode",{parentName:"li"},"IdentifiedObject")," it represents, rather than having a self-reference.")),(0,t.yg)("h3",{id:"notes-2"},"Notes"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Upgraded to support ewb-sdk-jvm 0.23.0")),(0,t.yg)("hr",null),(0,t.yg)("h2",{id:"2110"},"[2.11.0]"),(0,t.yg)("h3",{id:"breaking-changes-3"},"Breaking Changes"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Updated to JVM SDK version 0.18.0, which introduces the following breaking changes:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"IdentifiedObject.addName")," has been refactored to take in a ",(0,t.yg)("inlineCode",{parentName:"li"},"NameType")," and a ",(0,t.yg)("inlineCode",{parentName:"li"},"String"),". This is doing the same thing under the hood as previous ",(0,t.yg)("inlineCode",{parentName:"li"},"addName()"),"    function,\nbut simplifies the input by lowering the amount of objects that needed to be created prior to adding names.\nExample usage change:\n",(0,t.yg)("inlineCode",{parentName:"li"},'obj.addName(nameType, "name", obj))')," or ",(0,t.yg)("inlineCode",{parentName:"li"},'obj.addName(nameType.getOrAddName("name", obj))')," becomes ",(0,t.yg)("inlineCode",{parentName:"li"},'obj.addName(nameType, "name")')),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"addName()"),"/",(0,t.yg)("inlineCode",{parentName:"li"},"removeName()")," related function for both ",(0,t.yg)("inlineCode",{parentName:"li"},"IdentifiedObject")," and ",(0,t.yg)("inlineCode",{parentName:"li"},"NameType")," will now also perform the same function on the other object type.\ni.e. Removing a name from the identified object will remove it from the name type and vice versa. Same interaction is also applied to adding a name."),(0,t.yg)("li",{parentName:"ul"},"Removed ",(0,t.yg)("inlineCode",{parentName:"li"},"ProtectionEquipment"),"."),(0,t.yg)("li",{parentName:"ul"},"Change of inheritance: ",(0,t.yg)("inlineCode",{parentName:"li"},"CurrentRelay")," ","\u2192"," ",(0,t.yg)("inlineCode",{parentName:"li"},"ProtectionEquipment"),".\nbecomes ",(0,t.yg)("inlineCode",{parentName:"li"},"CurrentRelay")," ","\u2192"," ",(0,t.yg)("inlineCode",{parentName:"li"},"ProtectionRelayFunction"),"."),(0,t.yg)("li",{parentName:"ul"},"Removed symmetric relation ",(0,t.yg)("inlineCode",{parentName:"li"},"ProtectionEquipment")," ","\u2194"," ",(0,t.yg)("inlineCode",{parentName:"li"},"ProtectedSwitch"),"."),(0,t.yg)("li",{parentName:"ul"},"Renamed ",(0,t.yg)("inlineCode",{parentName:"li"},"CurrentRelayInfo")," to ",(0,t.yg)("inlineCode",{parentName:"li"},"RelayInfo"),".",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"The override ",(0,t.yg)("inlineCode",{parentName:"li"},"assetInfo: RelayInfo?")," has been moved from ",(0,t.yg)("inlineCode",{parentName:"li"},"CurrentRelay")," to its new parent class, ",(0,t.yg)("inlineCode",{parentName:"li"},"ProtectionRelayFunction"),"."),(0,t.yg)("li",{parentName:"ul"},"Renamed ",(0,t.yg)("inlineCode",{parentName:"li"},"RelayInfo.removeDelay")," to ",(0,t.yg)("inlineCode",{parentName:"li"},"RelayInfo.removeDelayAt"),". The original method name has been repurposed to remove a delay by its value rather than its index."))),(0,t.yg)("li",{parentName:"ul"},"Reworked values for enumerable type ",(0,t.yg)("inlineCode",{parentName:"li"},"ProtectionKind"),"."))),(0,t.yg)("li",{parentName:"ul"},"The database has been split into three databases:",(0,t.yg)("ol",{parentName:"li"},(0,t.yg)("li",{parentName:"ol"},"The existing database containing the network model (",(0,t.yg)("inlineCode",{parentName:"li"},"*-network-model.sqlite"),") with classes in the ",(0,t.yg)("inlineCode",{parentName:"li"},"network")," package."),(0,t.yg)("li",{parentName:"ol"},"A new database containing the customer information (",(0,t.yg)("inlineCode",{parentName:"li"},"*-customers.sqlite"),") with classes in the ",(0,t.yg)("inlineCode",{parentName:"li"},"customer")," package."),(0,t.yg)("li",{parentName:"ol"},"A new database containing the diagrams (",(0,t.yg)("inlineCode",{parentName:"li"},"*-diagrams.sqlite"),") with classes in the ",(0,t.yg)("inlineCode",{parentName:"li"},"diagram")," package."))),(0,t.yg)("li",{parentName:"ul"},"Renamed the following tables (and their associated indexes):",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"battery_unit")," to ",(0,t.yg)("inlineCode",{parentName:"li"},"battery_units")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"photo_voltaic_unit")," to ",(0,t.yg)("inlineCode",{parentName:"li"},"photo_voltaic_units")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"power_electronics_connection")," to ",(0,t.yg)("inlineCode",{parentName:"li"},"power_electronics_connections")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"power_electronics_connection_phase")," to ",(0,t.yg)("inlineCode",{parentName:"li"},"power_electronics_connection_phases")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"power_electronics_wind_unit")," to ",(0,t.yg)("inlineCode",{parentName:"li"},"power_electronics_wind_units")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"transformer_star_impedance")," to ",(0,t.yg)("inlineCode",{parentName:"li"},"transformer_star_impedances")))),(0,t.yg)("li",{parentName:"ul"},"All GraphQL tracing queries have new signatures and response types."),(0,t.yg)("li",{parentName:"ul"},"The command line argument ",(0,t.yg)("inlineCode",{parentName:"li"},"--days-to-search")," has been deprecated in favour of the renamed option ",(0,t.yg)("inlineCode",{parentName:"li"},"--days-to-search-network"),", which provides clarity from the new search options.")),(0,t.yg)("h3",{id:"new-features-3"},"New Features"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Metadata can now be retrieved via the GraphQL end point using the ",(0,t.yg)("inlineCode",{parentName:"li"},"getMetadata")," function."),(0,t.yg)("li",{parentName:"ul"},"Added ",(0,t.yg)("inlineCode",{parentName:"li"},"getMetadata()")," gRPCs to ",(0,t.yg)("inlineCode",{parentName:"li"},"*ConsumerService")," for providing service information to clients."),(0,t.yg)("li",{parentName:"ul"},"Metadata can now be retrieved via the GraphQL end point using the ",(0,t.yg)("inlineCode",{parentName:"li"},"getMetadata")," function."),(0,t.yg)("li",{parentName:"ul"},"Added gRPCs:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"getCustomersForContainer")," - gets all the Customers associated with Meters on a given EquipmentContainer."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"getDiagramObjects")," - gets all DiagramObjects associated with a given mRID."))),(0,t.yg)("li",{parentName:"ul"},"Loading of the ",(0,t.yg)("inlineCode",{parentName:"li"},"customers")," database can be disabled with the new ",(0,t.yg)("inlineCode",{parentName:"li"},"--disable-customers")," CLI option."),(0,t.yg)("li",{parentName:"ul"},"Added new classes and fields to support advanced modelling of protection relays:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"SeriesCompensator"),": A series capacitor or reactor or an AC transmission line without charging susceptance."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"Ground"),": A point where the system is grounded used for connecting conducting equipment to ground."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"GroundDisconnector"),": A manually operated or motor operated mechanical switching device used for isolating a circuit\nor equipment from ground."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"ProtectionRelayScheme"),": A scheme that a group of relay functions implement. For example, typically schemes are\nprimary and secondary, or main and failsafe."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"ProtectionRelayFunction"),": A function that a relay implements to protect equipment."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"ProtectionRelaySystem"),": A relay system for controlling ",(0,t.yg)("inlineCode",{parentName:"li"},"ProtectedSwitch"),"es."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"RelaySetting"),": The threshold settings for a given relay."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"VoltageRelay"),": A device that detects when the voltage in an AC circuit reaches a preset voltage."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"DistanceRelay"),": A protective device used in power systems that measures the impedance of a transmission line to\ndetermine the distance to a fault, and initiates circuit breaker tripping to isolate the faulty\nsection and safeguard the power system."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"RelayInfo.recloseFast"),": True if recloseDelays are associated with a fast Curve, False otherwise."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"RegulatingControl.ratedCurrent"),": The rated current of associated CT in amps for a RegulatingControl."))),(0,t.yg)("li",{parentName:"ul"},"You can now load from a specific date, rather than using the latest available model. See ",(0,t.yg)("inlineCode",{parentName:"li"},"--network-date")," for details."),(0,t.yg)("li",{parentName:"ul"},"You can control how far from the network model the customer and diagram database can be. See ",(0,t.yg)("inlineCode",{parentName:"li"},"--days-to-search-customer")," and ",(0,t.yg)("inlineCode",{parentName:"li"},"--days-to-search-diagram"),"."),(0,t.yg)("li",{parentName:"ul"},"Added ",(0,t.yg)("inlineCode",{parentName:"li"},"designTemperature")," and ",(0,t.yg)("inlineCode",{parentName:"li"},"designRating")," to ",(0,t.yg)("inlineCode",{parentName:"li"},"Conductor")," to support span level ratings based on how each conductor has been constructed for Essential Energy.")),(0,t.yg)("h3",{id:"enhancements-3"},"Enhancements"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"None.")),(0,t.yg)("h3",{id:"fixes-3"},"Fixes"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"findIdentifiedObjects")," and ",(0,t.yg)("inlineCode",{parentName:"li"},"/network/api/v1/find")," APIs now support symbol characters that could either cause no matching results to be found or errors to be returned.")),(0,t.yg)("h3",{id:"notes-3"},"Notes"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"None.")),(0,t.yg)("hr",null),(0,t.yg)("h2",{id:"2100"},"[2.10.0]"),(0,t.yg)("h3",{id:"breaking-changes-4"},"Breaking Changes"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Updated to support ewb-network-routes 2.16.0.")),(0,t.yg)("h3",{id:"new-features-4"},"New Features"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"None.")),(0,t.yg)("h3",{id:"enhancements-4"},"Enhancements"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"None.")),(0,t.yg)("h3",{id:"fixes-4"},"Fixes"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"None.")),(0,t.yg)("h3",{id:"notes-4"},"Notes"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"None.")),(0,t.yg)("hr",null),(0,t.yg)("h2",{id:"290"},"[2.9.0]"),(0,t.yg)("h3",{id:"breaking-changes-5"},"Breaking Changes"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Updated to ewb-network-routes 2.15.0 and latest SDK version. This removed RecloseSequences and corresponding CIM + Gql types.")),(0,t.yg)("h3",{id:"new-features-5"},"New Features"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Added GraphQl query ",(0,t.yg)("inlineCode",{parentName:"li"},"getDownstreamEquipment()")," which given an mRID and a network state will perform a downstream trace from the mRID and provide all objects")),(0,t.yg)("h3",{id:"enhancements-5"},"Enhancements"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"None.")),(0,t.yg)("h3",{id:"fixes-5"},"Fixes"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"getUpstreamEquipment()")," GraphQL query will no longer stop on LvFeeder heads, and will instead exhaustively trace if no stop type/mRID is given.")),(0,t.yg)("h3",{id:"notes-5"},"Notes"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"None.")),(0,t.yg)("hr",null),(0,t.yg)("h2",{id:"280"},"[2.8.0]"),(0,t.yg)("h3",{id:"breaking-changes-6"},"Breaking Changes"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"None.")),(0,t.yg)("h3",{id:"new-features-6"},"New Features"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"The evolve-sdk now includes an EquivalentNetworkUtils class to add equivalent networks at the edge of equipment containers."),(0,t.yg)("li",{parentName:"ul"},"Added support for version 0.14.0 of the Evolve SDK. This includes support for the following CIM types:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"CurrentTransformer")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"CurrentTransformerInfo")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"PotentialTransformer")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"PotentialTransformerInfo")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"ProtectionEquipment")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"CurrentRelay")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"CurrentRelayInfo")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"SwitchInfo")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"RecloseSequence")))),(0,t.yg)("li",{parentName:"ul"},"Added support for version 2.14.0 of ewb-network-routes."),(0,t.yg)("li",{parentName:"ul"},"The evolve-sdk now includes an EquivalentNetworkUtils class to add equivalent networks at the edge of equipment containers.")),(0,t.yg)("h3",{id:"enhancements-6"},"Enhancements"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Added the following properties to the Mapbox vector tiles:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"a partially off supply flag for equipment that is only partially energised."),(0,t.yg)("li",{parentName:"ul"},"a flag to indicate if something is a switch, allowing detection of switches with invalid/missing symbols."))),(0,t.yg)("li",{parentName:"ul"},"Add container mRIDs to equipment in vector tiles features."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"normalPhases")," and ",(0,t.yg)("inlineCode",{parentName:"li"},"currentPhases")," (traced phases) are now exposed through GqlTerminal")),(0,t.yg)("h3",{id:"fixes-6"},"Fixes"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"From SDK 0.14.0: Fixed limited connected traces with ",(0,t.yg)("inlineCode",{parentName:"li"},"maximumSteps = 1")," were including equipment 2 steps away."),(0,t.yg)("li",{parentName:"ul"},"Fixes issue in the evolve-sdk where the AuxiliaryEquipment and ProtectionEquipment was not getting properly assigned by the AssignToFeeder class.")),(0,t.yg)("h3",{id:"notes-6"},"Notes"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"None.")),(0,t.yg)("hr",null),(0,t.yg)("h2",{id:"270"},"[2.7.0]"),(0,t.yg)("h3",{id:"breaking-changes-7"},"Breaking Changes"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Database versions prior to v43 are no longer supported."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"Feeder")," instances are now only assigned to HV/MV equipment. ",(0,t.yg)("inlineCode",{parentName:"li"},"LvFeeder")," instances are assigned to LV equipment."),(0,t.yg)("li",{parentName:"ul"},"The GraphQL ",(0,t.yg)("inlineCode",{parentName:"li"},"Equipment.currentFeeders")," field has been replaced with ",(0,t.yg)("inlineCode",{parentName:"li"},"Equipment.currentContainers"),", which takes an optional list of CIM type names to filter the collection. If you\nwish to keep your GraphQL requests backwards compatible, you can use the following to return only the current feeders in the previous field:")),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre"},'// old:\ncurrentFeeders {\n    <field selectors>\n}\n\n// equivalent:\ncurrentFeeders: currentContainers(types: ["Feeder"]) {\n    ... on Feeder {\n        <field selectors>\n    }\n}\n')),(0,t.yg)("h3",{id:"new-features-7"},"New Features"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Added support for YYN single phase transformers when setting phases."),(0,t.yg)("li",{parentName:"ul"},"Added support for ",(0,t.yg)("inlineCode",{parentName:"li"},"LvFeeder"),", which contains a section of network below a distribution transformer."),(0,t.yg)("li",{parentName:"ul"},"Added the following GraphQL queries:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"getUpstreamEquipment()"),": Performs an upstream trace, configurably stopping on either a particular type or a certain mRID, or the feeder head if neither were found."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"getNetworkHierarchy()"),": Retrieve the network hierarchy classes."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"getIsolatedEquipment()"),": Request the equipment that belongs to an isolation area."))),(0,t.yg)("li",{parentName:"ul"},"Added the following optional arguments to the ",(0,t.yg)("inlineCode",{parentName:"li"},"getEquipmentForContainers")," gRPC call:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"includeEnergizingContainers"),": Specifies whether to include equipment from containers energizing the ones listed in\n",(0,t.yg)("inlineCode",{parentName:"li"},"mRIDs"),". This is of the enum type ",(0,t.yg)("inlineCode",{parentName:"li"},"IncludedEnergizingContainers"),", which has three possible values:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"EXCLUDE_ENERGIZING_CONTAINERS"),": No additional effect (default)."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"INCLUDE_ENERGIZING_FEEDERS"),": Include HV/MV feeders that power LV feeders listed in ",(0,t.yg)("inlineCode",{parentName:"li"},"mRIDs"),"."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"INCLUDE_ENERGIZING_SUBSTATIONS"),": In addition to ",(0,t.yg)("inlineCode",{parentName:"li"},"INCLUDE_ENERGIZING_FEEDERS"),", include substations that energize a HV/MV feeder listed in ",(0,t.yg)("inlineCode",{parentName:"li"},"mRIDs")," or included\nvia ",(0,t.yg)("inlineCode",{parentName:"li"},"INCLUDE_ENERGIZING_FEEDERS"),"."))),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"includeEnergizedContainers"),": Specifies whether to include equipment from containers energized by the ones listed in\n",(0,t.yg)("inlineCode",{parentName:"li"},"mRIDs"),". This is of the enum type ",(0,t.yg)("inlineCode",{parentName:"li"},"IncludedEnergizedContainers"),", which has three possible values:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"EXCLUDE_ENERGIZED_CONTAINERS"),": No additional effect (default)."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"INCLUDE_ENERGIZED_FEEDERS"),": Include HV/MV feeders powered by substations listed in ",(0,t.yg)("inlineCode",{parentName:"li"},"mRIDs"),"."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"INCLUDE_ENERGIZED_LV_FEEDERS"),": In addition to ",(0,t.yg)("inlineCode",{parentName:"li"},"INCLUDE_ENERGIZED_FEEDERS"),", include LV feeders that are energizes by a HV/MV feeder listed in ",(0,t.yg)("inlineCode",{parentName:"li"},"mRIDs")," or included\nvia ",(0,t.yg)("inlineCode",{parentName:"li"},"INCLUDE_ENERGIZED_FEEDERS"),"."))))),(0,t.yg)("li",{parentName:"ul"},"Added an ",(0,t.yg)("inlineCode",{parentName:"li"},"isSwer")," flag to the Mapbox vector tiles, indicating if a feature is part of the SWER network.")),(0,t.yg)("h3",{id:"enhancements-7"},"Enhancements"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"None.")),(0,t.yg)("h3",{id:"fixes-7"},"Fixes"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"None.")),(0,t.yg)("h3",{id:"notes-7"},"Notes"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"None.")),(0,t.yg)("hr",null),(0,t.yg)("h3",{id:"v260"},"v2.6.0"),(0,t.yg)("h5",{id:"breaking-changes-8"},"Breaking Changes"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"None.")),(0,t.yg)("h5",{id:"new-features-8"},"New Features"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Added GraphQL route ",(0,t.yg)("inlineCode",{parentName:"li"},"/ewb/graphql/api"),". This includes the following queries:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"getIdentifiedObject"),": Request an ",(0,t.yg)("inlineCode",{parentName:"li"},"IdentifiedObject")," by mRID."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"getIdentifiedObjects"),": Request many ",(0,t.yg)("inlineCode",{parentName:"li"},"IdentifiedObject")," instances by their mRIDs"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"findIdentifiedObjects"),": Find all ",(0,t.yg)("inlineCode",{parentName:"li"},"IdentifiedObject")," instances that match the provided criteria."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"findIdentifiedObjectsByName"),": Find multiple objects by their ",(0,t.yg)("inlineCode",{parentName:"li"},"name")," and NMI ",(0,t.yg)("inlineCode",{parentName:"li"},"nametype"),"."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"getAssetInfo"),": Returns all ",(0,t.yg)("inlineCode",{parentName:"li"},"AssetInfo")," and ",(0,t.yg)("inlineCode",{parentName:"li"},"PerLengthLineParameter")," objects that match the requested types."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"getDownstreamEquipmentTree"),": Performs a downstream trace and return the paths found."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"findUpstreamEquipment"),": Performs an upstream trace looking for objects of a particular type."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"getConnectedEquipment"),": Performs a trace outwards from a selected object for a set number of steps, and optionally, only in a specified direction.")))),(0,t.yg)("h5",{id:"enhancements-8"},"Enhancements"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"None.")),(0,t.yg)("h5",{id:"fixes-8"},"Fixes"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"None.")),(0,t.yg)("h5",{id:"notes-8"},"Notes"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"None.")),(0,t.yg)("hr",null),(0,t.yg)("h3",{id:"v250"},"v2.5.0"),(0,t.yg)("h5",{id:"breaking-changes-9"},"Breaking Changes"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"NMI and load aggregation processing has been updated for semantic relocation in the CIM model."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"PowerTransformer")," instances are now distinguished using their ",(0,t.yg)("inlineCode",{parentName:"li"},"function")," rather than an associated ",(0,t.yg)("inlineCode",{parentName:"li"},"DiagramObject"),"."),(0,t.yg)("li",{parentName:"ul"},"Updated ",(0,t.yg)("inlineCode",{parentName:"li"},"isPrimary")," flag in old JSON API's to reference ",(0,t.yg)("inlineCode",{parentName:"li"},"isExternalGrid")," rather than an ",(0,t.yg)("inlineCode",{parentName:"li"},"EnergySource")," having any associated ",(0,t.yg)("inlineCode",{parentName:"li"},"EnergySourcePhase"),"."),(0,t.yg)("li",{parentName:"ul"},"Feeder API's that return ",(0,t.yg)("inlineCode",{parentName:"li"},"infeeds")," will now return the head of the feeder rather than the external grid source."),(0,t.yg)("li",{parentName:"ul"},"Renamed ",(0,t.yg)("inlineCode",{parentName:"li"},"PhaseDirection")," to ",(0,t.yg)("inlineCode",{parentName:"li"},"FeederDirection"),":",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"IN")," renamed to ",(0,t.yg)("inlineCode",{parentName:"li"},"UPSTREAM")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"OUT")," renamed to ",(0,t.yg)("inlineCode",{parentName:"li"},"DOWNSTREAM")))),(0,t.yg)("li",{parentName:"ul"},"Separated feeder direction from phase.",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},"Direction has been removed from ",(0,t.yg)("inlineCode",{parentName:"li"},"TracedPhases")," and is now accessed directly off the ",(0,t.yg)("inlineCode",{parentName:"li"},"Terminal"),"."),(0,t.yg)("li",{parentName:"ul"},"Direction has been removed from ",(0,t.yg)("inlineCode",{parentName:"li"},"PhaseStatus")," and is now accessed via ",(0,t.yg)("inlineCode",{parentName:"li"},"DirectionStatus"),"."))),(0,t.yg)("li",{parentName:"ul"},"The following ",(0,t.yg)("inlineCode",{parentName:"li"},"Terminal")," fields are now Kotlin properties rather than accessor functions:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"connectivityNodeId")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"isConnected")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"normalPhases")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"currentPhases")))),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"PhaseCode.singlePhases")," is now a Kotlin read-only property rather than an accessor function.")),(0,t.yg)("h5",{id:"new-features-9"},"New Features"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"The connection point identifier is now configurable via the config file option ",(0,t.yg)("inlineCode",{parentName:"li"},"connectionPointIdentifier"),". Defaults to ",(0,t.yg)("inlineCode",{parentName:"li"},"NMI")," if not specified."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"PowerTransformer")," now has a ",(0,t.yg)("inlineCode",{parentName:"li"},"function")," and ",(0,t.yg)("inlineCode",{parentName:"li"},"constructionKind"),".")),(0,t.yg)("h5",{id:"enhancements-9"},"Enhancements"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Updated GQL filtering mechanism to allow more precise matching of objects."),(0,t.yg)("li",{parentName:"ul"},"Expanded the number of fields available for a ",(0,t.yg)("inlineCode",{parentName:"li"},"StreetAddress")),(0,t.yg)("li",{parentName:"ul"},"Added fields to ",(0,t.yg)("inlineCode",{parentName:"li"},"EnergySource")," to allow representation of a higher-level power grid connection modelled as a slack bus."),(0,t.yg)("li",{parentName:"ul"},"Reworked phase connectivity to better handle unknown primary phases (X/Y).")),(0,t.yg)("h5",{id:"fixes-9"},"Fixes"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"JASNI startup exception has been resolved."),(0,t.yg)("li",{parentName:"ul"},"nmis-transformers-feeders API now correctly populates feeders for NMIs / usage points that have no upstream transformer on the feeder."),(0,t.yg)("li",{parentName:"ul"},"Relaxed the constraint on ",(0,t.yg)("inlineCode",{parentName:"li"},"power_electronics_connection_mrid")," (no longer unique) in the following tables:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"battery_unit")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"photo_voltaic_unit")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"power_electronics_wind_unit")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"power_electronics_connection_phase"))))),(0,t.yg)("h5",{id:"notes-9"},"Notes"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"None.")),(0,t.yg)("hr",null),(0,t.yg)("h3",{id:"v240"},"v2.4.0"),(0,t.yg)("h5",{id:"breaking-changes-10"},"Breaking Changes"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"All classes will now send their class name via the REST API rather than ",(0,t.yg)("inlineCode",{parentName:"li"},"BasicNode")," if they did not exist in the old network model."),(0,t.yg)("li",{parentName:"ul"},"ID correlations are no longer used. Equivalent functionality has been introduced into the CIM.")),(0,t.yg)("h5",{id:"new-features-10"},"New Features"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"The gRPC API now supports the following CIM classes:",(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"EquivalentBranch")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"NoLoadTest")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"OpenCircuitTest")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"ShortCircuitTest")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"ShuntCompensatorInfo")))),(0,t.yg)("li",{parentName:"ul"},"Added ",(0,t.yg)("inlineCode",{parentName:"li"},"isVirtual")," and ",(0,t.yg)("inlineCode",{parentName:"li"},"connectionCategory")," to ",(0,t.yg)("inlineCode",{parentName:"li"},"UsagePoint"))),(0,t.yg)("h5",{id:"enhancements-10"},"Enhancements"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"None.")),(0,t.yg)("h5",{id:"fixes-10"},"Fixes"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Conductor colouring has been corrected in the graphics routes."),(0,t.yg)("li",{parentName:"ul"},"Switch states have been corrected in the graphics routes.")),(0,t.yg)("h5",{id:"notes-10"},"Notes"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"None.")),(0,t.yg)("hr",null),(0,t.yg)("h3",{id:"v230"},"v2.3.0"),(0,t.yg)("h5",{id:"breaking-changes-11"},"Breaking Changes"),(0,t.yg)("p",null," None."),(0,t.yg)("h5",{id:"new-features-11"},"New Features"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"Added support for:"),(0,t.yg)("ul",{parentName:"li"},(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"BusBarSection")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"LoadBreakSwitch")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"TransformerEndInfo")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"TransformerTankInfo")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"TransformerStarImpedance")))),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"gRPC service to listen for switch state changes. Note functionality is not implemented yet, the request is just logged.")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("p",{parentName:"li"},"Added endpoint to request associated transformers and feeders for nmis - ",(0,t.yg)("inlineCode",{parentName:"p"},"/ewb/network/api/v1/nmi-transformers-feeders"),". See the API documentation for details."))),(0,t.yg)("h5",{id:"enhancements-11"},"Enhancements"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Asset response for equipment now includes location.")),(0,t.yg)("h5",{id:"fixes-11"},"Fixes"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"None.")),(0,t.yg)("h5",{id:"notes-11"},"Notes"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Updated to Vert.x 3.9.6.")),(0,t.yg)("hr",null),(0,t.yg)("h3",{id:"v220"},"v2.2.0"),(0,t.yg)("h5",{id:"breaking-changes-12"},"Breaking Changes"),(0,t.yg)("p",null," None."),(0,t.yg)("h5",{id:"new-features-12"},"New Features"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"None.")),(0,t.yg)("h5",{id:"enhancements-12"},"Enhancements"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"None.")),(0,t.yg)("h5",{id:"fixes-12"},"Fixes"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"None.")),(0,t.yg)("h5",{id:"notes-12"},"Notes"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"None.")),(0,t.yg)("hr",null),(0,t.yg)("h3",{id:"v210"},"v2.1.0"),(0,t.yg)("h5",{id:"breaking-changes-13"},"Breaking Changes"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Updated ewb-network-routes version to latest snapshot.")),(0,t.yg)("h5",{id:"new-features-13"},"New Features"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Added a new route for retrieving metadata about the network - ",(0,t.yg)("inlineCode",{parentName:"li"},"/ewb/network/api/v1/metadata"),".\nSee the API documentation for details.")),(0,t.yg)("h5",{id:"enhancements-13"},"Enhancements"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"None.")),(0,t.yg)("h5",{id:"fixes-13"},"Fixes"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Transformer voltage is extracted from the first of the transformer's ends.")),(0,t.yg)("h5",{id:"notes-13"},"Notes"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"None.")),(0,t.yg)("hr",null),(0,t.yg)("h3",{id:"v200"},"v2.0.0"),(0,t.yg)("h5",{id:"breaking-changes-14"},"Breaking Changes"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Fault indicators are no longer included in network traces (including feeder assets)."),(0,t.yg)("li",{parentName:"ul"},"Updated database version."),(0,t.yg)("li",{parentName:"ul"},"Updated to use new patch API JSON format and layers.")),(0,t.yg)("h5",{id:"new-features-14"},"New Features"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},'Added a new trace to find conducting equipment with attached usage points downstream from the\nspecified conducting equipment, with an optional conducting equipment stop condition to support\n"between" tracing. If there is no path between from -> to, a trace in the opposite direction will\nalso be performed (i.e. to -> from)'),(0,t.yg)("li",{parentName:"ul"},"Support for load profile manipulation has been added to the patch processor. The final manipulation value is ",(0,t.yg)("inlineCode",{parentName:"li"},"quantity / df"),"."),(0,t.yg)("li",{parentName:"ul"},"A REST API has been added to retrieve load manipulations at ",(0,t.yg)("inlineCode",{parentName:"li"},"/ewb/patch/api/v1/load-manipulations"),".\nSee the ",(0,t.yg)("a",{parentName:"li",href:"https://docs.zepben.com"},"online documentation")," for details. ")),(0,t.yg)("h5",{id:"enhancements-14"},"Enhancements"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"The mapbox vector tiles now include conductor paths if available.")),(0,t.yg)("h5",{id:"fixes-14"},"Fixes"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"None.")),(0,t.yg)("h5",{id:"notes-14"},"Notes"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"None.")),(0,t.yg)("hr",null),(0,t.yg)("h3",{id:"v120"},"v1.2.0"),(0,t.yg)("h5",{id:"breaking-changes-15"},"Breaking Changes"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Updated to use v11.0 network database.")),(0,t.yg)("h5",{id:"new-features-15"},"New Features"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Underground/Overhead conductors are now supported. A flag ",(0,t.yg)("em",{parentName:"li"},(0,t.yg)("strong",{parentName:"em"},"isUnderground"))," has been added to all JSON payloads that\nreturn conductor details.  "),(0,t.yg)("li",{parentName:"ul"},"Conductor styling has been added in the Mapbox Vector Tile feature properties. You can use the ",(0,t.yg)("em",{parentName:"li"},(0,t.yg)("strong",{parentName:"em"},"lineColor")),", ",(0,t.yg)("em",{parentName:"li"},(0,t.yg)("strong",{parentName:"em"},"lineWidth")),"\nand ",(0,t.yg)("em",{parentName:"li"},(0,t.yg)("strong",{parentName:"em"},"isUnderground"))," properties of conductor features to control the rendering of map layers."),(0,t.yg)("li",{parentName:"ul"},"Added an isolation trace API that can find all assets within a proposed isolation area.")),(0,t.yg)("h5",{id:"enhancements-15"},"Enhancements"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"HV supply point assets now include connected meter information like other supply points."),(0,t.yg)("li",{parentName:"ul"},"A new field ",(0,t.yg)("em",{parentName:"li"},(0,t.yg)("strong",{parentName:"em"},"rating"))," has been added to all JSON payloads that return transformer details.")),(0,t.yg)("h5",{id:"fixes-15"},"Fixes"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Phases are now being inferred when the core configuration drops phases.")),(0,t.yg)("h5",{id:"notes-15"},"Notes"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"None.")),(0,t.yg)("hr",null),(0,t.yg)("h3",{id:"v110"},"v1.1.0"),(0,t.yg)("h5",{id:"breaking-changes-16"},"Breaking Changes"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Updated to use v10.0 network database.")),(0,t.yg)("h5",{id:"new-features-16"},"New Features"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Patch actions are now processed in order based on type (add, modify then remove)."),(0,t.yg)("li",{parentName:"ul"},"Support for system tags (e.g. GIS) has been added to all routes that use asset ID's."),(0,t.yg)("li",{parentName:"ul"},"Filtering has been added to all routes."),(0,t.yg)("li",{parentName:"ul"},"Routes that return terminals now include the terminals lat/lon."),(0,t.yg)("li",{parentName:"ul"},"Added support for cut conductor processing.")),(0,t.yg)("h5",{id:"enhancements-16"},"Enhancements"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"Feeder start points can now be the feeder circuit breaker, but it will trace the zone if there is one."),(0,t.yg)("li",{parentName:"ul"},"No longer warning about primary sources on feeders if the primary source is the feeder start point."),(0,t.yg)("li",{parentName:"ul"},"Unknown layers now result in an error rather than aborting.")),(0,t.yg)("h5",{id:"fixes-16"},"Fixes"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"None.")),(0,t.yg)("h5",{id:"notes-16"},"Notes"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},"None.")))}p.isMDXComponent=!0}}]);