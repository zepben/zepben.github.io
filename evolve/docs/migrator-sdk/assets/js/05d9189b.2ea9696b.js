"use strict";(self.webpackChunkmigrator_sdk_jvm_doco=self.webpackChunkmigrator_sdk_jvm_doco||[]).push([[8572],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return f}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},g="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),g=l(n),p=a,f=g["".concat(s,".").concat(p)]||g[p]||d[p]||o;return n?r.createElement(f,i(i({ref:t},c),{},{components:n})):r.createElement(f,i({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=p;var u={};for(var s in t)hasOwnProperty.call(t,s)&&(u[s]=t[s]);u.originalType=e,u[g]="string"==typeof e?e:a,i[1]=u;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},5162:function(e,t,n){n.d(t,{Z:function(){return i}});var r=n(7294),a=n(6010),o={tabItem:"tabItem_Ymn6"};function i(e){var t=e.children,n=e.hidden,i=e.className;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(o.tabItem,i),hidden:n},t)}},4866:function(e,t,n){n.d(t,{Z:function(){return w}});var r=n(7462),a=n(7294),o=n(6010),i=n(2466),u=n(6550),s=n(1980),l=n(7392),c=n(12);function g(e){return function(e){return a.Children.map(e,(function(e){if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')}))}(e).map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes,default:t.default}}))}function d(e){var t=e.values,n=e.children;return(0,a.useMemo)((function(){var e=null!=t?t:g(n);return function(e){var t=(0,l.l)(e,(function(e,t){return e.value===t.value}));if(t.length>0)throw new Error('Docusaurus error: Duplicate values "'+t.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[t,n])}function p(e){var t=e.value;return e.tabValues.some((function(e){return e.value===t}))}function f(e){var t=e.queryString,n=void 0!==t&&t,r=e.groupId,o=(0,u.k6)(),i=function(e){var t=e.queryString,n=void 0!==t&&t,r=e.groupId;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=r?r:null}({queryString:n,groupId:r});return[(0,s._X)(i),(0,a.useCallback)((function(e){if(i){var t=new URLSearchParams(o.location.search);t.set(i,e),o.replace(Object.assign({},o.location,{search:t.toString()}))}}),[i,o])]}function m(e){var t,n,r,o,i=e.defaultValue,u=e.queryString,s=void 0!==u&&u,l=e.groupId,g=d(e),m=(0,a.useState)((function(){return function(e){var t,n=e.defaultValue,r=e.tabValues;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!p({value:n,tabValues:r}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+n+'" but none of its children has the corresponding value. Available values are: '+r.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return n}var a=null!=(t=r.find((function(e){return e.default})))?t:r[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:i,tabValues:g})})),v=m[0],b=m[1],h=f({queryString:s,groupId:l}),y=h[0],k=h[1],w=(t=function(e){return e?"docusaurus.tab."+e:null}({groupId:l}.groupId),n=(0,c.Nk)(t),r=n[0],o=n[1],[r,(0,a.useCallback)((function(e){t&&o.set(e)}),[t,o])]),P=w[0],T=w[1],E=function(){var e=null!=y?y:P;return p({value:e,tabValues:g})?e:null}();return(0,a.useLayoutEffect)((function(){E&&b(E)}),[E]),{selectedValue:v,selectValue:(0,a.useCallback)((function(e){if(!p({value:e,tabValues:g}))throw new Error("Can't select invalid tab value="+e);b(e),k(e),T(e)}),[k,T,g]),tabValues:g}}var v=n(2389),b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function h(e){var t=e.className,n=e.block,u=e.selectedValue,s=e.selectValue,l=e.tabValues,c=[],g=(0,i.o5)().blockElementScrollPositionUntilNextRender,d=function(e){var t=e.currentTarget,n=c.indexOf(t),r=l[n].value;r!==u&&(g(t),s(r))},p=function(e){var t,n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":var r,a=c.indexOf(e.currentTarget)+1;n=null!=(r=c[a])?r:c[0];break;case"ArrowLeft":var o,i=c.indexOf(e.currentTarget)-1;n=null!=(o=c[i])?o:c[c.length-1]}null==(t=n)||t.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},t)},l.map((function(e){var t=e.value,n=e.label,i=e.attributes;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:u===t?0:-1,"aria-selected":u===t,key:t,ref:function(e){return c.push(e)},onKeyDown:p,onClick:d},i,{className:(0,o.Z)("tabs__item",b.tabItem,null==i?void 0:i.className,{"tabs__item--active":u===t})}),null!=n?n:t)})))}function y(e){var t=e.lazy,n=e.children,r=e.selectedValue;if(n=Array.isArray(n)?n:[n],t){var o=n.find((function(e){return e.props.value===r}));return o?(0,a.cloneElement)(o,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},n.map((function(e,t){return(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==r})})))}function k(e){var t=m(e);return a.createElement("div",{className:(0,o.Z)("tabs-container",b.tabList)},a.createElement(h,(0,r.Z)({},e,t)),a.createElement(y,(0,r.Z)({},e,t)))}function w(e){var t=(0,v.Z)();return a.createElement(k,(0,r.Z)({key:String(t)},e))}},8336:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return c},default:function(){return v},frontMatter:function(){return l},metadata:function(){return g},toc:function(){return p}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=n(4866),u=n(5162),s=["components"],l={id:"aggregate-usage-points",title:"Aggregate Usage Points"},c=void 0,g={unversionedId:"aggregate-usage-points",id:"aggregate-usage-points",title:"Aggregate Usage Points",description:"Aggregate usage points (AUPs) are virtual usage points that stand in for the aggregate load below the equipment it attaches to.",source:"@site/docs/aggregate-usage-points.mdx",sourceDirName:".",slug:"/aggregate-usage-points",permalink:"/evolve/docs/migrator-sdk/next/aggregate-usage-points",draft:!1,tags:[],version:"current",frontMatter:{id:"aggregate-usage-points",title:"Aggregate Usage Points"},sidebar:"someSidebar",previous:{title:"Phase Rebalance Processor",permalink:"/evolve/docs/migrator-sdk/next/phase-rebalance"},next:{title:"CPI to UsagePoint Mapping",permalink:"/evolve/docs/migrator-sdk/next/cpi-usage-point"}},d={},p=[{value:"Creating AUPs",id:"creating-aups",level:2},{value:"Using AUPs",id:"using-aups",level:2}],f={toc:p},m="wrapper";function v(e){var t=e.components,n=(0,a.Z)(e,s);return(0,o.kt)(m,(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Aggregate usage points (AUPs) are virtual usage points that stand in for the aggregate load below the equipment it attaches to."),(0,o.kt)("h2",{id:"creating-aups"},"Creating AUPs"),(0,o.kt)("p",null,"AUPs can be created for distribution transformers and feeder heads by running the ",(0,o.kt)("inlineCode",{parentName:"p"},"AggregateUsagePointCreator")," after LV feeders are created and assigned, and\nfeeder direction is traced:"),(0,o.kt)(i.Z,{groupId:"code-example",defaultValue:"kotlin",values:[{label:"Kotlin",value:"kotlin"}],mdxType:"Tabs"},(0,o.kt)(u.Z,{value:"kotlin",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},"val networkService = NetworkService()\n\n// Add equipment, feeders, LV feeders, and customer usage points. Equipment should be assigned to feeders and LV feeders, and feeder direction should be traced.\n\n// Add AUPs to energy consumers, distribution transformers, and feeder heads.\nAggregateUsagePointCreator()\n    .createEnergyConsumerAUPs(networkService)\n    .createDistributionTransformerAUPs(networkService)\n    .createFeederHeadAUPs(networkService)\n\n// There should now be AUPs on energy consumers, distribution transformers, and feeder heads.\n")))),(0,o.kt)("h2",{id:"using-aups"},"Using AUPs"),(0,o.kt)("p",null,"AUPs can be used to inform load aggregation code how customer load is aggregated to each level of the network.\nTo get this hierarchical data into a place that the load aggregation code has access to, we can use the ",(0,o.kt)("inlineCode",{parentName:"p"},"UsagePointAggregationMappingsIngestor"),":"),(0,o.kt)(i.Z,{groupId:"code-example",defaultValue:"kotlin",values:[{label:"Kotlin",value:"kotlin"}],mdxType:"Tabs"},(0,o.kt)(u.Z,{value:"kotlin",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},'val networkService: NetworkService // network with AUPs\n\nval mappingsExtractor = UsagePointAggregationMappingsExtractor() // Uses "NMI" for NameType of CPI by default. Set constructor argument cpiName otherwise.\nval mappingsWriter = PostgresUsagePointAggregationMappingsWriter { // factory function to get connection to load database\n    DriverManager.getConnection("jdbc:postgresql://127.0.0.1:5432/load?user=postgres&password=password")\n}\nval mappingTimestamp = Instant.now() // Timestamp for mappings should ideally be when the ingested network source data was published\n\nUsagePointAggregationMappingsIngestor(mappingsExtractor, mappingsWriter).ingest(networkService, mappingTimestamp)\n// A directed acyclic graph of mappings between usage points should now be present in usage_point_aggregation_mappings.\n')))),(0,o.kt)("p",null,"The load aggregation code in the load ingestor must be run again to update usage_point_aggregations for the new mappings."))}v.isMDXComponent=!0}}]);