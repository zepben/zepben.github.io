"use strict";(self.webpackChunkmigrator_sdk_jvm_doco=self.webpackChunkmigrator_sdk_jvm_doco||[]).push([[2582],{3905:function(e,r,t){t.d(r,{Zo:function(){return l},kt:function(){return d}});var n=t(7294);function a(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function o(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?o(Object(t),!0).forEach((function(r){a(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function u(e,r){if(null==e)return{};var t,n,a=function(e,r){if(null==e)return{};var t,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||(a[t]=e[t]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)t=o[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=n.createContext({}),s=function(e){var r=n.useContext(c),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},l=function(e){var r=s(e.components);return n.createElement(c.Provider,{value:r},e.children)},m="mdxType",p={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},f=n.forwardRef((function(e,r){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,l=u(e,["components","mdxType","originalType","parentName"]),m=s(t),f=a,d=m["".concat(c,".").concat(f)]||m[f]||p[f]||o;return t?n.createElement(d,i(i({ref:r},l),{},{components:t})):n.createElement(d,i({ref:r},l))}));function d(e,r){var t=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=f;var u={};for(var c in r)hasOwnProperty.call(r,c)&&(u[c]=r[c]);u.originalType=e,u[m]="string"==typeof e?e:a,i[1]=u;for(var s=2;s<o;s++)i[s]=t[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}f.displayName="MDXCreateElement"},5162:function(e,r,t){t.d(r,{Z:function(){return i}});var n=t(7294),a=t(6010),o={tabItem:"tabItem_Ymn6"};function i(e){var r=e.children,t=e.hidden,i=e.className;return n.createElement("div",{role:"tabpanel",className:(0,a.Z)(o.tabItem,i),hidden:t},r)}},4866:function(e,r,t){t.d(r,{Z:function(){return w}});var n=t(7462),a=t(7294),o=t(6010),i=t(2466),u=t(6550),c=t(1980),s=t(7392),l=t(12);function m(e){return function(e){return a.Children.map(e,(function(e){if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')}))}(e).map((function(e){var r=e.props;return{value:r.value,label:r.label,attributes:r.attributes,default:r.default}}))}function p(e){var r=e.values,t=e.children;return(0,a.useMemo)((function(){var e=null!=r?r:m(t);return function(e){var r=(0,s.l)(e,(function(e,r){return e.value===r.value}));if(r.length>0)throw new Error('Docusaurus error: Duplicate values "'+r.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[r,t])}function f(e){var r=e.value;return e.tabValues.some((function(e){return e.value===r}))}function d(e){var r=e.queryString,t=void 0!==r&&r,n=e.groupId,o=(0,u.k6)(),i=function(e){var r=e.queryString,t=void 0!==r&&r,n=e.groupId;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=n?n:null}({queryString:t,groupId:n});return[(0,c._X)(i),(0,a.useCallback)((function(e){if(i){var r=new URLSearchParams(o.location.search);r.set(i,e),o.replace(Object.assign({},o.location,{search:r.toString()}))}}),[i,o])]}function v(e){var r,t,n,o,i=e.defaultValue,u=e.queryString,c=void 0!==u&&u,s=e.groupId,m=p(e),v=(0,a.useState)((function(){return function(e){var r,t=e.defaultValue,n=e.tabValues;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!f({value:t,tabValues:n}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+t+'" but none of its children has the corresponding value. Available values are: '+n.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return t}var a=null!=(r=n.find((function(e){return e.default})))?r:n[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:i,tabValues:m})})),b=v[0],g=v[1],h=d({queryString:c,groupId:s}),k=h[0],y=h[1],w=(r=function(e){return e?"docusaurus.tab."+e:null}({groupId:s}.groupId),t=(0,l.Nk)(r),n=t[0],o=t[1],[n,(0,a.useCallback)((function(e){r&&o.set(e)}),[r,o])]),C=w[0],E=w[1],I=function(){var e=null!=k?k:C;return f({value:e,tabValues:m})?e:null}();return(0,a.useLayoutEffect)((function(){I&&g(I)}),[I]),{selectedValue:b,selectValue:(0,a.useCallback)((function(e){if(!f({value:e,tabValues:m}))throw new Error("Can't select invalid tab value="+e);g(e),y(e),E(e)}),[y,E,m]),tabValues:m}}var b=t(2389),g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function h(e){var r=e.className,t=e.block,u=e.selectedValue,c=e.selectValue,s=e.tabValues,l=[],m=(0,i.o5)().blockElementScrollPositionUntilNextRender,p=function(e){var r=e.currentTarget,t=l.indexOf(r),n=s[t].value;n!==u&&(m(r),c(n))},f=function(e){var r,t=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":var n,a=l.indexOf(e.currentTarget)+1;t=null!=(n=l[a])?n:l[0];break;case"ArrowLeft":var o,i=l.indexOf(e.currentTarget)-1;t=null!=(o=l[i])?o:l[l.length-1]}null==(r=t)||r.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":t},r)},s.map((function(e){var r=e.value,t=e.label,i=e.attributes;return a.createElement("li",(0,n.Z)({role:"tab",tabIndex:u===r?0:-1,"aria-selected":u===r,key:r,ref:function(e){return l.push(e)},onKeyDown:f,onClick:p},i,{className:(0,o.Z)("tabs__item",g.tabItem,null==i?void 0:i.className,{"tabs__item--active":u===r})}),null!=t?t:r)})))}function k(e){var r=e.lazy,t=e.children,n=e.selectedValue;if(t=Array.isArray(t)?t:[t],r){var o=t.find((function(e){return e.props.value===n}));return o?(0,a.cloneElement)(o,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},t.map((function(e,r){return(0,a.cloneElement)(e,{key:r,hidden:e.props.value!==n})})))}function y(e){var r=v(e);return a.createElement("div",{className:(0,o.Z)("tabs-container",g.tabList)},a.createElement(h,(0,n.Z)({},e,r)),a.createElement(k,(0,n.Z)({},e,r)))}function w(e){var r=(0,b.Z)();return a.createElement(y,(0,n.Z)({key:String(r)},e))}},6945:function(e,r,t){t.r(r),t.d(r,{assets:function(){return p},contentTitle:function(){return l},default:function(){return b},frontMatter:function(){return s},metadata:function(){return m},toc:function(){return f}});var n=t(7462),a=t(3366),o=(t(7294),t(3905)),i=t(4866),u=t(5162),c=["components"],s={id:"metrics-creators",title:"Metrics Creators"},l=void 0,m={unversionedId:"metrics-creators",id:"version-0.22.0/metrics-creators",title:"Metrics Creators",description:"Metrics Creation",source:"@site/versioned_docs/version-0.22.0/metrics-creators.mdx",sourceDirName:".",slug:"/metrics-creators",permalink:"/evolve/docs/migrator-sdk/0.22.0/metrics-creators",draft:!1,tags:[],version:"0.22.0",frontMatter:{id:"metrics-creators",title:"Metrics Creators"},sidebar:"someSidebar",previous:{title:"Lv Feeder Creator",permalink:"/evolve/docs/migrator-sdk/0.22.0/lv-feeder-creator"},next:{title:"Network Simplifier",permalink:"/evolve/docs/migrator-sdk/0.22.0/network-simplifier"}},p={},f=[{value:"Metrics Creation",id:"metrics-creation",level:2}],d={toc:f},v="wrapper";function b(e){var r=e.components,t=(0,a.Z)(e,c);return(0,o.kt)(v,(0,n.Z)({},d,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"metrics-creation"},"Metrics Creation"),(0,o.kt)("p",null,"The metrics creators module contains processors that create metrics that are common to all ingestors. Each processor takes in a ",(0,o.kt)("inlineCode",{parentName:"p"},"NetworkService")," and adds\nmetrics based on calculated attributes of the network. There two ready-to-use metrics creators in this module:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"CommonEquipmentMetricsCreator"),": Creates counts for each equipment type, counts for each transformer type (e.g. distribution), counts for erroneous\ntransformers (e.g. no ends), and conductor length totals."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"FeederCountMetricsCreator"),": Creates feeder counts at the substation, sub-geographical region, geographical region, and network levels.")),(0,o.kt)("p",null,"There is also a customizable ",(0,o.kt)("inlineCode",{parentName:"p"},"EquipmentMetricsCreator")," which can be implemented to process metrics for each equipment at each network level. The following\nexample shows how to use these metrics creators in an ingestor."),(0,o.kt)(i.Z,{groupId:"code-example",defaultValue:"kotlin",values:[{label:"Kotlin",value:"kotlin"}],mdxType:"Tabs"},(0,o.kt)(u.Z,{value:"kotlin",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},'import com.zepben.evolve.cim.iec61970.base.core.Equipment\nimport com.zepben.evolve.cim.iec61970.base.wires.PowerElectronicsConnection\nimport com.zepben.evolve.metrics.*\nimport com.zepben.evolve.services.network.NetworkService\nimport com.zepben.migrator.processors.metrics.*\nimport java.time.Instant\nimport java.util.*\n\nfun main() {\n    val networkService = NetworkService()\n    val ingestionJob = IngestionJob(\n        UUID.randomUUID(),\n        IngestionMetadata(Instant.now(), "ExampleEnergy", "example-ingestor", "1.2.3")\n    )\n\n    // Ingest from source data to networkService before running metrics creators\n\n    CommonEquipmentMetricsCreator(ingestionJob.networkMetrics).process(networkService)\n    FeederCountMetricsCreator(ingestionJob.networkMetrics).process(networkService)\n    InverterCapacityMetricsCreator(ingestionJob.networkMetrics).process(networkService)\n\n    // ingestionJob.metrics will now be populated\n}\n\nclass InverterCapacityMetricsCreator(metrics: NetworkMetrics) : EquipmentMetricsCreator(metrics) {\n\n    override fun processEquipment(equipment: Equipment, networkContainer: NetworkContainer) {\n        if (equipment is PowerElectronicsConnection) {\n            metrics[networkContainer].increase("inverter VA capacity", equipment.ratedS ?: 0)\n            metrics[networkContainer].increase("inverter W capacity", equipment.p ?: 0.0)\n        }\n    }\n\n}\n')))))}b.isMDXComponent=!0}}]);