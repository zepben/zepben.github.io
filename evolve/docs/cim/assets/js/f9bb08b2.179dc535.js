"use strict";(self.webpackChunkcim_doco=self.webpackChunkcim_doco||[]).push([[7408],{15680:(e,n,t)=>{t.d(n,{xA:()=>y,yg:()=>u});var a=t(96540);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=a.createContext({}),c=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},y=function(e){var n=c(e.components);return a.createElement(s.Provider,{value:n},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},p=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,s=e.parentName,y=l(e,["components","mdxType","originalType","parentName"]),d=c(t),p=i,u=d["".concat(s,".").concat(p)]||d[p]||m[p]||o;return t?a.createElement(u,r(r({ref:n},y),{},{components:t})):a.createElement(u,r({ref:n},y))}));function u(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,r=new Array(o);r[0]=p;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[d]="string"==typeof e?e:i,r[1]=l;for(var c=2;c<o;c++)r[c]=t[c];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}p.displayName="MDXCreateElement"},74013:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>y});var a=t(58168),i=(t(96540),t(15680)),o=t(75489);const r={title:"GovHydroPID2",hide_table_of_contents:!0},l=void 0,s={unversionedId:"cim100/TC57CIM/IEC61970/Dynamics/StandardModels/TurbineGovernorDynamics/GovHydroPID2",id:"cim100/TC57CIM/IEC61970/Dynamics/StandardModels/TurbineGovernorDynamics/GovHydroPID2",title:"GovHydroPID2",description:"Class Description",source:"@site/docs/cim100/TC57CIM/IEC61970/Dynamics/StandardModels/TurbineGovernorDynamics/GovHydroPID2.mdx",sourceDirName:"cim100/TC57CIM/IEC61970/Dynamics/StandardModels/TurbineGovernorDynamics",slug:"/cim100/TC57CIM/IEC61970/Dynamics/StandardModels/TurbineGovernorDynamics/GovHydroPID2",permalink:"/evolve/docs/cim/cim100/TC57CIM/IEC61970/Dynamics/StandardModels/TurbineGovernorDynamics/GovHydroPID2",draft:!1,tags:[],version:"current",frontMatter:{title:"GovHydroPID2",hide_table_of_contents:!0},sidebar:"docs",previous:{title:"GovHydroPID",permalink:"/evolve/docs/cim/cim100/TC57CIM/IEC61970/Dynamics/StandardModels/TurbineGovernorDynamics/GovHydroPID"},next:{title:"GovHydroPelton",permalink:"/evolve/docs/cim/cim100/TC57CIM/IEC61970/Dynamics/StandardModels/TurbineGovernorDynamics/GovHydroPelton"}},c={},y=[{value:"Class Description",id:"class-description",level:2},{value:"Attributes",id:"attributes",level:2},{value:"Relationships",id:"relationships",level:2},{value:"Ancestors",id:"ancestors",level:3},{value:"Descendents",id:"descendents",level:3},{value:"Associations",id:"associations",level:2}],d={toc:y},m="wrapper";function p(e){let{components:n,...t}=e;return(0,i.yg)(m,(0,a.A)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,i.yg)("h2",{id:"class-description"},"Class Description"),(0,i.yg)("p",null,'Hydro turbine and governor. Represents plants with straightforward penstock configurations and "three term" electro-hydraulic governors (i.e. Woodward',"<","sup",">","TM","<","/sup",">"," electronic).\n","[Footnote: Woodward electronic governors are an example of suitable products available commercially. This information is given for the convenience of users of this document and does not constitute an endorsement by IEC of these products.]"),(0,i.yg)("h2",{id:"attributes"},"Attributes"),(0,i.yg)("table",null,(0,i.yg)("thead",{parentName:"table"},(0,i.yg)("tr",{parentName:"thead"},(0,i.yg)("th",{parentName:"tr",align:null},"Name"),(0,i.yg)("th",{parentName:"tr",align:null},"Type"),(0,i.yg)("th",{parentName:"tr",align:null},"Description"))),(0,i.yg)("tbody",{parentName:"table"},(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},"atw"),(0,i.yg)("td",{parentName:"tr",align:null},(0,i.yg)(o.A,{to:"/TC57CIM/IEC61970/Base/Domain/PU",mdxType:"Link"},"PU")),(0,i.yg)("td",{parentName:"tr",align:null},"Factor multiplying ","<","i",">","Tw","<","/i",">"," (","<","i",">","Atw","<","/i",">",").  Typical value = 0.")),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},"d"),(0,i.yg)("td",{parentName:"tr",align:null},(0,i.yg)(o.A,{to:"/TC57CIM/IEC61970/Base/Domain/PU",mdxType:"Link"},"PU")),(0,i.yg)("td",{parentName:"tr",align:null},"Turbine damping factor (","<","i",">","D","<","/i",">",").  Unit = delta P / delta speed.  Typical value = 0.")),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},"feedbackSignal"),(0,i.yg)("td",{parentName:"tr",align:null},(0,i.yg)(o.A,{to:"/TC57CIM/IEC61970/Base/Domain/Boolean",mdxType:"Link"},"Boolean")),(0,i.yg)("td",{parentName:"tr",align:null},"Feedback signal type flag (","<","i",">","Flag","<","/i",">",").")))),(0,i.yg)("p",null,"true = use gate position feedback signal\nfalse = use Pe. |\n| g0 | ",(0,i.yg)(o.A,{to:"/TC57CIM/IEC61970/Base/Domain/PU",mdxType:"Link"},"PU")," | Gate opening at speed no load (","<","i",">","G0","<","/i",">",").  Typical value = 0. |\n| g1 | ",(0,i.yg)(o.A,{to:"/TC57CIM/IEC61970/Base/Domain/PU",mdxType:"Link"},"PU")," | Intermediate gate opening (","<","i",">","G1","<","/i",">",").  Typical value = 0. |\n| g2 | ",(0,i.yg)(o.A,{to:"/TC57CIM/IEC61970/Base/Domain/PU",mdxType:"Link"},"PU")," | Intermediate gate opening (","<","i",">","G2","<","/i",">",").  Typical value = 0. |\n| gmax | ",(0,i.yg)(o.A,{to:"/TC57CIM/IEC61970/Base/Domain/PU",mdxType:"Link"},"PU")," | Maximum gate opening (","<","i",">","Gmax","<","/i",">",") (",">"," GovHydroPID2.gmin).  Typical value = 0. |\n| gmin | ",(0,i.yg)(o.A,{to:"/TC57CIM/IEC61970/Base/Domain/PU",mdxType:"Link"},"PU")," | Minimum gate opening (","<","i",">","Gmin","<","/i",">",") (",">"," GovHydroPID2.gmax).  Typical value = 0. |\n| kd | ",(0,i.yg)(o.A,{to:"/TC57CIM/IEC61970/Base/Domain/PU",mdxType:"Link"},"PU")," | Derivative gain (","<","i",">","Kd","<","/i",">",").  Typical value = 0. |\n| ki | ",(0,i.yg)(o.A,{to:"/TC57CIM/IEC61970/Base/Domain/Float",mdxType:"Link"},"Float")," | Reset gain (","<","i",">","Ki","<","/i",">",").  Unit = PU/s.  Typical value = 0. |\n| kp | ",(0,i.yg)(o.A,{to:"/TC57CIM/IEC61970/Base/Domain/PU",mdxType:"Link"},"PU")," | Proportional gain (","<","i",">","Kp","<","/i",">",").  Typical value = 0. |\n| mwbase | ",(0,i.yg)(o.A,{to:"/TC57CIM/IEC61970/Base/Domain/ActivePower",mdxType:"Link"},"ActivePower")," | Base for power values (","<","i",">","MWbase","<","/i",">",") (",">","0).  Unit = MW. |\n| p1 | ",(0,i.yg)(o.A,{to:"/TC57CIM/IEC61970/Base/Domain/PU",mdxType:"Link"},"PU")," | Power at gate opening ","<","i",">","G1","<","/i",">"," (","<","i",">","P1","<","/i",">",").  Typical value = 0. |\n| p2 | ",(0,i.yg)(o.A,{to:"/TC57CIM/IEC61970/Base/Domain/PU",mdxType:"Link"},"PU")," | Power at gate opening G2 (","<","i",">","P2","<","/i",">",").  Typical value = 0. |\n| p3 | ",(0,i.yg)(o.A,{to:"/TC57CIM/IEC61970/Base/Domain/PU",mdxType:"Link"},"PU")," | Power at full opened gate (","<","i",">","P3","<","/i",">",").  Typical value = 0. |\n| rperm | ",(0,i.yg)(o.A,{to:"/TC57CIM/IEC61970/Base/Domain/PU",mdxType:"Link"},"PU")," | Permanent drop (","<","i",">","Rperm","<","/i",">",").  Typical value = 0. |\n| ta | ",(0,i.yg)(o.A,{to:"/TC57CIM/IEC61970/Base/Domain/Seconds",mdxType:"Link"},"Seconds")," | Controller time constant (","<","i",">","Ta","<","/i",">",") (",">","= 0).  Typical value = 0. |\n| tb | ",(0,i.yg)(o.A,{to:"/TC57CIM/IEC61970/Base/Domain/Seconds",mdxType:"Link"},"Seconds")," | Gate servo time constant (","<","i",">","Tb","<","/i",">",") (",">"," 0). |\n| treg | ",(0,i.yg)(o.A,{to:"/TC57CIM/IEC61970/Base/Domain/Seconds",mdxType:"Link"},"Seconds")," | Speed detector time constant (","<","i",">","Treg","<","/i",">",") (",">","= 0).  Typical value = 0. |\n| tw | ",(0,i.yg)(o.A,{to:"/TC57CIM/IEC61970/Base/Domain/Seconds",mdxType:"Link"},"Seconds")," | Water inertia time constant (","<","i",">","Tw","<","/i",">",") (",">","= 0).  Typical value = 0. |\n| velmax | ",(0,i.yg)(o.A,{to:"/TC57CIM/IEC61970/Base/Domain/Float",mdxType:"Link"},"Float")," | Maximum gate opening velocity (","<","i",">","Velmax","<","/i",">",") (","<"," GovHydroPID2.velmin).  Unit = PU / s.  Typical value = 0. |\n| velmin | ",(0,i.yg)(o.A,{to:"/TC57CIM/IEC61970/Base/Domain/Float",mdxType:"Link"},"Float")," | Maximum gate closing velocity (","<","i",">","Velmin","<","/i",">",") (",">"," GovHydroPID2.velmax).  Unit = PU / s.  Typical value = 0. |"),(0,i.yg)("h2",{id:"relationships"},"Relationships"),(0,i.yg)("h3",{id:"ancestors"},"Ancestors"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)(o.A,{to:"/TC57CIM/IEC61970/Dynamics/StandardModels/TurbineGovernorDynamics/TurbineGovernorDynamics",mdxType:"Link"},"TurbineGovernorDynamics"))),(0,i.yg)("h3",{id:"descendents"},"Descendents"),(0,i.yg)("p",null,"No descendent classes"),(0,i.yg)("h2",{id:"associations"},"Associations"),(0,i.yg)("p",null,"None"))}p.isMDXComponent=!0}}]);