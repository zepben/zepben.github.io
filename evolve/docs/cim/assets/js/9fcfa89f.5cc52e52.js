"use strict";(self.webpackChunkcim_doco=self.webpackChunkcim_doco||[]).push([[8735],{15680:(e,t,n)=>{n.d(t,{xA:()=>c,yg:()=>g});var a=n(96540);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var u=a.createContext({}),s=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=s(e.components);return a.createElement(u.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,u=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),m=s(n),p=i,g=m["".concat(u,".").concat(p)]||m[p]||d[p]||r;return n?a.createElement(g,l(l({ref:t},c),{},{components:n})):a.createElement(g,l({ref:t},c))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=p;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o[m]="string"==typeof e?e:i,l[1]=o;for(var s=2;s<r;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},73715:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>s});var a=n(58168),i=(n(96540),n(15680));n(75489);const r={title:"AccumulationKind",hide_table_of_contents:!0,slug:"AccumulationKind",sidebar_position:0},l=void 0,o={unversionedId:"cim100/TC57CIM/IEC61968/Metering/AccumulationKind",id:"cim100/TC57CIM/IEC61968/Metering/AccumulationKind",title:"AccumulationKind",description:"Class Description",source:"@site/docs/cim100/TC57CIM/IEC61968/Metering/AccumulationKind.mdx",sourceDirName:"cim100/TC57CIM/IEC61968/Metering",slug:"/cim100/TC57CIM/IEC61968/Metering/AccumulationKind",permalink:"/evolve/docs/cim/cim100/TC57CIM/IEC61968/Metering/AccumulationKind",draft:!1,tags:[],version:"current",sidebarPosition:0,frontMatter:{title:"AccumulationKind",hide_table_of_contents:!0,slug:"AccumulationKind",sidebar_position:0},sidebar:"docs",previous:{title:"RemoteConnectDisconnectInfo",permalink:"/evolve/docs/cim/cim100/TC57CIM/IEC61968/LoadControl/RemoteConnectDisconnectInfo"},next:{title:"AggregateKind",permalink:"/evolve/docs/cim/cim100/TC57CIM/IEC61968/Metering/AggregateKind"}},u={},s=[{value:"Class Description",id:"class-description",level:2},{value:"Attributes",id:"attributes",level:2},{value:"Relationships",id:"relationships",level:2},{value:"Ancestors",id:"ancestors",level:3},{value:"Descendents",id:"descendents",level:3},{value:"Associations",id:"associations",level:2}],c={toc:s},m="wrapper";function d(e){let{components:t,...n}=e;return(0,i.yg)(m,(0,a.A)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.yg)("h2",{id:"class-description"},"Class Description"),(0,i.yg)("p",null,"Kind of accumulation behaviour for read / measured values from individual end points."),(0,i.yg)("h2",{id:"attributes"},"Attributes"),(0,i.yg)("table",null,(0,i.yg)("thead",{parentName:"table"},(0,i.yg)("tr",{parentName:"thead"},(0,i.yg)("th",{parentName:"tr",align:null},"Name"),(0,i.yg)("th",{parentName:"tr",align:null},"Type"),(0,i.yg)("th",{parentName:"tr",align:null},"Description"))),(0,i.yg)("tbody",{parentName:"table"},(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},"boundedQuantity"),(0,i.yg)("td",{parentName:"tr",align:null}),(0,i.yg)("td",{parentName:"tr",align:null},"A time-independent cumulative quantity much like a 'bulkQuantity' or a 'latchingQuantity', except that the accumulation stops at the maximum or minimum values. When the maximum is reached, any additional positive accumulation is discarded, but negative accumulation may be accepted (thus lowering the counter.) Likewise, when the negative bound is reached, any additional negative accumulation is discarded, but positive accumulation is accepted (thus increasing the counter.)")),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},"bulkQuantity"),(0,i.yg)("td",{parentName:"tr",align:null}),(0,i.yg)("td",{parentName:"tr",align:null},"A value from a register which represents the bulk quantity of a commodity. This quantity is computed as the integral of the commodity usage rate. This value is typically used as the basis for the dial reading at the meter, and as a result, will roll over upon reaching a maximum dial value. ",(0,i.yg)("br",null),"Note 1: With the metering system, the roll-over behaviour typically implies a roll-under behavior so that the value presented is always a positive value (e.g. unsigned integer or positive decimal.) However, when communicating data between enterprise applications a negative value might occur in a case such as net metering.",(0,i.yg)("br",null),"Note 2: A 'bulkQuantity' refers primarily to the dial reading and not the consumption over a specific period of time.")),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},"continuousCumulative"),(0,i.yg)("td",{parentName:"tr",align:null}),(0,i.yg)("td",{parentName:"tr",align:null},"The sum of the previous billing period values and the present period value.",(0,i.yg)("br",null),"Note: 'continuousCumulative' is commonly used in conjunction with 'demand', and it  would represent the cumulative sum of the previous billing period maximum demand values (as occurring with each demand reset) summed with the present period maximum demand value (which has yet to be reset.)")),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},"cumulative"),(0,i.yg)("td",{parentName:"tr",align:null}),(0,i.yg)("td",{parentName:"tr",align:null},"The sum of the previous billing period values.",(0,i.yg)("br",null),"Note: 'cumulative' is commonly used in conjunction with \u201cdemand.\u201d Each demand reset causes the maximum demand value for the present billing period (since the last demand reset) to accumulate as an accumulative total of all maximum demands. So instead of 'zeroing' the demand register, a demand reset has the effect of adding the present maximum demand to this accumulating total.")),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},"deltaData"),(0,i.yg)("td",{parentName:"tr",align:null}),(0,i.yg)("td",{parentName:"tr",align:null},"The difference between the value at the end of the prescribed interval and the beginning of the interval. This is used for incremental interval data. ",(0,i.yg)("br",null),"Note: One common application would be for load profile data, another use might be to report the number of events within an interval (such as the number of equipment energisations within the specified period of time.)")),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},"indicating"),(0,i.yg)("td",{parentName:"tr",align:null}),(0,i.yg)("td",{parentName:"tr",align:null},"As if a needle is swung out on the meter face to a value to indicate the current value.",(0,i.yg)("br",null),"Note: An 'indicating' value is typically measured over hundreds of milliseconds or greater, or may imply a \u201cpusher\u201d mechanism to capture a value. Compare this to 'instantaneous' which is measured over a shorter period of time.")),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},"instantaneous"),(0,i.yg)("td",{parentName:"tr",align:null}),(0,i.yg)("td",{parentName:"tr",align:null},"Typically measured over the fastest period of time allowed by the definition of the metric (usually milliseconds or tens of milliseconds.)",(0,i.yg)("br",null),"Note: 'instantaneous' was moved to attribute #3 in Ed.2 of IEC 61968-9, from attribute #1 in Ed.1 of IEC 61968-9.")),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},"latchingQuantity"),(0,i.yg)("td",{parentName:"tr",align:null}),(0,i.yg)("td",{parentName:"tr",align:null},"When this description is applied to a metered value, it implies that the value is a time-independent cumulative quantity much like a 'bulkQuantity', except that it latches upon the maximum value upon reaching that value. Any additional accumulation (positive or negative) is discarded until a reset occurs. ",(0,i.yg)("br",null),"Note: A 'latchingQuantity' may also occur in the downward direction \u2013 upon reaching a minimum value. The terms 'maximum' or 'minimum' (for 'aggregate') will usually be included when this type of accumulation behaviour is present. ",(0,i.yg)("br",null),"When this description is applied to an encoded value (UOM= 'Code'), it implies that the value has one or more bits which are latching. The condition that caused the bit to be set may have long since evaporated.",(0,i.yg)("br",null),"In either case, the timestamp that accompanies the value may not coincide with the moment the value was initially set.",(0,i.yg)("br",null),"In both cases a system will need to perform an operation to clear the latched value.")),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},"none"),(0,i.yg)("td",{parentName:"tr",align:null}),(0,i.yg)("td",{parentName:"tr",align:null},"Not applicable, or implied by the unit of measure.")),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},"summation"),(0,i.yg)("td",{parentName:"tr",align:null}),(0,i.yg)("td",{parentName:"tr",align:null},"A form of accumulation which is selective with respect to time. ",(0,i.yg)("br",null),"Note : 'summation' could be considered a specialisation of 'bulkQuantity' as it selectively accumulates pulses over a timing pattern (while 'bulkQuantity' accumulates pulses all of the time).")),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},"timeDelay"),(0,i.yg)("td",{parentName:"tr",align:null}),(0,i.yg)("td",{parentName:"tr",align:null},"A form of computation which introduces a time delay characteristic to the data value.")))),(0,i.yg)("h2",{id:"relationships"},"Relationships"),(0,i.yg)("h3",{id:"ancestors"},"Ancestors"),(0,i.yg)("p",null,"No ancestor classes"),(0,i.yg)("h3",{id:"descendents"},"Descendents"),(0,i.yg)("p",null,"No descendent classes"),(0,i.yg)("h2",{id:"associations"},"Associations"),(0,i.yg)("p",null,"None"))}d.isMDXComponent=!0}}]);