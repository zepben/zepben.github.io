"use strict";(self.webpackChunkcim_doco=self.webpackChunkcim_doco||[]).push([[27666],{15680:(e,n,t)=>{t.d(n,{xA:()=>g,yg:()=>y});var r=t(96540);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},g=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,g=o(e,["components","mdxType","originalType","parentName"]),p=c(t),d=a,y=p["".concat(s,".").concat(d)]||p[d]||u[d]||l;return t?r.createElement(y,i(i({ref:n},g),{},{components:t})):r.createElement(y,i({ref:n},g))}));function y(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=t.length,i=new Array(l);i[0]=d;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o[p]="string"==typeof e?e:a,i[1]=o;for(var c=2;c<l;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},45862:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>g});var r=t(58168),a=(t(96540),t(15680)),l=t(75489);const i={title:"PerLengthSequenceImpedance",hide_table_of_contents:!0},o=void 0,s={unversionedId:"Evolve/IEC61970/Base/Wires/PerLengthSequenceImpedance",id:"Evolve/IEC61970/Base/Wires/PerLengthSequenceImpedance",title:"PerLengthSequenceImpedance",description:"Class Description",source:"@site/docs/Evolve/IEC61970/Base/Wires/PerLengthSequenceImpedance.mdx",sourceDirName:"Evolve/IEC61970/Base/Wires",slug:"/Evolve/IEC61970/Base/Wires/PerLengthSequenceImpedance",permalink:"/evolve/docs/cim/Evolve/IEC61970/Base/Wires/PerLengthSequenceImpedance",draft:!1,tags:[],version:"current",frontMatter:{title:"PerLengthSequenceImpedance",hide_table_of_contents:!0},sidebar:"docs",previous:{title:"PerLengthLineParameter",permalink:"/evolve/docs/cim/Evolve/IEC61970/Base/Wires/PerLengthLineParameter"},next:{title:"PhaseShuntConnectionKind",permalink:"/evolve/docs/cim/Evolve/IEC61970/Base/Wires/PhaseShuntConnectionKind"}},c={},g=[{value:"Class Description",id:"class-description",level:2},{value:"Attributes",id:"attributes",level:2},{value:"Relationships",id:"relationships",level:2},{value:"Ancestors",id:"ancestors",level:3},{value:"Descendents",id:"descendents",level:3},{value:"Associations",id:"associations",level:2}],p={toc:g},u="wrapper";function d(e){let{components:n,...t}=e;return(0,a.yg)(u,(0,r.A)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("h2",{id:"class-description"},"Class Description"),(0,a.yg)("p",null,"Sequence impedance and admittance parameters per unit length, for transposed lines of 1, 2, or 3 phases. For 1-phase lines, define x=x0=xself. For 2-phase lines, define x=xs-xm and x0=xs+xm."),(0,a.yg)("h2",{id:"attributes"},"Attributes"),(0,a.yg)("table",null,(0,a.yg)("thead",{parentName:"table"},(0,a.yg)("tr",{parentName:"thead"},(0,a.yg)("th",{parentName:"tr",align:null},"Name"),(0,a.yg)("th",{parentName:"tr",align:null},"Type"),(0,a.yg)("th",{parentName:"tr",align:null},"Description"))),(0,a.yg)("tbody",{parentName:"table"},(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"b0ch"),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)(l.A,{to:"/Evolve/IEC61970/Base/Domain/SusceptancePerLength",mdxType:"Link"},"SusceptancePerLength")),(0,a.yg)("td",{parentName:"tr",align:null},"Zero sequence shunt (charging) susceptance, per unit of length.")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"bch"),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)(l.A,{to:"/Evolve/IEC61970/Base/Domain/SusceptancePerLength",mdxType:"Link"},"SusceptancePerLength")),(0,a.yg)("td",{parentName:"tr",align:null},"Positive sequence shunt (charging) susceptance, per unit of length.")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"g0ch"),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)(l.A,{to:"/Evolve/IEC61970/Base/Domain/ConductancePerLength",mdxType:"Link"},"ConductancePerLength")),(0,a.yg)("td",{parentName:"tr",align:null},"Zero sequence shunt (charging) conductance, per unit of length.")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"gch"),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)(l.A,{to:"/Evolve/IEC61970/Base/Domain/ConductancePerLength",mdxType:"Link"},"ConductancePerLength")),(0,a.yg)("td",{parentName:"tr",align:null},"Positive sequence shunt (charging) conductance, per unit of length.")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"r"),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)(l.A,{to:"/Evolve/IEC61970/Base/Domain/ResistancePerLength",mdxType:"Link"},"ResistancePerLength")),(0,a.yg)("td",{parentName:"tr",align:null},"Positive sequence series resistance, per unit of length.")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"r0"),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)(l.A,{to:"/Evolve/IEC61970/Base/Domain/ResistancePerLength",mdxType:"Link"},"ResistancePerLength")),(0,a.yg)("td",{parentName:"tr",align:null},"Zero sequence series resistance, per unit of length.")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"x"),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)(l.A,{to:"/Evolve/IEC61970/Base/Domain/ReactancePerLength",mdxType:"Link"},"ReactancePerLength")),(0,a.yg)("td",{parentName:"tr",align:null},"Positive sequence series reactance, per unit of length.")),(0,a.yg)("tr",{parentName:"tbody"},(0,a.yg)("td",{parentName:"tr",align:null},"x0"),(0,a.yg)("td",{parentName:"tr",align:null},(0,a.yg)(l.A,{to:"/Evolve/IEC61970/Base/Domain/ReactancePerLength",mdxType:"Link"},"ReactancePerLength")),(0,a.yg)("td",{parentName:"tr",align:null},"Zero sequence series reactance, per unit of length.")))),(0,a.yg)("h2",{id:"relationships"},"Relationships"),(0,a.yg)("h3",{id:"ancestors"},"Ancestors"),(0,a.yg)("ul",null,(0,a.yg)("li",{parentName:"ul"},(0,a.yg)(l.A,{to:"/Evolve/IEC61970/Base/Wires/PerLengthImpedance",mdxType:"Link"},"PerLengthImpedance"))),(0,a.yg)("h3",{id:"descendents"},"Descendents"),(0,a.yg)("p",null,"No descendent classes"),(0,a.yg)("h2",{id:"associations"},"Associations"),(0,a.yg)("p",null,"None"))}d.isMDXComponent=!0}}]);