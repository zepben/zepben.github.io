"use strict";(self.webpackChunkcim_doco=self.webpackChunkcim_doco||[]).push([[85798],{15680:(e,n,t)=>{t.d(n,{xA:()=>s,yg:()=>y});var a=t(96540);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var g=a.createContext({}),c=function(e){var n=a.useContext(g),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=c(e.components);return a.createElement(g.Provider,{value:n},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,g=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),d=c(t),u=r,y=d["".concat(g,".").concat(u)]||d[u]||p[u]||l;return t?a.createElement(y,i(i({ref:n},s),{},{components:t})):a.createElement(y,i({ref:n},s))}));function y(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,i=new Array(l);i[0]=u;var o={};for(var g in n)hasOwnProperty.call(n,g)&&(o[g]=n[g]);o.originalType=e,o[d]="string"==typeof e?e:r,i[1]=o;for(var c=2;c<l;c++)i[c]=t[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},39872:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>g,toc:()=>s});var a=t(58168),r=(t(96540),t(15680)),l=t(75489);const i={title:"IntervalBlock",hide_table_of_contents:!0},o=void 0,g={unversionedId:"cim100/TC57CIM/IEC61968/Metering/IntervalBlock",id:"cim100/TC57CIM/IEC61968/Metering/IntervalBlock",title:"IntervalBlock",description:"Class Description",source:"@site/docs/cim100/TC57CIM/IEC61968/Metering/IntervalBlock.mdx",sourceDirName:"cim100/TC57CIM/IEC61968/Metering",slug:"/cim100/TC57CIM/IEC61968/Metering/IntervalBlock",permalink:"/evolve/docs/cim/cim100/TC57CIM/IEC61968/Metering/IntervalBlock",draft:!1,tags:[],version:"current",frontMatter:{title:"IntervalBlock",hide_table_of_contents:!0},sidebar:"docs",previous:{title:"FlowDirectionKind",permalink:"/evolve/docs/cim/cim100/TC57CIM/IEC61968/Metering/FlowDirectionKind"},next:{title:"IntervalReading",permalink:"/evolve/docs/cim/cim100/TC57CIM/IEC61968/Metering/IntervalReading"}},c={},s=[{value:"Class Description",id:"class-description",level:2},{value:"Attributes",id:"attributes",level:2},{value:"Relationships",id:"relationships",level:2},{value:"Ancestors",id:"ancestors",level:3},{value:"Descendents",id:"descendents",level:3},{value:"Associations",id:"associations",level:2}],d={toc:s},p="wrapper";function u(e){let{components:n,...t}=e;return(0,r.yg)(p,(0,a.A)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,r.yg)("h2",{id:"class-description"},"Class Description"),(0,r.yg)("p",null,"Time sequence of readings of the same reading type. Contained interval readings may need conversion through the application of an offset and a scalar defined in associated pending.\nTable 548 shows all association ends of IntervalBlock with other classes.\nTable 548 \u2013 Association ends of Metering::IntervalBlock with other classes\nAssociations\nname\nmult to\ntype\ndescription"),(0,r.yg)("p",null,"0..*\nPendingCalculation\n0..1\nPendingCalculation\nPending calculation to apply to interval reading values contained by this block (after which the resulting reading type is different than the original because it reflects the conversion result)."),(0,r.yg)("p",null,"0..",(0,r.yg)("em",{parentName:"p"},"\nIntervalReadings\n0.."),"\nIntervalReading\nInterval reading contained in this block."),(0,r.yg)("p",null,"0..*\nReadingType\n0..1\nReadingType\nType information for interval reading values contained in this block."),(0,r.yg)("p",null,"0..*\nMeterReading\n0..1\nMeterReading\nMeter reading containing this interval block."),(0,r.yg)("p",null,'IntervalReading\nData captured at regular intervals of time. Interval data could be captured as incremental data, absolute data, or relative data. The source for the data is usually a tariff quantity or an engineering quantity. Data is typically captured in time-tagged, uniform, fixed-length intervals of 5 min, 10 min, 15 min, 30 min, or 60 min.\nNote: Interval Data is sometimes also called "Interval Data Readings" (IDR).'),(0,r.yg)("h2",{id:"attributes"},"Attributes"),(0,r.yg)("p",null,"None"),(0,r.yg)("h2",{id:"relationships"},"Relationships"),(0,r.yg)("h3",{id:"ancestors"},"Ancestors"),(0,r.yg)("p",null,"No ancestor classes"),(0,r.yg)("h3",{id:"descendents"},"Descendents"),(0,r.yg)("p",null,"No descendent classes"),(0,r.yg)("h2",{id:"associations"},"Associations"),(0,r.yg)("table",null,(0,r.yg)("thead",{parentName:"table"},(0,r.yg)("tr",{parentName:"thead"},(0,r.yg)("th",{parentName:"tr",align:null},"Source Class"),(0,r.yg)("th",{parentName:"tr",align:null},"Source Cardinality"),(0,r.yg)("th",{parentName:"tr",align:null},"Target"),(0,r.yg)("th",{parentName:"tr",align:null},"Target Cardinality"),(0,r.yg)("th",{parentName:"tr",align:null},"Source Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Source Assoc. Description"),(0,r.yg)("th",{parentName:"tr",align:null},"Target Name"),(0,r.yg)("th",{parentName:"tr",align:null},"Target Assoc. Description"))),(0,r.yg)("tbody",{parentName:"table"},(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)(l.A,{to:"/TC57CIM/IEC61968/Metering/IntervalBlock",mdxType:"Link"},"IntervalBlock")),(0,r.yg)("td",{parentName:"tr",align:null},"0..*"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)(l.A,{to:"/TC57CIM/IEC61968/Metering/PendingCalculation",mdxType:"Link"},"PendingCalculation")),(0,r.yg)("td",{parentName:"tr",align:null},"0..1"),(0,r.yg)("td",{parentName:"tr",align:null},"IntervalBlocks"),(0,r.yg)("td",{parentName:"tr",align:null},"All blocks of interval reading values to which this pending conversion applies."),(0,r.yg)("td",{parentName:"tr",align:null},"PendingCalculation"),(0,r.yg)("td",{parentName:"tr",align:null},"Pending calculation to apply to interval reading values contained by this block (after which the resulting reading type is different than the original because it reflects the conversion result).")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)(l.A,{to:"/TC57CIM/IEC61968/Metering/IntervalBlock",mdxType:"Link"},"IntervalBlock")),(0,r.yg)("td",{parentName:"tr",align:null},"0..*"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)(l.A,{to:"/TC57CIM/IEC61968/Metering/ReadingType",mdxType:"Link"},"ReadingType")),(0,r.yg)("td",{parentName:"tr",align:null},"0..1"),(0,r.yg)("td",{parentName:"tr",align:null},"IntervalBlocks"),(0,r.yg)("td",{parentName:"tr",align:null},"All blocks containing interval reading values with this type information."),(0,r.yg)("td",{parentName:"tr",align:null},"ReadingType"),(0,r.yg)("td",{parentName:"tr",align:null},"Type information for interval reading values contained in this block.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)(l.A,{to:"/TC57CIM/IEC61968/Metering/IntervalBlock",mdxType:"Link"},"IntervalBlock")),(0,r.yg)("td",{parentName:"tr",align:null},"0..*"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)(l.A,{to:"/TC57CIM/IEC61968/Metering/MeterReading",mdxType:"Link"},"MeterReading")),(0,r.yg)("td",{parentName:"tr",align:null},"0..1"),(0,r.yg)("td",{parentName:"tr",align:null},"IntervalBlocks"),(0,r.yg)("td",{parentName:"tr",align:null},"All interval blocks contained in this meter reading."),(0,r.yg)("td",{parentName:"tr",align:null},"MeterReading"),(0,r.yg)("td",{parentName:"tr",align:null},"Meter reading containing this interval block.")),(0,r.yg)("tr",{parentName:"tbody"},(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)(l.A,{to:"/TC57CIM/IEC61968/Metering/IntervalBlock",mdxType:"Link"},"IntervalBlock")),(0,r.yg)("td",{parentName:"tr",align:null},"0..*"),(0,r.yg)("td",{parentName:"tr",align:null},(0,r.yg)(l.A,{to:"/TC57CIM/IEC61968/Metering/IntervalReading",mdxType:"Link"},"IntervalReading")),(0,r.yg)("td",{parentName:"tr",align:null},"0..*"),(0,r.yg)("td",{parentName:"tr",align:null},"IntervalBlocks"),(0,r.yg)("td",{parentName:"tr",align:null},"All blocks containing this interval reading."),(0,r.yg)("td",{parentName:"tr",align:null},"IntervalReadings"),(0,r.yg)("td",{parentName:"tr",align:null},"Interval reading contained in this block.")))))}u.isMDXComponent=!0}}]);