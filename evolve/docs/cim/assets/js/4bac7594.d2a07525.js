"use strict";(self.webpackChunkcim_doco=self.webpackChunkcim_doco||[]).push([[89966],{15680:(e,t,n)=>{n.d(t,{xA:()=>g,yg:()=>u});var a=n(96540);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},g=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",y={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,g=o(e,["components","mdxType","originalType","parentName"]),p=c(n),d=i,u=p["".concat(s,".").concat(d)]||p[d]||y[d]||r;return n?a.createElement(u,l(l({ref:t},g),{},{components:n})):a.createElement(u,l({ref:t},g))}));function u(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,l=new Array(r);l[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[p]="string"==typeof e?e:i,l[1]=o;for(var c=2;c<r;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},26384:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>l,metadata:()=>s,toc:()=>g});var a=n(58168),i=(n(96540),n(15680)),r=n(75489);const l={title:"Switch",hide_table_of_contents:!0},o=void 0,s={unversionedId:"cim100/TC57CIM/IEC61970/Base/Wires/Switch",id:"cim100/TC57CIM/IEC61970/Base/Wires/Switch",title:"Switch",description:"Class Description",source:"@site/docs/cim100/TC57CIM/IEC61970/Base/Wires/Switch.mdx",sourceDirName:"cim100/TC57CIM/IEC61970/Base/Wires",slug:"/cim100/TC57CIM/IEC61970/Base/Wires/Switch",permalink:"/evolve/docs/cim/cim100/TC57CIM/IEC61970/Base/Wires/Switch",draft:!1,tags:[],version:"current",frontMatter:{title:"Switch",hide_table_of_contents:!0},sidebar:"docs",previous:{title:"StaticVarCompensator",permalink:"/evolve/docs/cim/cim100/TC57CIM/IEC61970/Base/Wires/StaticVarCompensator"},next:{title:"SwitchPhase",permalink:"/evolve/docs/cim/cim100/TC57CIM/IEC61970/Base/Wires/SwitchPhase"}},c={},g=[{value:"Class Description",id:"class-description",level:2},{value:"Attributes",id:"attributes",level:2},{value:"Relationships",id:"relationships",level:2},{value:"Ancestors",id:"ancestors",level:3},{value:"Descendents",id:"descendents",level:3},{value:"Associations",id:"associations",level:2}],p={toc:g},y="wrapper";function d(e){let{components:t,...n}=e;return(0,i.yg)(y,(0,a.A)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.yg)("h2",{id:"class-description"},"Class Description"),(0,i.yg)("p",null,"A generic device designed to close, or open, or both, one or more electric circuits.  All switches are two terminal devices including grounding switches. The ACDCTerminal.connected at the two sides of the switch shall not be considered for assessing switch connectivity, i.e. only Switch.open, .normalOpen and .locked are relevant."),(0,i.yg)("h2",{id:"attributes"},"Attributes"),(0,i.yg)("table",null,(0,i.yg)("thead",{parentName:"table"},(0,i.yg)("tr",{parentName:"thead"},(0,i.yg)("th",{parentName:"tr",align:null},"Name"),(0,i.yg)("th",{parentName:"tr",align:null},"Type"),(0,i.yg)("th",{parentName:"tr",align:null},"Description"))),(0,i.yg)("tbody",{parentName:"table"},(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},"locked"),(0,i.yg)("td",{parentName:"tr",align:null},(0,i.yg)(r.A,{to:"/TC57CIM/IEC61970/Base/Domain/Boolean",mdxType:"Link"},"Boolean")),(0,i.yg)("td",{parentName:"tr",align:null},"If true, the switch is locked. The resulting switch state is a combination of locked and Switch.open attributes as follows:")))),(0,i.yg)("p",null,"<","ul",">","\n","<","li",">","locked=true and Switch.open=true. The resulting state is open and locked;","<","/li",">","\n","<","li",">","locked=false and Switch.open=true. The resulting state is open;","<","/li",">","\n","<","li",">","locked=false and Switch.open=false. The resulting state is closed.","<","/li",">","\n","<","/ul",">"," |\n| normalOpen | ",(0,i.yg)(r.A,{to:"/TC57CIM/IEC61970/Base/Domain/Boolean",mdxType:"Link"},"Boolean")," | The attribute is used in cases when no Measurement for the status value is present. If the Switch has a status measurement the Discrete.normalValue is expected to match with the Switch.normalOpen. |\n| open | ",(0,i.yg)(r.A,{to:"/TC57CIM/IEC61970/Base/Domain/Boolean",mdxType:"Link"},"Boolean")," | The attribute tells if the switch is considered open when used as input to topology processing. |\n| ratedCurrent | ",(0,i.yg)(r.A,{to:"/TC57CIM/IEC61970/Base/Domain/CurrentFlow",mdxType:"Link"},"CurrentFlow")," | The maximum continuous current carrying capacity in amps governed by the device material and construction.\nThe attribute shall be a positive value. |\n| retained | ",(0,i.yg)(r.A,{to:"/TC57CIM/IEC61970/Base/Domain/Boolean",mdxType:"Link"},"Boolean")," | Branch is retained in the topological solution.  The flow through retained switches will normally be calculated in power flow. |\n| switchOnCount | ",(0,i.yg)(r.A,{to:"/TC57CIM/IEC61970/Base/Domain/Integer",mdxType:"Link"},"Integer")," | The switch on count since the switch was last reset or initialized. |\n| switchOnDate | ",(0,i.yg)(r.A,{to:"/TC57CIM/IEC61970/Base/Domain/DateTime",mdxType:"Link"},"DateTime")," | The date and time when the switch was last switched on. |"),(0,i.yg)("h2",{id:"relationships"},"Relationships"),(0,i.yg)("h3",{id:"ancestors"},"Ancestors"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)(r.A,{to:"/TC57CIM/IEC61970/Base/Core/ConductingEquipment",mdxType:"Link"},"ConductingEquipment"))),(0,i.yg)("h3",{id:"descendents"},"Descendents"),(0,i.yg)("ul",null,(0,i.yg)("li",{parentName:"ul"},(0,i.yg)(r.A,{to:"/TC57CIM/IEC61970/Base/Wires/Cut",mdxType:"Link"},"Cut")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)(r.A,{to:"/TC57CIM/IEC61970/Base/Wires/Disconnector",mdxType:"Link"},"Disconnector")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)(r.A,{to:"/TC57CIM/IEC61970/Base/Wires/Fuse",mdxType:"Link"},"Fuse")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)(r.A,{to:"/TC57CIM/IEC61970/Base/Wires/GroundDisconnector",mdxType:"Link"},"GroundDisconnector")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)(r.A,{to:"/TC57CIM/IEC61970/Base/Wires/Jumper",mdxType:"Link"},"Jumper")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)(r.A,{to:"/TC57CIM/IEC62325/MarketOperations/MarketSystem/ExternalInputs/MktSwitch",mdxType:"Link"},"MktSwitch")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)(r.A,{to:"/TC57CIM/IEC61970/Base/Wires/ProtectedSwitch",mdxType:"Link"},"ProtectedSwitch")),(0,i.yg)("li",{parentName:"ul"},(0,i.yg)(r.A,{to:"/TC57CIM/IEC61970/Base/Wires/Sectionaliser",mdxType:"Link"},"Sectionaliser"))),(0,i.yg)("h2",{id:"associations"},"Associations"),(0,i.yg)("table",null,(0,i.yg)("thead",{parentName:"table"},(0,i.yg)("tr",{parentName:"thead"},(0,i.yg)("th",{parentName:"tr",align:null},"Source Class"),(0,i.yg)("th",{parentName:"tr",align:null},"Source Cardinality"),(0,i.yg)("th",{parentName:"tr",align:null},"Target"),(0,i.yg)("th",{parentName:"tr",align:null},"Target Cardinality"),(0,i.yg)("th",{parentName:"tr",align:null},"Source Name"),(0,i.yg)("th",{parentName:"tr",align:null},"Source Assoc. Description"),(0,i.yg)("th",{parentName:"tr",align:null},"Target Name"),(0,i.yg)("th",{parentName:"tr",align:null},"Target Assoc. Description"))),(0,i.yg)("tbody",{parentName:"table"},(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},(0,i.yg)(r.A,{to:"/TC57CIM/IEC61970/Base/Wires/Switch",mdxType:"Link"},"Switch")),(0,i.yg)("td",{parentName:"tr",align:null},"1"),(0,i.yg)("td",{parentName:"tr",align:null},(0,i.yg)(r.A,{to:"/TC57CIM/IEC61970/Base/Wires/SwitchPhase",mdxType:"Link"},"SwitchPhase")),(0,i.yg)("td",{parentName:"tr",align:null},"0..*"),(0,i.yg)("td",{parentName:"tr",align:null},"Switch"),(0,i.yg)("td",{parentName:"tr",align:null},"The switch of the switch phase."),(0,i.yg)("td",{parentName:"tr",align:null},"SwitchPhase"),(0,i.yg)("td",{parentName:"tr",align:null},"The individual switch phases for the switch.")),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},(0,i.yg)(r.A,{to:"/TC57CIM/IEC61970/Base/Wires/Switch",mdxType:"Link"},"Switch")),(0,i.yg)("td",{parentName:"tr",align:null},"1"),(0,i.yg)("td",{parentName:"tr",align:null},(0,i.yg)(r.A,{to:"/TC57CIM/IEC61970/Base/Wires/SwitchSchedule",mdxType:"Link"},"SwitchSchedule")),(0,i.yg)("td",{parentName:"tr",align:null},"0..*"),(0,i.yg)("td",{parentName:"tr",align:null},"Switch"),(0,i.yg)("td",{parentName:"tr",align:null},"A SwitchSchedule is associated with a Switch."),(0,i.yg)("td",{parentName:"tr",align:null},"SwitchSchedules"),(0,i.yg)("td",{parentName:"tr",align:null},"A Switch can be associated with SwitchSchedules.")),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},(0,i.yg)(r.A,{to:"/TC57CIM/IEC61970/Base/Wires/Switch",mdxType:"Link"},"Switch")),(0,i.yg)("td",{parentName:"tr",align:null},"0..*"),(0,i.yg)("td",{parentName:"tr",align:null},(0,i.yg)(r.A,{to:"/TC57CIM/IEC61970/Base/Wires/CompositeSwitch",mdxType:"Link"},"CompositeSwitch")),(0,i.yg)("td",{parentName:"tr",align:null},"0..1"),(0,i.yg)("td",{parentName:"tr",align:null},"Switches"),(0,i.yg)("td",{parentName:"tr",align:null},"Switches contained in this Composite switch."),(0,i.yg)("td",{parentName:"tr",align:null},"CompositeSwitch"),(0,i.yg)("td",{parentName:"tr",align:null},"Composite switch to which this Switch belongs.")),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},(0,i.yg)(r.A,{to:"/TC57CIM/IEC61970/Base/Wires/Switch",mdxType:"Link"},"Switch")),(0,i.yg)("td",{parentName:"tr",align:null},"1"),(0,i.yg)("td",{parentName:"tr",align:null},(0,i.yg)(r.A,{to:"/TC57CIM/IEC61970/InfIEC61970/InfAvailabilityPlans/UnavailabilitySwitchAction",mdxType:"Link"},"UnavailabilitySwitchAction")),(0,i.yg)("td",{parentName:"tr",align:null},"0..*"),(0,i.yg)("td",{parentName:"tr",align:null}),(0,i.yg)("td",{parentName:"tr",align:null}),(0,i.yg)("td",{parentName:"tr",align:null}),(0,i.yg)("td",{parentName:"tr",align:null})),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},(0,i.yg)(r.A,{to:"/TC57CIM/IEC61970/Base/Wires/Switch",mdxType:"Link"},"Switch")),(0,i.yg)("td",{parentName:"tr",align:null},"1"),(0,i.yg)("td",{parentName:"tr",align:null},(0,i.yg)(r.A,{to:"/TC57CIM/IEC61970/Base/StateVariables/SvSwitch",mdxType:"Link"},"SvSwitch")),(0,i.yg)("td",{parentName:"tr",align:null},"0..*"),(0,i.yg)("td",{parentName:"tr",align:null},"Switch"),(0,i.yg)("td",{parentName:"tr",align:null},"The switch associated with the switch state."),(0,i.yg)("td",{parentName:"tr",align:null},"SvSwitch"),(0,i.yg)("td",{parentName:"tr",align:null},"The switch state associated with the switch.")),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},(0,i.yg)(r.A,{to:"/TC57CIM/IEC61970/Base/Wires/Switch",mdxType:"Link"},"Switch")),(0,i.yg)("td",{parentName:"tr",align:null},"0..*"),(0,i.yg)("td",{parentName:"tr",align:null},(0,i.yg)(r.A,{to:"/TC57CIM/IEC61968/LoadControl/ConnectDisconnectFunction",mdxType:"Link"},"ConnectDisconnectFunction")),(0,i.yg)("td",{parentName:"tr",align:null},"0..*"),(0,i.yg)("td",{parentName:"tr",align:null},"Switches"),(0,i.yg)("td",{parentName:"tr",align:null}),(0,i.yg)("td",{parentName:"tr",align:null},"ConnectDisconnectFunctions"),(0,i.yg)("td",{parentName:"tr",align:null})),(0,i.yg)("tr",{parentName:"tbody"},(0,i.yg)("td",{parentName:"tr",align:null},(0,i.yg)(r.A,{to:"/TC57CIM/IEC61970/Base/Wires/Switch",mdxType:"Link"},"Switch")),(0,i.yg)("td",{parentName:"tr",align:null},"0..1"),(0,i.yg)("td",{parentName:"tr",align:null},(0,i.yg)(r.A,{to:"/TC57CIM/IEC61968/Operations/SwitchAction",mdxType:"Link"},"SwitchAction")),(0,i.yg)("td",{parentName:"tr",align:null},"0..1"),(0,i.yg)("td",{parentName:"tr",align:null},"OperatedSwitch"),(0,i.yg)("td",{parentName:"tr",align:null},"Switch that is the object of this switch action."),(0,i.yg)("td",{parentName:"tr",align:null},"SwitchAction"),(0,i.yg)("td",{parentName:"tr",align:null},"Action changing status of this switch.")))))}d.isMDXComponent=!0}}]);