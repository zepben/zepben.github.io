(window.webpackJsonp=window.webpackJsonp||[]).push([[1272],{1330:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return s}));var a=n(2),r=n(6),o=(n(0),n(2146)),c={title:"ConnectivityNodeContainer"},i={unversionedId:"Model/TC57CIM/IEC61970/Base/Core/ConnectivityNodeContainer",id:"Model/TC57CIM/IEC61970/Base/Core/ConnectivityNodeContainer",isDocsHomePage:!1,title:"ConnectivityNodeContainer",description:"Class Description",source:"@site/docs\\Model\\TC57CIM\\IEC61970\\Base\\Core\\ConnectivityNodeContainer.md",slug:"/Model/TC57CIM/IEC61970/Base/Core/ConnectivityNodeContainer",permalink:"/evolve/docs/cim/Model/TC57CIM/IEC61970/Base/Core/ConnectivityNodeContainer",version:"current",sidebar:"docs",previous:{title:"ConnectivityNode",permalink:"/evolve/docs/cim/Model/TC57CIM/IEC61970/Base/Core/ConnectivityNode"},next:{title:"Curve",permalink:"/evolve/docs/cim/Model/TC57CIM/IEC61970/Base/Core/Curve"}},l=[{value:"Class Description",id:"class-description",children:[]},{value:"Attributes",id:"attributes",children:[]},{value:"Relationships",id:"relationships",children:[]},{value:"Leaf/Root class",id:"leafroot-class",children:[]},{value:"Associations",id:"associations",children:[]}],b={rightToc:l};function s(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h3",{id:"class-description"},"Class Description"),Object(o.b)("p",null,"A base class for all objects that may contain connectivity nodes or topological nodes."),Object(o.b)("h3",{id:"attributes"},"Attributes"),Object(o.b)("p",null,"None  "),Object(o.b)("h3",{id:"relationships"},"Relationships"),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Inherits from"),"  "),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"/Model/TC57CIM/IEC61970/Base/Core/PowerSystemResource"}),"PowerSystemResource"))),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Descendant classes"),"  "),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"/Model/TC57CIM/IEC61970/Base/Core/ConnectivityNode"}),"ConnectivityNode"),"  "),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"/Model/TC57CIM/IEC61970/Base/Core/EquipmentContainer"}),"EquipmentContainer"),"  "),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"/Model/TC57CIM/IEC61970/Base/Equivalents/EquivalentNetwork"}),"EquivalentNetwork"),"  "),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(a.a)({parentName:"li"},{href:"/Model/TC57CIM/IEC61970/Base/Topology/TopologicalNode"}),"TopologicalNode"),"  ")),Object(o.b)("h3",{id:"leafroot-class"},"Leaf/Root class"),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:"center"}),"IsLeaf"),Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:"center"}),"IsRoot"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"False"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"center"}),"False")))),Object(o.b)("h3",{id:"associations"},"Associations"),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:"left"}),"Source Class"),Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:"left"}),"Cardinality Source"),Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:"left"}),"Target Class"),Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:"left"}),"Cardinality Target"),Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:"left"}),"Source Name"),Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:"left"}),"Source Assoc. Description"),Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:"left"}),"Target Name"),Object(o.b)("th",Object(a.a)({parentName:"tr"},{align:"left"}),"Target Assoc. Description"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(o.b)("a",Object(a.a)({parentName:"td"},{href:"/Model/TC57CIM/IEC61970/Base/Core/ConnectivityNode"}),"ConnectivityNode")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"0..*"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(o.b)("a",Object(a.a)({parentName:"td"},{href:"/Model/TC57CIM/IEC61970/Base/Core/ConnectivityNodeContainer"}),"ConnectivityNodeContainer")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"1"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"ConnectivityNodes"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"Connectivity nodes which belong to this connectivity node container."),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"ConnectivityNodeContainer"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"Container of this connectivity node.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(o.b)("a",Object(a.a)({parentName:"td"},{href:"/Model/TC57CIM/IEC61970/Base/Topology/TopologicalNode"}),"TopologicalNode")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"0..*"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),Object(o.b)("a",Object(a.a)({parentName:"td"},{href:"/Model/TC57CIM/IEC61970/Base/Core/ConnectivityNodeContainer"}),"ConnectivityNodeContainer")),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"0..1"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"TopologicalNode"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"The topological nodes which belong to this connectivity node container."),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"ConnectivityNodeContainer"),Object(o.b)("td",Object(a.a)({parentName:"tr"},{align:"left"}),"The connectivity node container to which the topological node belongs.")))))}s.isMDXComponent=!0},2146:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return j}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var b=r.a.createContext({}),s=function(e){var t=r.a.useContext(b),n=t;return e&&(n="function"==typeof e?e(t):i({},t,{},e)),n},p=function(e){var t=s(e.components);return r.a.createElement(b.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},O=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,b=l(e,["components","mdxType","originalType","parentName"]),p=s(n),O=a,j=p["".concat(c,".").concat(O)]||p[O]||d[O]||o;return n?r.a.createElement(j,i({ref:t},b,{components:n})):r.a.createElement(j,i({ref:t},b))}));function j(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,c=new Array(o);c[0]=O;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,c[1]=i;for(var b=2;b<o;b++)c[b]=n[b];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,n)}O.displayName="MDXCreateElement"}}]);