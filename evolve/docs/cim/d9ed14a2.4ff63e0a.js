(window.webpackJsonp=window.webpackJsonp||[]).push([[1776],{1834:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return c})),a.d(t,"metadata",(function(){return l})),a.d(t,"rightToc",(function(){return i})),a.d(t,"default",(function(){return p}));var n=a(2),r=a(6),b=(a(0),a(2146)),c={title:"GateInputPin"},l={unversionedId:"Model/TC57CIM/IEC61970/InfIEC61970/InfSIPS/GateInputPin",id:"Model/TC57CIM/IEC61970/InfIEC61970/InfSIPS/GateInputPin",isDocsHomePage:!1,title:"GateInputPin",description:"Class Description",source:"@site/docs\\Model\\TC57CIM\\IEC61970\\InfIEC61970\\InfSIPS\\GateInputPin.md",slug:"/Model/TC57CIM/IEC61970/InfIEC61970/InfSIPS/GateInputPin",permalink:"/evolve/docs/cim/Model/TC57CIM/IEC61970/InfIEC61970/InfSIPS/GateInputPin",version:"current",sidebar:"docs",previous:{title:"Gate",permalink:"/evolve/docs/cim/Model/TC57CIM/IEC61970/InfIEC61970/InfSIPS/Gate"},next:{title:"GateLogicKind",permalink:"/evolve/docs/cim/Model/TC57CIM/IEC61970/InfIEC61970/InfSIPS/GateLogicKind"}},i=[{value:"Class Description",id:"class-description",children:[]},{value:"Attributes",id:"attributes",children:[]},{value:"Relationships",id:"relationships",children:[]},{value:"Leaf/Root class",id:"leafroot-class",children:[]},{value:"Associations",id:"associations",children:[]}],o={rightToc:i};function p(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(b.b)("wrapper",Object(n.a)({},o,a,{components:t,mdxType:"MDXLayout"}),Object(b.b)("h3",{id:"class-description"},"Class Description"),Object(b.b)("p",null,"Input pin for a logical gate. The condition described in the input pin will give a logical true or false. Result from measurement and calculation are converted to a true or false.  "),Object(b.b)("h3",{id:"attributes"},"Attributes"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Name"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Type"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"absoluteValue"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"/Model/TC57CIM/IEC61970/Base/Domain/Boolean"}),"Boolean")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"If true, use the absolute value for compare..")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"aDLogicKind"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"/Model/TC57CIM/IEC61970/InfIEC61970/InfSIPS/AnalogToDigitalLogicKind"}),"AnalogToDigitalLogicKind")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"The compare operation.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"duration"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"/Model/TC57CIM/IEC61970/Base/Domain/Seconds"}),"Seconds")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"The duration the compare condition need to be present before given a true. Default is 0 seconds.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"negate"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"/Model/TC57CIM/IEC61970/Base/Domain/Boolean"}),"Boolean")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"Invert/negate the result of the compare.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"thresholdPercentage"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"/Model/TC57CIM/IEC61970/Base/Domain/PerCent"}),"PerCent")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"The threshold percentage that should be used for compare with the percentage change between input value and threshold value.")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"thresholdValue"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"/Model/TC57CIM/IEC61970/Base/Domain/Float"}),"Float")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"The threshold value that should be used for compare with the input value.")))),Object(b.b)("h3",{id:"relationships"},"Relationships"),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Inherits from"),"  "),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/Model/TC57CIM/IEC61970/Base/Core/IdentifiedObject"}),"IdentifiedObject"))),Object(b.b)("p",null,Object(b.b)("strong",{parentName:"p"},"Descendant classes"),"  "),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/Model/TC57CIM/IEC61970/InfIEC61970/InfSIPS/PinBranchGroup"}),"PinBranchGroup"),"  "),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/Model/TC57CIM/IEC61970/InfIEC61970/InfSIPS/PinEquipment"}),"PinEquipment"),"  "),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/Model/TC57CIM/IEC61970/InfIEC61970/InfSIPS/PinGate"}),"PinGate"),"  "),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/Model/TC57CIM/IEC61970/InfIEC61970/InfSIPS/PinMeasurement"}),"PinMeasurement"),"  "),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(n.a)({parentName:"li"},{href:"/Model/TC57CIM/IEC61970/InfIEC61970/InfSIPS/PinTerminal"}),"PinTerminal"),"  ")),Object(b.b)("h3",{id:"leafroot-class"},"Leaf/Root class"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"IsLeaf"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"center"}),"IsRoot"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"False"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"center"}),"False")))),Object(b.b)("h3",{id:"associations"},"Associations"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Source Class"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Cardinality Source"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Target Class"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"right"}),"Cardinality Target"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Source Name"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Source Assoc. Description"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Target Name"),Object(b.b)("th",Object(n.a)({parentName:"tr"},{align:"left"}),"Target Assoc. Description"))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"/Model/TC57CIM/IEC61970/InfIEC61970/InfSIPS/GateInputPin"}),"GateInputPin")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"1..*"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),Object(b.b)("a",Object(n.a)({parentName:"td"},{href:"/Model/TC57CIM/IEC61970/InfIEC61970/InfSIPS/Gate"}),"Gate")),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"right"}),"1"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"GateInputPin"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"Input to the gate."),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}),"Gate"),Object(b.b)("td",Object(n.a)({parentName:"tr"},{align:"left"}))))))}p.isMDXComponent=!0},2146:function(e,t,a){"use strict";a.d(t,"a",(function(){return O})),a.d(t,"b",(function(){return s}));var n=a(0),r=a.n(n);function b(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function c(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?c(Object(a),!0).forEach((function(t){b(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):c(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},b=Object.keys(e);for(n=0;n<b.length;n++)a=b[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);for(n=0;n<b.length;n++)a=b[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=r.a.createContext({}),p=function(e){var t=r.a.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):l({},t,{},e)),a},O=function(e){var t=p(e.components);return r.a.createElement(o.Provider,{value:t},e.children)},j={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=Object(n.forwardRef)((function(e,t){var a=e.components,n=e.mdxType,b=e.originalType,c=e.parentName,o=i(e,["components","mdxType","originalType","parentName"]),O=p(a),d=n,s=O["".concat(c,".").concat(d)]||O[d]||j[d]||b;return a?r.a.createElement(s,l({ref:t},o,{components:a})):r.a.createElement(s,l({ref:t},o))}));function s(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var b=a.length,c=new Array(b);c[0]=d;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:n,c[1]=l;for(var o=2;o<b;o++)c[o]=a[o];return r.a.createElement.apply(null,c)}return r.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"}}]);