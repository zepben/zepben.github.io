"use strict";(self.webpackChunkgis_network_extractor_doco=self.webpackChunkgis_network_extractor_doco||[]).push([[5593],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>f});var a=t(7294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,l=function(e,n){if(null==e)return{};var t,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var i=a.createContext({}),u=function(e){var n=a.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=u(e.components);return a.createElement(i.Provider,{value:n},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,l=e.mdxType,r=e.originalType,i=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=u(t),m=l,f=d["".concat(i,".").concat(m)]||d[m]||c[m]||r;return t?a.createElement(f,o(o({ref:n},p),{},{components:t})):a.createElement(f,o({ref:n},p))}));function f(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var r=t.length,o=new Array(r);o[0]=m;var s={};for(var i in n)hasOwnProperty.call(n,i)&&(s[i]=n[i]);s.originalType=e,s[d]="string"==typeof e?e:l,o[1]=s;for(var u=2;u<r;u++)o[u]=t[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},3879:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>s,toc:()=>u});var a=t(7462),l=(t(7294),t(3905));const r={id:"input-files",title:"Input Files"},o=void 0,s={unversionedId:"input-files",id:"version-2.19.1/input-files",title:"Input Files",description:"Required Input Files",source:"@site/versioned_docs/version-2.19.1/input-files.md",sourceDirName:".",slug:"/input-files",permalink:"/evolve/docs/gis-network-extractor/2.19.1/input-files",draft:!1,tags:[],version:"2.19.1",frontMatter:{id:"input-files",title:"Input Files"},sidebar:"sidebar",previous:{title:"Overview",permalink:"/evolve/docs/gis-network-extractor/2.19.1/"},next:{title:"Running the Application",permalink:"/evolve/docs/gis-network-extractor/2.19.1/run-app"}},i={},u=[{value:"Required Input Files",id:"required-input-files",level:5},{value:"Optional Files",id:"optional-files",level:5},{value:"Meter Mapping File",id:"meter-mapping-file",level:5},{value:"CPPAL",id:"cppal",level:6},{value:"Sample content:",id:"sample-content",level:6},{value:"EE",id:"ee",level:6},{value:"Sample content:",id:"sample-content-1",level:6},{value:"Processor Config File",id:"processor-config-file",level:5},{value:"Structure:",id:"structure",level:6},{value:"Filters and includeLV",id:"filters-and-includelv",level:6},{value:"Sample content:",id:"sample-content-2",level:6},{value:"Default Wire Info",id:"default-wire-info",level:6},{value:"Default Per-Length Sequence Impedance",id:"default-per-length-sequence-impedance",level:6},{value:"Default Power Transformer Info",id:"default-power-transformer-info",level:6},{value:"Cable Types File",id:"cable-types-file",level:5},{value:"Sample content:",id:"sample-content-3",level:6},{value:"Network Hierarchy File",id:"network-hierarchy-file",level:5},{value:"Sample content:",id:"sample-content-4",level:6},{value:"Nodes Config File",id:"nodes-config-file",level:5},{value:"Structure:",id:"structure-1",level:6},{value:"Sample content:",id:"sample-content-5",level:6},{value:"Substation Transformer Tap Settings file",id:"substation-transformer-tap-settings-file",level:5},{value:"Structure:",id:"structure-2",level:6},{value:"Sample content:",id:"sample-content-6",level:6},{value:"Line Regulator Settings file",id:"line-regulator-settings-file",level:5},{value:"Structure:",id:"structure-3",level:6},{value:"Sample content:",id:"sample-content-7",level:6},{value:"Voltage Regulator Settings file",id:"voltage-regulator-settings-file",level:5},{value:"Structure CPPAL",id:"structure-cppal",level:6},{value:"Sample content CPPAL:",id:"sample-content-cppal",level:6},{value:"Structure EE",id:"structure-ee",level:6},{value:"Sample content EE:",id:"sample-content-ee",level:6},{value:"Source Impedance file",id:"source-impedance-file",level:5},{value:"Structure CPPAL",id:"structure-cppal-1",level:6},{value:"Sample Content CPPAL:",id:"sample-content-cppal-1",level:6},{value:"Structure EE",id:"structure-ee-1",level:6},{value:"Sample Content EE:",id:"sample-content-ee-1",level:6},{value:"Span Ratings file",id:"span-ratings-file",level:5},{value:"Structure",id:"structure-4",level:6},{value:"Sample Content",id:"sample-content-8",level:6},{value:"Tap Settings file",id:"tap-settings-file",level:5},{value:"Structure CPPAL",id:"structure-cppal-2",level:6},{value:"Sample Content CPPAL:",id:"sample-content-cppal-2",level:6},{value:"Structure EE",id:"structure-ee-2",level:6},{value:"Sample Content EE:",id:"sample-content-ee-2",level:6}],p={toc:u},d="wrapper";function c(e){let{components:n,...r}=e;return(0,l.kt)(d,(0,a.Z)({},p,r,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h5",{id:"required-input-files"},"Required Input Files"),(0,l.kt)("p",null,"The following files are required for the GIS Network Extractor to run:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"File(s)"),(0,l.kt)("th",{parentName:"tr",align:null},"Data type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default location"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#processor-config-file"},"Processor Config")),(0,l.kt)("td",{parentName:"tr",align:null},"Single .json file"),(0,l.kt)("td",{parentName:"tr",align:null},"./processor-config.json")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#cable-types-file"},"Cable Types")),(0,l.kt)("td",{parentName:"tr",align:null},"Single .json file"),(0,l.kt)("td",{parentName:"tr",align:null},"./cable-types.json")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#network-hierarchy-file"},"Network Hierarchy")),(0,l.kt)("td",{parentName:"tr",align:null},"Single .json file"),(0,l.kt)("td",{parentName:"tr",align:null},"./network-hierarchy.json")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#nodes-config-file"},"Nodes Config")),(0,l.kt)("td",{parentName:"tr",align:null},"Single .json file"),(0,l.kt)("td",{parentName:"tr",align:null},"./nodes-config.json")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Poles"),(0,l.kt)("td",{parentName:"tr",align:null},"Single .json file"),(0,l.kt)("td",{parentName:"tr",align:null},"./poles.json")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"GIS Network files"),(0,l.kt)("td",{parentName:"tr",align:null},"Single or multiple .json/.geojson files"),(0,l.kt)("td",{parentName:"tr",align:null},"./gis")))),(0,l.kt)("h5",{id:"optional-files"},"Optional Files"),(0,l.kt)("p",null,"The following files may be provided as input for the GIS Network Extractor, however they are not required:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"File(s)"),(0,l.kt)("th",{parentName:"tr",align:null},"Data type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default location"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"Meter Mapping"),(0,l.kt)("td",{parentName:"tr",align:null},"Single or multiple CSV files"),(0,l.kt)("td",{parentName:"tr",align:null},"./meter_mappings")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#substation-transformer-tap-settings-file"},"Substation Transformer Tap Settings")),(0,l.kt)("td",{parentName:"tr",align:null},"Single .csv file"),(0,l.kt)("td",{parentName:"tr",align:null},"none")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#line-regulator-settings-file"},"Line Regulator Settings")),(0,l.kt)("td",{parentName:"tr",align:null},"Single .csv file"),(0,l.kt)("td",{parentName:"tr",align:null},"none")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#voltage-regulator-settings-file"},"Voltage Regulator Settings")),(0,l.kt)("td",{parentName:"tr",align:null},"Single .csv file"),(0,l.kt)("td",{parentName:"tr",align:null},"none")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#source-impedance-file"},"Source Impedance")),(0,l.kt)("td",{parentName:"tr",align:null},"Single .csv file"),(0,l.kt)("td",{parentName:"tr",align:null},"none")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#span-ratings-file"},"Span Ratings")),(0,l.kt)("td",{parentName:"tr",align:null},"Single .csv file"),(0,l.kt)("td",{parentName:"tr",align:null},"none")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#tap-settings-file"},"Tap Settings")),(0,l.kt)("td",{parentName:"tr",align:null},"Single CSV file"),(0,l.kt)("td",{parentName:"tr",align:null},"none")))),(0,l.kt)("br",null),(0,l.kt)("h5",{id:"meter-mapping-file"},"Meter Mapping File"),(0,l.kt)("h6",{id:"cppal"},"CPPAL"),(0,l.kt)("p",null,"The GIS Network Extractor takes meter mapping files to provide a mapping of meters and supply points to transformers. These files use CSV format and contain the\nfollowing columns: ",(0,l.kt)("strong",{parentName:"p"},"company, nmi,meter_id, supply_point_id, meter_no, transformer_id, transformer_desc, feeder, service_addr, cust_class, cust_tariff"),". Each\nfile is required to have its date in the file name so the appropriate mapping file can be used."),(0,l.kt)("h6",{id:"sample-content"},"Sample content:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csv"},'company,nmi,meter_id,supply_point_id,meter_no,transformer_id,transformer_desc,feeder,service_addr,cust_class,cust_tariff\n"ACME","FOOH1234567",123456789,11929433,"1234",,,"LP001","140 THISSON STREET,SPRINGFIELD,SPF,12345A","C","T1"\n"ACME","FOOH1234567",123456789,11929433,"1234",,,"LP002","140 OTHERSON STREET,SPRINGFIELD,SPF,12345A","R","T1"\n"ACME","FOOH1234567",123456789,11929533,"1234",,,"LP003","LEVEL44,76 WOOP WOOP STREET,SPRINGFIELD,SPF,12345A","I","T2"\n"ACME","FOOH1234567",123456789,11929538,"1234",,,"LP004","WEST TOWER,76 WOOP WOOP STREET,SPRINGFIELD,SPF,12345A","I","T1"\n"ACME","FOOH1234567",123456789,11929538,"1234",,,"LP006","WEST TOWER,76 WOOP WOOP STREET,SPRINGFIELD,SPF,12345A","C","T1"\n"ACME","FOOH1234567",123456789,11929538,"1234",,,"LP007","TENANCY2,OPP 76 WOOP WOOP STREET,SPRINGFIELD,SPF,12345A","I","T3"\n"ACME","FOOH1234567",123456789,11929538,"1234",,,"LP008","TENANCY1,OPP 76 WOOP WOOP STREET,SPRINGFIELD,SPF,12345A","R","T3"\n')),(0,l.kt)("h6",{id:"ee"},"EE"),(0,l.kt)("p",null,"The GIS Network Extractor takes transformer-premise-nmi mapping files to provide a mapping of meters and premises to transformers. These files use CSV format\nand contain the\nfollowing columns: ",(0,l.kt)("strong",{parentName:"p"},"nmi,premnum,peace_substation,peace_zonesub,sad_feeder,sad_substation,sad_zonesub,dlf,dlf_class"),".\nEach file is required to have its date in the file name so the appropriate mapping file can be used."),(0,l.kt)("h6",{id:"sample-content-1"},"Sample content:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csv"},"nmi,premnum,peace_substation,peace_zonesub,sad_feeder,sad_substation,sad_zonesub,dlf,dlf_class\n4123456781,1234561,PTX1,PZS1,SF1,STX1,ZS1,DLF1,DLFC1\n4123456782,1234562,PTX2,ZS2,SF2,STX2,ZS2,DLF2,DLFC2\n4123456783,1234563,PTX3,ZS3,SF3,STX3,ZS3,DLF3,DLFC3\n")),(0,l.kt)("h5",{id:"processor-config-file"},"Processor Config File"),(0,l.kt)("p",null,"The processor configuration allows specifying whether some of the processing steps will be executed, as well as allows filtering\nof what data will be ingested and saved to the resulting database. If a config file is not specified or present, defaults will be as per below."),(0,l.kt)("h6",{id:"structure"},"Structure:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'{\n  # Whether meter data should be processed (if true a meter mappings file must be provided).\n  # Default: `true`\n  "processMeters": boolean,\n  \n  # Whether to create meters and consumers from the meter mappings file for premises that don\'t have a corresponding transformer.\n  # Should only be used for limited scope network processing, otherwise it will suppress warnings about meter data quality. \n  # See processor configuration help for details.\n  # Default: `true`\n  "includeLonelyMeters": boolean,\n  \n  # Used to control if locations are created for the energy consumers that are created when meters are mapped to a\n  # transformer rather than to an existing energy consumer. Doing so will allow them to be seen on the map.\n  # Default: `false`\n  "createEnergyConsumerLocations" : boolean,\n\n  # Used to control if locations are created for the equivalent branches that are created when meters are mapped to a\n  # transformer rather than to an existing energy consumer. Doing so will allow them to be seen on the map.\n  # Default: `false`\n  "createEquivalentBranchLocations": boolean \n  \n  # A mapping between `TCS.CD_CUSTOMER_TYPE.CT_CODE` and `CustomerKind`.\n  # Default: `null`\n  "tcsCustomerTypeMappings": null | {\n    "<CT_CODE>": "<CustomerKind>",\n    ...\n  }\n  \n  # Whether the Sub-transmission network should be ingested (must be in a file name like SUB_TRANS_NETWORK.*.json\n  # Default: `true`\n  "includeSubtrans": boolean,\n  \n  # HV filters (see below). \n  # Default: `null`\n  "hv": null | {  # Exactly one of the following fields must be set\n    "include": ["<feeder_name_1>", "<feeder_name_2>", ...]\n    "exclude": ["<feeder_name_1>", "<feeder_name_2>", ...]\n  },\n  \n  # Whether LV should be saved to the database. \n  # Default: `true`\n  "includeLV": boolean,\n  \n  # Whether to log a message if the head of a feeder can not be found. When the metadata is missing from geojson most (or all) of\n  # these messages are false positives when LV is processed, so suppressing them is preferable.\n  # Default: `true`\n  "warnOnMissingFeeder": boolean,\n\n  # LV filters (see below). Secify inclusions/exclusions at the distribution transformer level.\n  # Default: `null`\n  "lv": null | {  # Exactly one of the following fields must be set\n    "include": ["<feeder_name_1>", "<feeder_name_2>", ...]\n    "exclude": ["<feeder_name_1>", "<feeder_name_2>", ...]\n  },\n\n  # Whether default values will be assigned for transformers and lines.\n  # Default: `true`\n  "assignDefaults": boolean,\n  \n  # Default WireInfo to use for lines missing one (see below)\n  # Default: `null`\n  "defaultWireInfo": null | <WireInfo spec>,\n  \n  # Default PerLengthSequenceImpedance to use for lines missing one (see below)\n  # Default: `null`\n  "defaultPerLengthSequenceImpedance": null | <PerLengthSequenceImpedance spec>,\n  \n  # Default PowerTransformerInfo to use for power transformers missing one (see below)\n  # Default: `null`\n  "defaultPowerTransformerInfo": null | <PowerTransformerInfo spec>,\n  \n  # Whether to run use case validation after generating output database\n  # Default: `true`\n  "validation": boolean,\n  \n  # Whether to process PoF aliases as names. Requires PoF connection parameters to be passed in.\n  # Default: `false`\n  "processPofAliases": boolean,\n  \n  # Path to a file containing the DER register.\n  # Default: `null`\n  "derRegisterPath": null | string,\n  \n  # Path to a file containing zone substation transformer tap changer settings. CPPAL only.\n  # Default: `null`\n  "substationTransformerTapSettingsPath": null | string, \n  \n  # Path to a file containing the zone substation regulator settings CSV. CPPAL and EE formats supported.\n  # Default: `null`\n  "regulatorSettingsPath": null | string,\n  \n  # Path to a file containing the line regulator settings CSV. CPPAL only.\n  # Default: `null`\n  "lineRegulatorSettingsPath": null | string,\n  \n  # Path to a file containing the source impedances CSV. CPPAL and EE formats supported.\n  # Default: `null`\n  "sourceImpedancesPath": null | string,\n  \n  # Path to a CSV file containing the span level ratings for AC line segments.\n  # Default: `null`\n  "spanRatingsPath": null | string,\n  \n  # Path to a file containing the transformer tap settings. CPPAL and EE formats supported.\n  # Default: `null`\n  "txTapsPath": null | string,\n\n  # The type of database being used to stor ethe PoF data. One of `ORACLE` or `SQL_SERVER`.\n  # Default: `ORACLE`\n  "pofDatabaseType": null | string,\n\n  # Indicates if Windows integrated security should be used for authenticating the connection to the PoF database instead using the username/password.\n  # Default: `false`\n  "sqlServerIntegratedSecurity": null | boolean,\n\n  # Name of the schema that contains the ENMAC tables (case-sensitive). This will modify queries of the form `FROM COMPONENT_HEADER` into\n  #   `FROM <enmacSchema>.COMPONENT_HEADER`. If using integrated security, you should include the database name if it is not your default\n  #   database. e.g. `[database].ENMAC`\n  # Default: `null`\n  "enmacSchema": null | string,\n\n  # Name of the schema that contains the TCS tables (case-sensitive). This will modify queries of the form `FROM CD_PROPERTIES` into\n  #   `FROM <tcsSchema>.CD_PROPERTIES`. If using integrated security, you should include the database name if it is not your default\n  #   database. e.g. `[database].TCS`\n  # Default: `null`\n  "tcsSchema": null | string\n\n  # The source to use for adding meters to the network. One of `MAPPING_FILE` or `TCS`.\n  # Default: `MAPPING_FILE`\n  "meterSource": null | string\n  \n  # The source to use for adding poles to the network. One of `Json file` or `JDBC path`.\n  # Default: `./poles.json`\n  "poleDataLocation": null | string\n}\n')),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"NOTE:"),(0,l.kt)("p",{parentName:"blockquote"},"To use integrated security with SQLServer you need to have a copy of the Microsoft authentication DLL ",(0,l.kt)("inlineCode",{parentName:"p"},"mssql-jdbc_auth-#.#.#.x64.dll")," installed on your\nsystem,\nor in the same directory as the JAR. If you do not have a copy you can download it from\n",(0,l.kt)("a",{parentName:"p",href:"https://search.maven.org/artifact/com.microsoft.sqlserver/mssql-jdbc_auth"},"Maven Central"),".")),(0,l.kt)("h6",{id:"filters-and-includelv"},"Filters and includeLV"),(0,l.kt)("p",null,"Filters allow specifying which feeders get processed and stored in the result, however there are file name requirements that must be met for filters to work\nas intended.\nFor the most efficient handling of data, separate files should exist for HV and LV network, and they must be named accordingly in the form below:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"HV Files: <feeder_name>_mv.[geo]json\nLV Files: <feeder_name>_lv.[geo]json\n")),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"includeLV: false")," will only work efficiently if LV files are named in this form, as they will be excluded from the ingest process."),(0,l.kt)("p",null,"You can filter only at the HV level, and you can specify only one of the include/exclude filters.\nFor HV filters the filter is based on the feeder name, and the feeder name must be at the start of the filename."),(0,l.kt)("p",null,"An include filter will include ",(0,l.kt)("em",{parentName:"p"},"only")," feeders with filenames that ",(0,l.kt)("em",{parentName:"p"},"start with")," any of the given strings, and conversely an exclude filter will exclude any\nfeeders\nwith filenames that ",(0,l.kt)("em",{parentName:"p"},"start with")," any of the given strings in the same way."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Note the strings are not pattern matches and no regex is supported.")),(0,l.kt)("h6",{id:"sample-content-2"},"Sample content:"),(0,l.kt)("p",null,"Include 2 HV feeders and their LV but without meter processing or subtrans network."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "processMeters": false,\n  "includeSubtrans": false,\n  "hv": {\n    "include": [\n      "FNA001",\n      "FNA002"\n    ]\n  },\n  "includeLV": true\n}\n')),(0,l.kt)("p",null,"Include 2 HV feeders, plus sub-trans with meter processing, but no LV."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "hv": {\n    "include": [\n      "FNA001",\n      "FNA002"\n    ]\n  },\n  "includeLV": false\n}\n')),(0,l.kt)("p",null,"Two HV feeders and their LV, plus sub-trans with meter processing."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "hv": {\n    "include": [\n      "FNA001",\n      "FNA002"\n    ]\n  }\n}\n')),(0,l.kt)("h6",{id:"default-wire-info"},"Default Wire Info"),(0,l.kt)("p",null,"A default ",(0,l.kt)("inlineCode",{parentName:"p"},"WireInfo")," may be specified in the processor config as follows:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'{\n    "defaultWireInfo": {\n        \n        # Set to true to specify an overhead line, and false for an underground cable\n        "isOverhead": boolean,\n        \n        # The rated current of the wire.\n        # Default: `null`\n        "ratedCurrent": null | int,\n        \n        # The material of the wire. This should be one of WireMaterialKind, e.g. "copperCadmium".\n        # Default: `"UNKNOWN"`\n        "material": string\n    }\n}\n')),(0,l.kt)("p",null,"Sample:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "defaultWireInfo": {\n    "isOverhead": true,\n    "ratedCurrent": 3,\n    "material": "copperCadmium"\n  }\n}\n')),(0,l.kt)("h6",{id:"default-per-length-sequence-impedance"},"Default Per-Length Sequence Impedance"),(0,l.kt)("p",null,"A default ",(0,l.kt)("inlineCode",{parentName:"p"},"PerLengthSequenceImpedance")," may be specified in the processor config as follows (see CIM documentation for field definitions):"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'{\n    "defaultPerLengthSequenceImpedance": {\n        "r": null | double,\n        "x": null | double,\n        "bch": null | double,\n        "gch": null | double,\n        "r0": null | double,\n        "x0": null | double,\n        "b0ch": null | double,\n        "g0ch": null | double\n    }\n}\n')),(0,l.kt)("p",null,"All fields default to ",(0,l.kt)("inlineCode",{parentName:"p"},"null"),". Sample:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "defaultPerLengthSequenceImpedance": {\n    "r": 0.0025,\n    "x": 0.003,\n    "r0": 0.0025,\n    "x0": 0.003\n  }\n}\n')),(0,l.kt)("h6",{id:"default-power-transformer-info"},"Default Power Transformer Info"),(0,l.kt)("p",null,"Due to the hierarchical nature of ",(0,l.kt)("inlineCode",{parentName:"p"},"PowerTransformerInfo"),", the structure of its configuration will be denoted using multiple production rules.\nA full example is given at the end of this section. Refer to the CIM documentation for field definitions."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'<PowerTransformerInfo spec> = {\n    "transformerTankInfos": [<TransformerTankInfo spec>*]\n}\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'<TransformerTankInfo spec> = {\n    "transformerEndInfos": [<TransformerEndInfo spec>*]\n}\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'<TransformerEndInfo spec> = {\n    "connectionKind": "<WindingConnection value name>", # defaults to "UNKNOWN_WINDING"\n    "emergencyS": null | int, # defaults to null\n    "endNumber": int, # defaults to 0\n    "insulationU": null | int, # defaults to null\n    "phaseAngleClock": null | int, # defaults to null\n    "r": null | double, # defaults to null\n    "ratedS": null | int, # defaults to null\n    "ratedU": null | int, # defaults to null\n    "shortTermS": null | int, # defaults to null\n    "transformerStarImpedance": null | <TransformerStarImpedanceDto spec>, # defaults to null\n    "energisedEndNoLoadTests": null | <NoLoadTest spec>, # defaults to null\n    "energisedEndShortCircuitTests": null | <ShortCircuitTest spec>, # defaults to null\n    "groundedEndShortCircuitTests": null | <ShortCircuitTest spec>, # defaults to null\n    "openEndOpenCircuitTests": null | <OpenCircuitTest spec>, # defaults to null\n    "energisedEndOpenCircuitTests": null | <OpenCircuitTest spec> # defaults to null\n}\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'<TransformerStarImpedance spec> = {\n    "r": null | double, # defaults to null\n    "r0": null | double, # defaults to null\n    "x": null | double, # defaults to null\n    "x0": null | double # defaults to null\n}\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'<NoLoadTest spec> = {\n    "energisedEndVoltage": null | int, # defaults to null\n    "excitingCurrent": null | double, # defaults to null\n    "excitingCurrentZero": null | double, # defaults to null\n    "loss": null | int, # defaults to null\n    "lossZero": null | int # defaults to null\n}\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'<ShortCircuitTest spec> = {\n    "current": null | double, # defaults to null\n    "energisedEndStep": null | int, # defaults to null\n    "groundedEndStep": null | int, # defaults to null\n    "leakageImpedance": null | double, # defaults to null\n    "leakageImpedanceZero": null | double, # defaults to null\n    "loss": null | int, # defaults to null\n    "lossZero": null | int, # defaults to null\n    "power": null | int, # defaults to null\n    "voltage": null | double, # defaults to null\n    "voltageOhmicPart": null | double # defaults to null\n}\n')),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'<OpenCircuitTest spec> = {\n    "energisedEndStep": null | int, # defaults to null\n    "energisedEndVoltage": null | int, # defaults to null\n    "openEndStep": null | int, # defaults to null\n    "openEndVoltage": null | int, # defaults to null\n    "phaseShift": null | double # defaults to null\n}\n')),(0,l.kt)("p",null,"Full example:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "defaultPowerTransformerInfo": {\n    "transformerTankInfos": [\n      {\n        "transformerEndInfos": [\n          {\n            "connectionKind": "D",\n            "emergencyS": 1,\n            "endNumber": 1,\n            "insulationU": 3,\n            "r": 4.4,\n            "ratedS": 5,\n            "ratedU": 6,\n            "shortTermS": 7,\n            "transformerStarImpedance": {\n              "r": 1.1,\n              "r0": 2.2,\n              "x": 3.3,\n              "x0": 4.4\n            },\n            "energisedEndNoLoadTests": {\n              "energisedEndVoltage": 1,\n              "excitingCurrent": 2.2,\n              "excitingCurrentZero": 3.3,\n              "loss": 4,\n              "lossZero": 5\n            },\n            "energisedEndShortCircuitTests": {\n              "current": 1.1,\n              "energisedEndStep": 2,\n              "groundedEndStep": 3,\n              "leakageImpedance": 4.4,\n              "leakageImpedanceZero": 5.5,\n              "loss": 6,\n              "lossZero": 7,\n              "power": 8,\n              "voltage": 9.9,\n              "voltageOhmicPart": 10.10\n            }\n          },\n          {\n            "connectionKind": "Y",\n            "emergencyS": 1,\n            "endNumber": 2,\n            "insulationU": 3,\n            "phaseAngleClock": 30,\n            "r": 4.4,\n            "ratedS": 5,\n            "ratedU": 6,\n            "shortTermS": 7\n          }\n        ]\n      }\n    ]\n  }\n}\n')),(0,l.kt)("h5",{id:"cable-types-file"},"Cable Types File"),(0,l.kt)("p",null,"The GIS Network Extractor derives cable type information from a json file structured as follows:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'{\n    "cableTypes": [{\n            "id": string,\n            "resistance": double,\n            "reactance": double,\n            "zeroSeqResistance": double,\n            "zeroSeqReactance": double,\n            "nominalVoltage": double,\n            "rating": int,\n            "maxFaultCurrent": double,\n            "normalRating": double,\n            "springDay": double,\n            "springNight": double,\n            "summerDay": double,\n            "summerNight": double,\n            "autumnDay": double,\n            "autumnNight": double,\n            "winterDay": double,\n            "winterNight": double,\n            "neutralRating": double\n        }\n    ]\n}\n')),(0,l.kt)("p",null,"If you have a running copy of the ",(0,l.kt)("inlineCode",{parentName:"p"},"Energy Workbench Server")," you can download the ",(0,l.kt)("a",{parentName:"p",href:"http://ewbserver/ewb/network/api/v1/cable-types"},"existing cable types"),"."),(0,l.kt)("h6",{id:"sample-content-3"},"Sample content:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "cableTypes": [\n    {\n      "id": "Cu_0.1i_SWAS_SD_11_6",\n      "resistance": 0.342,\n      "reactance": 0.115,\n      "zeroSeqResistance": 0.795,\n      "zeroSeqReactance": 0.066,\n      "nominalVoltage": 11,\n      "rating": 215,\n      "maxFaultCurrent": 10.1,\n      "normalRating": 1,\n      "springDay": 1,\n      "springNight": 1,\n      "summerDay": 1,\n      "summerNight": 1,\n      "autumnDay": 1,\n      "autumnNight": 1,\n      "winterDay": 1.14,\n      "winterNight": 1.14,\n      "neutralRating": 215\n    },\n    {\n      "id": "Cu_0.25i_pswsb_SD_6.6_3",\n      "resistance": 0.133,\n      "reactance": 0.074,\n      "zeroSeqResistance": 0.95,\n      "zeroSeqReactance": 0.541,\n      "nominalVoltage": 6.6,\n      "rating": 345,\n      "maxFaultCurrent": 10.1,\n      "normalRating": 1,\n      "springDay": 1,\n      "springNight": 1,\n      "summerDay": 1,\n      "summerNight": 1,\n      "autumnDay": 1,\n      "autumnNight": 1,\n      "winterDay": 1.117,\n      "winterNight": 1.117,\n      "neutralRating": 345\n    }\n  ]\n}\n')),(0,l.kt)("h5",{id:"network-hierarchy-file"},"Network Hierarchy File"),(0,l.kt)("p",null,"The GIS Network Extractor derives network hierarchy information from a json file structured as follows:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'{\n    "businesses": [{\n        "id": string,\n        "name": string,\n        "regions": [{\n            "id": string,\n            "name": string,\n            "zones": [{\n                "id": string,\n                "name": string,\n                "feeders": [{\n                    "id": string,\n                    "name": string\n                }]\n            }]\n        }]\n    }]\n}\n')),(0,l.kt)("p",null,"If you have a running copy of the ",(0,l.kt)("inlineCode",{parentName:"p"},"Energy Workbench Server")," you can download\nthe ",(0,l.kt)("a",{parentName:"p",href:"http://ewbserver/ewb/network/api/v1/hierarchy?filter=businesses"},"existing network hierarchy"),"."),(0,l.kt)("h6",{id:"sample-content-4"},"Sample content:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "businesses": [\n    {\n      "id": "business1",\n      "name": "BUSINESS1",\n      "regions": [\n        {\n          "id": "region1",\n          "name": "REGION1",\n          "zones": [\n            {\n              "id": "zone1",\n              "name": "ZONE1",\n              "feeders": [\n                {\n                  "id": "feeder1",\n                  "name": "FEEDER1"\n                }\n              ]\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}\n')),(0,l.kt)("h5",{id:"nodes-config-file"},"Nodes Config File"),(0,l.kt)("p",null,"The GIS Network Extractor derives node configuration information from a json file structured as follows:"),(0,l.kt)("h6",{id:"structure-1"},"Structure:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json5"},'{\n  "mappings": [\n    {\n      "gisClass": "<gis-node-class>",\n      "cimClass": "<conducting-equipment-class>",\n      "style": "<diagram-object-style>"\n    }\n  ],\n  "switchStyles": [\n    {\n      "value": "<attribute-value>",\n      "style": "<diagram-object-style>"\n    }\n  ],\n  // optional\n  "reactorClasses": [\n    "<gis-node-class>"\n  ],\n  // optional\n  "defaultReactorSizeKVAR": 1.0\n}\n')),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},(0,l.kt)("inlineCode",{parentName:"p"},"reactorClasses")," defaults to ",(0,l.kt)("inlineCode",{parentName:"p"},'["reactor_site"]'),", and ",(0,l.kt)("inlineCode",{parentName:"p"},"defaultReactorSizeKVAR")," defaults to ",(0,l.kt)("inlineCode",{parentName:"p"},"25.0")," when they are not provided.")),(0,l.kt)("h6",{id:"sample-content-5"},"Sample content:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "mappings": [\n    {\n      "gisClass": "acr",\n      "cimClass": "Recloser",\n      "style": "RECLOSER"\n    },\n    {\n      "gisClass": "hvSwitch",\n      "cimClass": "Disconnector",\n      "style": "SWITCH"\n    }\n  ],\n  "switchStyles": [\n    {\n      "value": "bridge",\n      "style": "BRIDGE"\n    },\n    {\n      "value": "air-break",\n      "style": "SWITCH"\n    },\n    {\n      "value": "live line clamp",\n      "style": "LIVE_LINE_CLAMP"\n    }\n  ],\n  "reactorClasses": [\n    "reactor_site"\n  ],\n  "defaultReactorSizeKVAR": 25.0\n}\n')),(0,l.kt)("h5",{id:"substation-transformer-tap-settings-file"},"Substation Transformer Tap Settings file"),(0,l.kt)("h6",{id:"structure-2"},"Structure:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csv"},"ID,SUBSTATION_NAME,NAME_PLATE_RATING,VECTOR_GROUP\n<Transformer mRID>,<Zone Substation mRID>,<TX rating in MVA>,<Vector group of TX>\n")),(0,l.kt)("p",null,"Tap settings are applied based on the rating or vector group depending on what part of the network the Transformer is located.\nFor Citipower substations the NAME_PLATE_RATING dictates the tap settings that are applied, whereas for Powercor substations the vector group dictates the tap\nsettings."),(0,l.kt)("p",null,"See ",(0,l.kt)("img",{alt:"this diagram",src:t(686).Z,width:"667",height:"445"})," for how tap settings get applied based on vector group/rating."),(0,l.kt)("h6",{id:"sample-content-6"},"Sample content:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csv"},"ID,SUBSTATION_NAME,NAME_PLATE_RATING,VECTOR_GROUP\n10297282,SK,27,Unknown\n10297293,BAN,30,DY1\n10297304,BAS,30,DY1\n10297310,SK,30,DYN1\n")),(0,l.kt)("h5",{id:"line-regulator-settings-file"},"Line Regulator Settings file"),(0,l.kt)("h6",{id:"structure-3"},"Structure:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csv"},"Regulators,CT_Ratio,VT_Ratio,Set_Point,Bandwidth,Resistance,Reactance,CT_Primary,Time_Delay,Reverse_Resistance,Reverse_Reactance\n<Transformer Name>,<float>,<float>,<float>,<float>,<float>,<float>,<float>,<float>,<float>,<float>\n")),(0,l.kt)("p",null,"Matching is performed on transformer name via the Regulators column."),(0,l.kt)("h6",{id:"sample-content-7"},"Sample content:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csv"},"Regulators,CT_Ratio,VT_Ratio,Set_Point,Bandwidth,Resistance,Reactance,CT_Primary,Time_Delay,Reverse_Resistance,Reverse_Reactance\n9723 ALLANSFORD REG,80,183.3,117,3,3,4,400,50,-3,-4\n9724 ALLANSFORD REG,80,183.3,117,3,3,4,400,50,-3,-4\n9725 ALLANSFORD REG,80,183.3,117,3,3,4,400,50,-3,-4\nANNUELLO ROAD P47 REG,40,183.3,118.2,3,5.4,4.3,200,80,0,0\nANNUELLO ROAD P47 REG 1,40,183.3,118.2,3,5.4,4.3,200,80,0,0\n")),(0,l.kt)("h5",{id:"voltage-regulator-settings-file"},"Voltage Regulator Settings file"),(0,l.kt)("h6",{id:"structure-cppal"},"Structure CPPAL"),(0,l.kt)("p",null,"Same structure as above except with 2 less columns and Substation mRIDs rather than transformer names as a key."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csv"},"Station,CT_Ratio,VT_Ratio,Set_Point,Bandwidth,Resistance,Reactance,CT_Primary,Time_Delay\n<SUBSTATION_MRID>,<float>,<float>,<float>,<float>,<float>,<float>,<float>,<float>\n")),(0,l.kt)("h6",{id:"sample-content-cppal"},"Sample content CPPAL:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csv"},"Station,CT_Ratio,VT_Ratio,Set_Point,Bandwidth,Resistance,Reactance,CT_Primary,Time_Delay\nAC,300,100,112.2,10,0,0,1500,100\nAL,300,100,111.1,1.2,4.4,4.4,1500,100\nAP,300,100,113.9,1.1,,,1500,100\nAR,300,100,112.2,1.1,2.2,3.1,1500,100\nART,100,200,110,2,4.8,3.6,600,100\n")),(0,l.kt)("h6",{id:"structure-ee"},"Structure EE"),(0,l.kt)("p",null,"Same structure as above except with 2 less columns and Substation mRIDs rather than transformer names as a key."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csv"},"PREFIX,VO,LDC_PERCENT,IREF,LDC_BLOCKING,PF\n<Substation mRID>,<float>,<float>,<float>,<N | Y>,<float>\n")),(0,l.kt)("h6",{id:"sample-content-ee"},"Sample content EE:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csv"},"PREFIX,VO,LDC_PERCENT,IREF,LDC_BLOCKING,PF\nARD,11.5,,,,0.9\nASM,11,0.02,1574,N,0.9\nATA,11.2,,,,0.9\nAVE,11.033,0.0604,296,N,0.9\nBAL,11.033,0.0423,778,N,0.9\n")),(0,l.kt)("h5",{id:"source-impedance-file"},"Source Impedance file"),(0,l.kt)("h6",{id:"structure-cppal-1"},"Structure CPPAL"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csv"},"Bus,TS,Name,kV,3PH.kA,LG.kA,LL.kA,thev.r1,thev.x1,thev.r0,thev.x0,Limit,Column1\n<Bus ID (unused): string>,<Substation names (unused): string>,<Substation mRID (whitespace) Voltage>,<integer>,<float>,<float>,<float>,<float>,<float>,<float>,<float>,<float (unused)>,<string (unused)>\n")),(0,l.kt)("h6",{id:"sample-content-cppal-1"},"Sample Content CPPAL:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csv"},"Bus,TS,Name,kV,3PH.kA,LG.kA,LL.kA,thev.r1,thev.x1,thev.r0,thev.x0,Limit,Column1\n38015,ATS-BLTS,AC 11,11,19,20.4,16.4,0.02,0.342,0.008,0.269,18.4,VEDC\n36015,ATS-BLTS,AC 66,66,15.3,12.5,13.3,0.286,2.641,0.436,4.282,21.9,VEDC\n38017,ATS-BLTS,AL 11,11,7.6,9.1,6.5,0.021,0.908,0.012,0.416,18.4,VEDC\n36017,ATS-BLTS,AL 66,66,14.8,11.4,12.8,0.322,2.732,0.559,4.95,21.9,VEDC\n38221,FBTS,AP   11,11,15.7,15.7,13.6,0.018,0.451,0.014,0.423,18.4,VEDC\n36221,FBTS,AP   66,66,15.9,11.2,13.8,0.237,2.539,0.483,5.415,21.9,VEDC\n")),(0,l.kt)("h6",{id:"structure-ee-1"},"Structure EE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csv"},"Substation,FaultedBus,Bus,BasekV,SLG_A,TPh_A,Rpos,Xpos,Rneg,Xneg,Rzero,Xzero,RevDate,EditedBy,Comment\n<Substation mRID (whitespace) Substation name: string>,<(unused) string>,<(unused) string>,<(unused) string>,<(unused) float>,<(unused) float>,<float>,<float>,<float>,<float>,<float>,<float>,<float>,<(unused) string>,<(unused) string>\n")),(0,l.kt)("h6",{id:"sample-content-ee-1"},"Sample Content EE:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csv"},"Substation,FaultedBus,Bus,BasekV,SLG_A,TPh_A,Rpos,Xpos,Rneg,Xneg,Rzero,Xzero,RevDate,EditedBy,Comment\nADA ADAMINABY,6746,ADA033A,33.0,1040.0,885.7,5.34531,20.8363,5.34467,20.8384,1.10689,12.0062,6/06/2018,,some comment\nADA ADAMINABY,6732,ADA011A,11.0,3524.3,3014.4,0.49526,2.04778,0.49522,2.04786,0.05294,1.20884,4/10/2016,,another comment\nADE ADELONG,11465,ADE011A,11.0,2253.0,2153.6,0.36771,2.92594,0.36761,2.9272,0.15179,2.55666,7/04/2011,,S.East Rpt: TFR 1 upgraded to 3MVA\nAFD ASHFORD,11784,AFD022A,22.0,923.7,878.1,1.849585,14.346209,1.858122,14.357422,0.858186,12.295956,21/09/2010,,Original Issue\n")),(0,l.kt)("h5",{id:"span-ratings-file"},"Span Ratings file"),(0,l.kt)("h6",{id:"structure-4"},"Structure"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csv"},"GIS_Segment_ID,Span_ID,Feeder_ID,Span Voltage,Conductor Type,Neara_T,Neara_I\n<unused string>,<string>,<unused string>,<unused string>,<unused string>,<int>,<float>\n")),(0,l.kt)("h6",{id:"sample-content-8"},"Sample Content"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csv"},"GIS_Segment_ID,Span_ID,Feeder_ID,Span Voltage,Conductor Type,Neara_T,Neara_I\n2236668,5364487,FDR12,11kV,STEEL 3/2.75,50,22.19\n2236668,5364486,FDR12,11kV,STEEL 3/2.75,50,22.19\n7651645,6301790,FDR12,11kV,STEEL 7/16 (7/0.064),50,19.68\n388296,5134033,FDR12,11kV,GOPHER 6/1/2.36,67,121.4\n388296,5134032,FDR12,11kV,GOPHER 6/1/2.36,50,70.86\n")),(0,l.kt)("h5",{id:"tap-settings-file"},"Tap Settings file"),(0,l.kt)("h6",{id:"structure-cppal-2"},"Structure CPPAL"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csv"},"ID,Tx Nominal Tap No.,Tap Position,Highest Tap Step (Max Boost),Lowest Tap Step (Max Buck),Control Enabled,RatioTapChanger.stepVoltageIncrement\n<integer>,<integer>,<integer>,<integer>,<integer>,<boolean>,<double -1..1>\n")),(0,l.kt)("h6",{id:"sample-content-cppal-2"},"Sample Content CPPAL:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csv"},"ID,Tx Nominal Tap No.,Tap Position,Highest Tap Step (Max Boost),Lowest Tap Step (Max Buck),Control Enabled,RatioTapChanger.stepVoltageIncrement\n19981169,4,1,8,1,FALSE,0.025\n#N/A,4,2,8,1,FALSE,0.025\n20320900,4,2,8,1,FALSE,0.025\n94723101,4,3,8,1,FALSE,0.025\n")),(0,l.kt)("h6",{id:"structure-ee-2"},"Structure EE"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csv"},"tx_asset_id,tx_label,sub_asset_id,sub_label,tx_kva,tx_phases,tx_primary_voltage,sub_tap_voltage,opendss_hv_tap,tx_impedance,tap_increment_0225,tap_setting_delta_from_nominal,tx_max_buck_tap_num,tx_max_boost_tap_num,tx_nominal_tap_num,calculated_tap_position,tap_position,tap_range,highest_tap_step_max_boost,lowest_tap_step_max_buck,control_enabled\n<(unused) integer>,<(unused) string>,<(unused) integer>,<string>,<(unused) integer>,<(unused) integer>,<(unused) integer>,<(unused) integer>,<(unused) integer>,<(unused) integer>,<(unused) integer>,<(unused) integer>,<(unused) integer>,<(unused) integer>,<integer>,<(unused) integer>,<integer>,<(unused) integer>,<integer>,<integer>,<boolean>>\n")),(0,l.kt)("h6",{id:"sample-content-ee-2"},"Sample Content EE:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-csv"},"tx_asset_id,tx_label,sub_asset_id,sub_label,tx_kva,tx_phases,tx_primary_voltage,sub_tap_voltage,opendss_hv_tap,tx_impedance,tap_increment_0225,tap_setting_delta_from_nominal,tx_max_buck_tap_num,tx_max_boost_tap_num,tx_nominal_tap_num,calculated_tap_position,tap_position,tap_range,highest_tap_step_max_boost,lowest_tap_step_max_buck,control_enabled\n4038170,Generic TX 32895,96767,30-61401,,,,,1,,,0,,,,,,0,,,FALSE\n107909,63M41022,96768,44956,50,HV3,11kV,11000,1,5.18,,0,1,5,3,3,3,4,5,1,FALSE\n107911,T11304,96771,45015,200,HV3,11kV,11000,1,3.5,,0,,,3,3,3,0,,1,FALSE\n7177368,TE44841,96772,45046,100,HV3,11kV,1100,1,4,,0,1,7,5,5,5,6,7,1,FALSE\n")))}c.isMDXComponent=!0},686:(e,n,t)=>{t.d(n,{Z:()=>a});const a=t.p+"assets/images/tap-settings-9e37fa7ba2c49c0f6c446579e21e7dc0.png"}}]);