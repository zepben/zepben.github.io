"use strict";(self.webpackChunkgis_network_extractor_doco=self.webpackChunkgis_network_extractor_doco||[]).push([[8199],{3905:(t,e,n)=>{n.d(e,{Zo:()=>m,kt:()=>k});var a=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function o(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},l=Object.keys(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(a=0;a<l.length;a++)n=l[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var p=a.createContext({}),d=function(t){var e=a.useContext(p),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},m=function(t){var e=d(t.components);return a.createElement(p.Provider,{value:e},t.children)},s="mdxType",u={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},c=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,l=t.originalType,p=t.parentName,m=o(t,["components","mdxType","originalType","parentName"]),s=d(n),c=r,k=s["".concat(p,".").concat(c)]||s[c]||u[c]||l;return n?a.createElement(k,i(i({ref:e},m),{},{components:n})):a.createElement(k,i({ref:e},m))}));function k(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var l=n.length,i=new Array(l);i[0]=c;var o={};for(var p in e)hasOwnProperty.call(e,p)&&(o[p]=e[p]);o.originalType=t,o[s]="string"==typeof t?t:r,i[1]=o;for(var d=2;d<l;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},6605:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>d});var a=n(7462),r=(n(7294),n(3905));const l={id:"run-app",title:"Running the Application"},i=void 0,o={unversionedId:"run-app",id:"version-2.10.0/run-app",title:"Running the Application",description:"Configuration options for the GIS Network Extractor are provided as command line arguments.",source:"@site/versioned_docs/version-2.10.0/run-app.md",sourceDirName:".",slug:"/run-app",permalink:"/evolve/docs/gis-network-extractor/2.10.0/run-app",draft:!1,tags:[],version:"2.10.0",frontMatter:{id:"run-app",title:"Running the Application"},sidebar:"version-2.10.0/sidebar",previous:{title:"Input Files",permalink:"/evolve/docs/gis-network-extractor/2.10.0/input-files"}},p={},d=[{value:"Command Line Options",id:"command-line-options",level:3},{value:"Environment Variables",id:"environment-variables",level:3},{value:"Heap Size Estimation",id:"heap-size-estimation",level:5}],m={toc:d},s="wrapper";function u(t){let{components:e,...n}=t;return(0,r.kt)(s,(0,a.Z)({},m,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Configuration options for the GIS Network Extractor are provided as command line arguments."),(0,r.kt)("h3",{id:"command-line-options"},"Command Line Options"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Usage"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-c <FILE>")),(0,r.kt)("td",{parentName:"tr",align:null},"Path to the cable types specification json file."),(0,r.kt)("td",{parentName:"tr",align:null},"./cable-types.json")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-n <FILE>")),(0,r.kt)("td",{parentName:"tr",align:null},"Path to the network hierarchy specification json file."),(0,r.kt)("td",{parentName:"tr",align:null},"./network-hierarchy.json")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-e <PATH>")),(0,r.kt)("td",{parentName:"tr",align:null},"The root path to be used for the output of the extractor (EWB network data)."),(0,r.kt)("td",{parentName:"tr",align:null},"./ewb")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-ep <true or false>")),(0,r.kt)("td",{parentName:"tr",align:null},"Controls if the phase information will be extracted from the source data. If disabled everything will be extracted as ABC."),(0,r.kt)("td",{parentName:"tr",align:null},"true")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-g <PATH>")),(0,r.kt)("td",{parentName:"tr",align:null},"Path where the input GIS JSON files are located."),(0,r.kt)("td",{parentName:"tr",align:null},"./gis")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-m <PATH>")),(0,r.kt)("td",{parentName:"tr",align:null},"The path where the input meter mappings csv files are located."),(0,r.kt)("td",{parentName:"tr",align:null},"./meter_mappings")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-pl <FILE>")),(0,r.kt)("td",{parentName:"tr",align:null},"Path to the poles data json file."),(0,r.kt)("td",{parentName:"tr",align:null},"./poles.json")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-nc <FILE>")),(0,r.kt)("td",{parentName:"tr",align:null},"Path to the nodes config json file."),(0,r.kt)("td",{parentName:"tr",align:null},"./nodes-config.json")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-lvt <NUMBER>")),(0,r.kt)("td",{parentName:"tr",align:null},"Defines the LV voltage upper limit in volts (inclusive)"),(0,r.kt)("td",{parentName:"tr",align:null},"1000")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-mmdp <PATTERN>")),(0,r.kt)("td",{parentName:"tr",align:null},"Specifies the pattern used to represent dates for the records in the meter mappings csv files."),(0,r.kt)("td",{parentName:"tr",align:null},"yyyyMMdd")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-mmfp <REGEX>")),(0,r.kt)("td",{parentName:"tr",align:null},"Specifies the file name pattern for meter mapping files."),(0,r.kt)("td",{parentName:"tr",align:null},"NMI",(0,r.kt)("em",{parentName:"td"},"TX_MAPPING"),"(\\d{8}).*","[.]","csv")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-pof <HOST> <PORT> <INSTANCE>")),(0,r.kt)("td",{parentName:"tr",align:null},"PowerOn Fusion database connection configuration (Used for CRO extraction)."),(0,r.kt)("td",{parentName:"tr",align:null},"NULL")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-dl")),(0,r.kt)("td",{parentName:"tr",align:null},"Flag to enable detailed logging of processing errors."),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-dsc")),(0,r.kt)("td",{parentName:"tr",align:null},"Flag to disable running of the conductor stitching processor."),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-p")),(0,r.kt)("td",{parentName:"tr",align:null},"Flag that controls the formatting of json outputs"),(0,r.kt)("td",{parentName:"tr",align:null},"false")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"-h")),(0,r.kt)("td",{parentName:"tr",align:null},"Flag to display help message with the available command line options"),(0,r.kt)("td",{parentName:"tr",align:null},"false")))),(0,r.kt)("h3",{id:"environment-variables"},"Environment Variables"),(0,r.kt)("p",null,"If the option for processing PowerOn Fusion is enabled, the following environment\nvariables must be set to connect to the PowerOn Fusion database."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Variable"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Default"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ENMAC_USER")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The user for the PoF Oracle database."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"enmac"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"ENMAC_PASSWORD")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The password for the PoF Oracle database."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"password"))))),(0,r.kt)("p",null,"To run the tool, execute the following command at a terminal."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"java -Xmx<heap size> -Xms<heap size> -jar <path to gis-network-extractor> -c <path to cable types file> -n <path to network hierarchy file> -g <path to gis input files directory> -e <path to output ewb data directory>  -pof <PoF Oracle host> <PoF Oracle port> <PoF Oracle instance>\n")),(0,r.kt)("p",null,"where:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"PoF databse connection environment variables have been defined. e.g. ",(0,r.kt)("strong",{parentName:"p"},"ENMAC_USER"),"=enmac; ",(0,r.kt)("strong",{parentName:"p"},"ENMAC_PASSWORD"),"=password;")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"heap size is the desired size of the heap. e.g. 16g"))),(0,r.kt)("h5",{id:"heap-size-estimation"},"Heap Size Estimation"),(0,r.kt)("p",null,"PoF system with 2.5 million components requires around ",(0,r.kt)("inlineCode",{parentName:"p"},"10GB")),(0,r.kt)("p",null,"The LV Mapping data requires around ",(0,r.kt)("inlineCode",{parentName:"p"},"2GB")),(0,r.kt)("p",null,"Together with the process overhead, the recommended heap size is ",(0,r.kt)("inlineCode",{parentName:"p"},"16GB")))}u.isMDXComponent=!0}}]);