"use strict";(self.webpackChunkgis_network_extractor_doco=self.webpackChunkgis_network_extractor_doco||[]).push([[9273],{3905:(t,e,n)=>{n.d(e,{Zo:()=>m,kt:()=>g});var a=n(7294);function l(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function r(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?r(Object(n),!0).forEach((function(e){l(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function o(t,e){if(null==t)return{};var n,a,l=function(t,e){if(null==t)return{};var n,a,l={},r=Object.keys(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||(l[n]=t[n]);return l}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(a=0;a<r.length;a++)n=r[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(l[n]=t[n])}return l}var d=a.createContext({}),p=function(t){var e=a.useContext(d),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},m=function(t){var e=p(t.components);return a.createElement(d.Provider,{value:e},t.children)},u="mdxType",k={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},s=a.forwardRef((function(t,e){var n=t.components,l=t.mdxType,r=t.originalType,d=t.parentName,m=o(t,["components","mdxType","originalType","parentName"]),u=p(n),s=l,g=u["".concat(d,".").concat(s)]||u[s]||k[s]||r;return n?a.createElement(g,i(i({ref:e},m),{},{components:n})):a.createElement(g,i({ref:e},m))}));function g(t,e){var n=arguments,l=e&&e.mdxType;if("string"==typeof t||l){var r=n.length,i=new Array(r);i[0]=s;var o={};for(var d in e)hasOwnProperty.call(e,d)&&(o[d]=e[d]);o.originalType=t,o[u]="string"==typeof t?t:l,i[1]=o;for(var p=2;p<r;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}s.displayName="MDXCreateElement"},3689:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>d,contentTitle:()=>i,default:()=>k,frontMatter:()=>r,metadata:()=>o,toc:()=>p});var a=n(7462),l=(n(7294),n(3905));const r={id:"config-file",title:"Config File"},i="Config File",o={unversionedId:"config-file",id:"version-2.20.1/config-file",title:"Config File",description:"The configuration allows specifying whether some of the processing steps will be executed, as well as allows filtering of what data will be ingested and saved",source:"@site/versioned_docs/version-2.20.1/config-file.md",sourceDirName:".",slug:"/config-file",permalink:"/evolve/docs/gis-network-extractor/2.20.1/config-file",draft:!1,tags:[],version:"2.20.1",frontMatter:{id:"config-file",title:"Config File"},sidebar:"sidebar",previous:{title:"Overview",permalink:"/evolve/docs/gis-network-extractor/2.20.1/"},next:{title:"Input Files",permalink:"/evolve/docs/gis-network-extractor/2.20.1/input-files"}},d={},p=[{value:"Sample Config File",id:"sample-config-file",level:2},{value:"Company Specific Config",id:"company-specific-config",level:2},{value:"CPPAL Conductor Types",id:"cppal-conductor-types",level:3},{value:"EE Conductor Types",id:"ee-conductor-types",level:3},{value:"UE Conductor Types",id:"ue-conductor-types",level:3},{value:"Common Config",id:"common-config",level:2},{value:"Input Config",id:"input-config",level:2},{value:"GIS Data Config",id:"gis-data-config",level:3},{value:"Filter Config",id:"filter-config",level:4},{value:"Filter Definition",id:"filter-definition",level:5},{value:"Meter File Config",id:"meter-file-config",level:3},{value:"TCS Meter Config",id:"tcs-meter-config",level:3},{value:"PowerOn Fusion Config",id:"poweron-fusion-config",level:3},{value:"Processing Config",id:"processing-config",level:2},{value:"Meter Config",id:"meter-config",level:3},{value:"Default Config",id:"default-config",level:3},{value:"Phase Config",id:"phase-config",level:3},{value:"Output Config",id:"output-config",level:2},{value:"Metrics Config",id:"metrics-config",level:3},{value:"Completion Callback Config",id:"completion-callback-config",level:3},{value:"AWS S3 Cloud Storage Config",id:"aws-s3-cloud-storage-config",level:3},{value:"Quality Config",id:"quality-config",level:3},{value:"Available Quality Checks",id:"available-quality-checks",level:4},{value:"Default Objects",id:"default-objects",level:2},{value:"Default Wire Info",id:"default-wire-info",level:3},{value:"Default Per-Length Sequence Impedance",id:"default-per-length-sequence-impedance",level:3},{value:"Default Power Transformer Info",id:"default-power-transformer-info",level:6}],m={toc:p},u="wrapper";function k(t){let{components:e,...n}=t;return(0,l.kt)(u,(0,a.Z)({},m,n,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"config-file"},"Config File"),(0,l.kt)("p",null,"The configuration allows specifying whether some of the processing steps will be executed, as well as allows filtering of what data will be ingested and saved\nto the resulting databases. If a config file is not specified or present, defaults will be as per below."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Attribute"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Data type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"company")),(0,l.kt)("td",{parentName:"tr",align:null},"Specifies company specific options."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#company-specific-config"},"Company Specific Config"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"common")),(0,l.kt)("td",{parentName:"tr",align:null},"Specifies common options."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#common-config"},"Common Config"))))),(0,l.kt)("h2",{id:"sample-config-file"},"Sample Config File"),(0,l.kt)("p",null,"You can download the ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/zepben/gis-network-extractor/blob/main/src/test/resources/default-config.json"},"sample default configuration file")," and\nmodify it to suit your installation. There is also a\n",(0,l.kt)("a",{parentName:"p",href:"https://github.com/zepben/gis-network-extractor/blob/main/src/test/resources/non-default-config.json"},"sample non-default configuration file")," which may provide\nadditional examples if you require them (e.g. PoF TCS, metrics etc.)."),(0,l.kt)("admonition",{type:"tip"},(0,l.kt)("p",{parentName:"admonition"},"The default sample has the options defined with default values, so simply remove the ones you don't want to change to reduce the size of your config."),(0,l.kt)("p",{parentName:"admonition"},"You will need to remove the unwanted ",(0,l.kt)("inlineCode",{parentName:"p"},"company")," sections to produce a valid JSON file.")),(0,l.kt)("h2",{id:"company-specific-config"},"Company Specific Config"),(0,l.kt)("p",null,"This section doubles as the definition of the company specific processing to run, and provides customisations options for these processors."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Attribute"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Data type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"id")),(0,l.kt)("td",{parentName:"tr",align:null},"The ID of the company configuration to use."),(0,l.kt)("td",{parentName:"tr",align:null},"String - ",(0,l.kt)("inlineCode",{parentName:"td"},"CPPAL"),", ",(0,l.kt)("inlineCode",{parentName:"td"},"EE")," or ",(0,l.kt)("inlineCode",{parentName:"td"},"UE")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"CPPAL"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"conductorTypes")),(0,l.kt)("td",{parentName:"tr",align:null},"The company specific conductor type configuration."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("ul",null,(0,l.kt)("li",null,(0,l.kt)("a",{parentName:"td",href:"#cppal-conductor-types"},"CPPAL Conductor Types")),(0,l.kt)("li",null,(0,l.kt)("a",{parentName:"td",href:"#ee-conductor-types"},"EE Conductor Types")),(0,l.kt)("li",null,(0,l.kt)("a",{parentName:"td",href:"#ue-conductor-types"},"UE Conductor Types")))),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("h3",{id:"cppal-conductor-types"},"CPPAL Conductor Types"),(0,l.kt)("p",null,"Specifies CPPAL (Citipower/Powercor) specific conductor type paths."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Attribute"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Data type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"path")),(0,l.kt)("td",{parentName:"tr",align:null},"A file containing the cable types JSON or a JDBC connection string to the 'SINCAL standard types' database."),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"./cable-types.json"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"hvDefaultConductorTypes")),(0,l.kt)("td",{parentName:"tr",align:null},"Path to a CSV containing additional HV conductor types."),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"None.")))),(0,l.kt)("h3",{id:"ee-conductor-types"},"EE Conductor Types"),(0,l.kt)("p",null,"Specifies EE (Essential Energy) specific conductor type paths."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Attribute"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Data type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"path")),(0,l.kt)("td",{parentName:"tr",align:null},"Path to a 'SINCAL standard types' database."),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"./cable-types.db"))))),(0,l.kt)("h3",{id:"ue-conductor-types"},"UE Conductor Types"),(0,l.kt)("p",null,"Specifies UE (United Energy) specific conductor type paths."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Attribute"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Data type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"hvOverheadPath")),(0,l.kt)("td",{parentName:"tr",align:null},"Path to a CSV containing HV conductor types."),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"./hv-overhead-types.csv"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"hvUndergroundPath")),(0,l.kt)("td",{parentName:"tr",align:null},"Path to a CSV containing HV cable types."),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"./hv-underground-types.csv"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"lvPath")),(0,l.kt)("td",{parentName:"tr",align:null},"Path to a CSV containing additional LV conductor and cable types."),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"None.")))),(0,l.kt)("h2",{id:"common-config"},"Common Config"),(0,l.kt)("p",null,"The configuration that is common between all companies."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Attribute"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Data type"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"input")),(0,l.kt)("td",{parentName:"tr",align:null},"Customisations to the inputs of the ingestor."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#input-config"},"Input Config"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"processing")),(0,l.kt)("td",{parentName:"tr",align:null},"Configuration which controls how the ingestor processes the input data."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#processing-config"},"Processing Config"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"output")),(0,l.kt)("td",{parentName:"tr",align:null},"Customisations to the output from the ingestor."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#output-config"},"Output Config"))))),(0,l.kt)("h2",{id:"input-config"},"Input Config"),(0,l.kt)("p",null,"Customisations to the inputs of the ingestor."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Attribute"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Data type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"gisData")),(0,l.kt)("td",{parentName:"tr",align:null},"Defines what GIS data should be ingested."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#gis-data-config"},"GIS Data Config")),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"nodesConfigPath")),(0,l.kt)("td",{parentName:"tr",align:null},"The file containing the nodes JSON config."),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"nodes-config.json"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"networkHierarchyPath")),(0,l.kt)("td",{parentName:"tr",align:null},"The file containing the network hierarchy JSON."),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"network-hierarchy.json"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"derRegisterPath")),(0,l.kt)("td",{parentName:"tr",align:null},"Optional path to a file containing the DER register."),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"None.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"substationTransformerTapSettingsPath")),(0,l.kt)("td",{parentName:"tr",align:null},"Optional path to a file containing zone substation transformer tap changer settings."),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"None.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"regulatorSettingsPath")),(0,l.kt)("td",{parentName:"tr",align:null},"Optional path to a CSV file containing the zone substation regulator settings."),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"None.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"lineRegulatorSettingsPath")),(0,l.kt)("td",{parentName:"tr",align:null},"Optional path to a CSV file containing the line regulator settings."),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"None.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"sourceImpedancesPath")),(0,l.kt)("td",{parentName:"tr",align:null},"Optional path to a CSV file containing the source impedances."),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"None.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"spanRatingsPath")),(0,l.kt)("td",{parentName:"tr",align:null},"Optional path to a CSV file containing the span level ratings for AC line segments."),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"None.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"txTapsPath")),(0,l.kt)("td",{parentName:"tr",align:null},"Optional path to a CSV file containing the transformer tap settings."),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"None.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"poleDataLocation")),(0,l.kt)("td",{parentName:"tr",align:null},"Optional path to a file or database containing pole data, or a full JDBC connection string."),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"None.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"meters")),(0,l.kt)("td",{parentName:"tr",align:null},"Defines what meters should be ingested - ",(0,l.kt)("inlineCode",{parentName:"td"},"MAPPING_FILE")," or ",(0,l.kt)("inlineCode",{parentName:"td"},"TCS"),"."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("ul",null,(0,l.kt)("li",null,(0,l.kt)("a",{parentName:"td",href:"#meter-file-config"},"Meter File Config")),(0,l.kt)("li",null,(0,l.kt)("a",{parentName:"td",href:"#tcs-meter-config"},"TCS Meter Config")))),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"MAPPING_FILE"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"powerOnFusion")),(0,l.kt)("td",{parentName:"tr",align:null},"Optional configuration for pulling data from PowerOn Fusion/Advantage."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#poweron-fusion-config"},"PowerOn Fusion Config")),(0,l.kt)("td",{parentName:"tr",align:null},"None.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"onMissingNodeMappingHandler")),(0,l.kt)("td",{parentName:"tr",align:null},"Optional handler for missing node configuration mappings."),(0,l.kt)("td",{parentName:"tr",align:null},"String - ",(0,l.kt)("inlineCode",{parentName:"td"},"REPLACE_WITH_JUNCTION")," or ",(0,l.kt)("inlineCode",{parentName:"td"},"EXCEPTION")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"EXCEPTION"))))),(0,l.kt)("h3",{id:"gis-data-config"},"GIS Data Config"),(0,l.kt)("p",null,"Defines the location and inclusion rules for the GIS data to process."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Attribute"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Data type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"path")),(0,l.kt)("td",{parentName:"tr",align:null},"The path where the input GIS JSON files are located."),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"gis"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"warnOnMissingFeeder")),(0,l.kt)("td",{parentName:"tr",align:null},"Whether to log a message if the head of a feeder can not be found. When the metadata is missing from geojson most (or all) of these messages are false positives when LV is processed, so suppressing them is preferable."),(0,l.kt)("td",{parentName:"tr",align:null},"Boolean"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"filters")),(0,l.kt)("td",{parentName:"tr",align:null},"Customisations to the output from the ingestor."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#filter-config"},"Filter Config")),(0,l.kt)("td",{parentName:"tr",align:null},"None.")))),(0,l.kt)("h4",{id:"filter-config"},"Filter Config"),(0,l.kt)("p",null,"Filters allow specifying which feeders get processed and stored in the result, however there are file name requirements that must be met for filters to work\nas intended. For the most efficient handling of data, separate files should exist for HV and LV network, and they must be named accordingly in the form below:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"HV Files: <feeder_name>_mv.[geo]json or <feeder_name>.[geo]json\nLV Files: <feeder_name>_lv.[geo]json or <feeder_name>_<dist_sub_name>.[geo]json\n")),(0,l.kt)("p",null,"For HV filters, the filter is based on the feeder name, and the feeder name must be at the start of the filename."),(0,l.kt)("p",null,"An include filter will include ",(0,l.kt)("em",{parentName:"p"},"only")," feeders with filenames that ",(0,l.kt)("em",{parentName:"p"},"start with")," any of the given strings, and conversely an exclude filter will exclude any\nfeeders with filenames that ",(0,l.kt)("em",{parentName:"p"},"start with")," any of the given strings in the same way."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Attribute"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Data type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"hv")),(0,l.kt)("td",{parentName:"tr",align:null},"The filters to apply to the HV files."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#filter-definition"},"Filter Definition")),(0,l.kt)("td",{parentName:"tr",align:null},"None.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"lv")),(0,l.kt)("td",{parentName:"tr",align:null},"The filters to apply to the LV files."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#filter-definition"},"Filter Definition")),(0,l.kt)("td",{parentName:"tr",align:null},"None.")))),(0,l.kt)("h5",{id:"filter-definition"},"Filter Definition"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Attribute"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Data type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"type")),(0,l.kt)("td",{parentName:"tr",align:null},"The type of filter."),(0,l.kt)("td",{parentName:"tr",align:null},"String - ",(0,l.kt)("inlineCode",{parentName:"td"},"include")," or ",(0,l.kt)("inlineCode",{parentName:"td"},"exclude")),(0,l.kt)("td",{parentName:"tr",align:null},"None.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ids")),(0,l.kt)("td",{parentName:"tr",align:null},"The ids to filter based in the filter type."),(0,l.kt)("td",{parentName:"tr",align:null},"List","[String]"),(0,l.kt)("td",{parentName:"tr",align:null},"None.")))),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"The ids strings are not pattern matches, and no regex is supported.")),(0,l.kt)("h3",{id:"meter-file-config"},"Meter File Config"),(0,l.kt)("p",null,"A meter input type of ",(0,l.kt)("inlineCode",{parentName:"p"},"MAPPING_FILE")," indicates the meters will be read from files in a specified directory."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Attribute"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Data type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"type")),(0,l.kt)("td",{parentName:"tr",align:null},"Indicates the meters come from a mapping file."),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"MAPPING_FILE"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"path")),(0,l.kt)("td",{parentName:"tr",align:null},"The path where the input meter mappings csv files are located."),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"meter_mappings"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"filePattern")),(0,l.kt)("td",{parentName:"tr",align:null},"Specifies the file name pattern for meter mapping files ."),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"NMI_TX_MAPPING_(\\d{8}).*[.]csv"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"datePattern")),(0,l.kt)("td",{parentName:"tr",align:null},"Specifies the pattern used to represent dates for the records in the meter mappings csv files."),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"yyyyMMdd"))))),(0,l.kt)("h3",{id:"tcs-meter-config"},"TCS Meter Config"),(0,l.kt)("p",null,"A meter input type of ",(0,l.kt)("inlineCode",{parentName:"p"},"TCS")," indicates the meters will be read from the PowerOn Fusion TCS schema."),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"You must specify the ",(0,l.kt)("a",{parentName:"p",href:"#poweron-fusion-config"},"PowerOn Fusion Config")," in order to use ",(0,l.kt)("inlineCode",{parentName:"p"},"TCS")," mappings.")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Attribute"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Data type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"type")),(0,l.kt)("td",{parentName:"tr",align:null},"Indicates the meters come the PowerOn Fusion TCS schema."),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"TCS"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"customerTypeMappings")),(0,l.kt)("td",{parentName:"tr",align:null},"A mapping of TCS customer type codes (keys) to CIM ",(0,l.kt)("inlineCode",{parentName:"td"},"CustomerKind")," (values)."),(0,l.kt)("td",{parentName:"tr",align:null},"JSON Object"),(0,l.kt)("td",{parentName:"tr",align:null},"None.")))),(0,l.kt)("h3",{id:"poweron-fusion-config"},"PowerOn Fusion Config"),(0,l.kt)("p",null,"The details required to connect to a PowerOn Fusion database. When provided, additional information can be extracted including aliases, operational\nrestrictions and TCS meter mappings etc."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Attribute"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Data type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"host")),(0,l.kt)("td",{parentName:"tr",align:null},"The hostname of the PoF database server."),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"port")),(0,l.kt)("td",{parentName:"tr",align:null},"The port number of the PoF database server."),(0,l.kt)("td",{parentName:"tr",align:null},"Integer - 1..65535"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"1521"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"instance")),(0,l.kt)("td",{parentName:"tr",align:null},"The database instance to use on the server."),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"nms"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"databaseType")),(0,l.kt)("td",{parentName:"tr",align:null},"The type of database being used."),(0,l.kt)("td",{parentName:"tr",align:null},"String - ",(0,l.kt)("inlineCode",{parentName:"td"},"ORACLE")," or ",(0,l.kt)("inlineCode",{parentName:"td"},"SQL_SERVER")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ORACLE"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"sqlServerIntegratedSecurity")),(0,l.kt)("td",{parentName:"tr",align:null},"Indicates if integrated security should be used when connecting to an SQL Server instance."),(0,l.kt)("td",{parentName:"tr",align:null},"Boolean"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"enmacSchema")),(0,l.kt)("td",{parentName:"tr",align:null},"An override for the 'enmac' schema."),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"None.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"tcsSchema")),(0,l.kt)("td",{parentName:"tr",align:null},"An override for the 'tcs' schema."),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"None.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"processAliases")),(0,l.kt)("td",{parentName:"tr",align:null},"Indicates if PoF aliases should be read for each GIS ID."),(0,l.kt)("td",{parentName:"tr",align:null},"Boolean"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true"))))),(0,l.kt)("h2",{id:"processing-config"},"Processing Config"),(0,l.kt)("p",null,"Configuration which controls how the ingestor processes the input data."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Attribute"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Data type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"lvThreshold")),(0,l.kt)("td",{parentName:"tr",align:null},"Defines the LV voltage upper limit in volts (inclusive)."),(0,l.kt)("td",{parentName:"tr",align:null},"Integer"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"1000"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"includeSubtrans")),(0,l.kt)("td",{parentName:"tr",align:null},"Whether to include the Sub-transmission network in the resulting database."),(0,l.kt)("td",{parentName:"tr",align:null},"Boolean"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"includeLV")),(0,l.kt)("td",{parentName:"tr",align:null},"Whether to include LV in the processed result. Currently only works for processing when HV and LV are in separate files."),(0,l.kt)("td",{parentName:"tr",align:null},"Boolean"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"validation")),(0,l.kt)("td",{parentName:"tr",align:null},"Whether to run and log use case validation."),(0,l.kt)("td",{parentName:"tr",align:null},"Boolean"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"stitchConductors")),(0,l.kt)("td",{parentName:"tr",align:null},"Controls if the conductor stitching processor runs."),(0,l.kt)("td",{parentName:"tr",align:null},"Boolean"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"createEnergyConsumerLocations")),(0,l.kt)("td",{parentName:"tr",align:null},"Controls if locations are created for energy consumers."),(0,l.kt)("td",{parentName:"tr",align:null},"Boolean"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"createEquivalentBranchLocations")),(0,l.kt)("td",{parentName:"tr",align:null},"Controls if locations are created for equivalent branches."),(0,l.kt)("td",{parentName:"tr",align:null},"Boolean"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"meters")),(0,l.kt)("td",{parentName:"tr",align:null},"Defines meter processing options."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#meter-config"},"Meter Config")),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"defaults")),(0,l.kt)("td",{parentName:"tr",align:null},"Defines default value creation options."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#default-config"},"Default Config")),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"phases")),(0,l.kt)("td",{parentName:"tr",align:null},"Defines phase processing options."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#phase-config"},"Phase Config")),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("h3",{id:"meter-config"},"Meter Config"),(0,l.kt)("p",null,"Configuration which controls how the ingestor processes the meter input data."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Attribute"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Data type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"enabled")),(0,l.kt)("td",{parentName:"tr",align:null},"Whether to process meters or not."),(0,l.kt)("td",{parentName:"tr",align:null},"Boolean"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"includeLonelyMeters")),(0,l.kt)("td",{parentName:"tr",align:null},"Whether to create meters and consumers from the meter mappings for premises that don't have a corresponding transformer."),(0,l.kt)("td",{parentName:"tr",align:null},"Boolean"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"connectionPointIdentifier")),(0,l.kt)("td",{parentName:"tr",align:null},"Allows renaming the connection point identifier. e.g. use ",(0,l.kt)("inlineCode",{parentName:"td"},"ICP")," instead of ",(0,l.kt)("inlineCode",{parentName:"td"},"NMI"),"."),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"NMI"))))),(0,l.kt)("h3",{id:"default-config"},"Default Config"),(0,l.kt)("p",null,"Configuration which controls how the ingestor processes assigns defaults to missing input data."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Attribute"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Data type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"assignDefaults")),(0,l.kt)("td",{parentName:"tr",align:null},"Whether to assign default values for missing transformer and line data if missing."),(0,l.kt)("td",{parentName:"tr",align:null},"Boolean"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"defaultWireInfo")),(0,l.kt)("td",{parentName:"tr",align:null},"Optional ",(0,l.kt)("inlineCode",{parentName:"td"},"WireInfo")," to assign to lines missing one. Ignored if ",(0,l.kt)("inlineCode",{parentName:"td"},"assignDefaults")," is false."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#default-wire-info"},"WireInfo")),(0,l.kt)("td",{parentName:"tr",align:null},"None.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"defaultPerLengthSequenceImpedance")),(0,l.kt)("td",{parentName:"tr",align:null},"Optional ",(0,l.kt)("inlineCode",{parentName:"td"},"PerLengthSequenceImpedance")," to assign to lines missing one. Ignored if ",(0,l.kt)("inlineCode",{parentName:"td"},"assignDefaults")," is false."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#default-per-length-sequence-impedance"},"PerLengthSequenceImpedance")),(0,l.kt)("td",{parentName:"tr",align:null},"None.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"defaultPowerTransformerInfo")),(0,l.kt)("td",{parentName:"tr",align:null},"Optional ",(0,l.kt)("inlineCode",{parentName:"td"},"PowerTransformerInfo")," to assign to transformers missing one. Ignored if ",(0,l.kt)("inlineCode",{parentName:"td"},"assignDefaults")," is false."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#default-power-transformer-info"},"PowerTransformerInfo")),(0,l.kt)("td",{parentName:"tr",align:null},"None.")))),(0,l.kt)("h3",{id:"phase-config"},"Phase Config"),(0,l.kt)("p",null,"Configuration which controls how the ingestor processes phases in the input data."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Attribute"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Data type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"extractPhases")),(0,l.kt)("td",{parentName:"tr",align:null},"Controls if the phase information will be extracted from the source data. If disabled everything will be extracted as ",(0,l.kt)("inlineCode",{parentName:"td"},"ABC"),"."),(0,l.kt)("td",{parentName:"tr",align:null},"Boolean"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"trustLv1Phases")),(0,l.kt)("td",{parentName:"tr",align:null},"Indicates that the LV1 phases (AN, BN and CN) can be trusted. If not trusted, they will be replaced with XN."),(0,l.kt)("td",{parentName:"tr",align:null},"Boolean"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"forceThreePhaseLv")),(0,l.kt)("td",{parentName:"tr",align:null},"Force the LV network below a 3-phase transformer to ignore the phasing of the backbone and replace it with 3-phase."),(0,l.kt)("td",{parentName:"tr",align:null},"Boolean"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"applyPhaseConsistency")),(0,l.kt)("td",{parentName:"tr",align:null},"Indicates if phase consistency processing should be run."),(0,l.kt)("td",{parentName:"tr",align:null},"Boolean"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"phaseDebugNames")),(0,l.kt)("td",{parentName:"tr",align:null},"Indicates if they phase information should be added to the conductor names before and after the phase consistency processing is run. This information can be very useful for debugging phase issues."),(0,l.kt)("td",{parentName:"tr",align:null},"Boolean"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"phaseConsistencyDebugIds")),(0,l.kt)("td",{parentName:"tr",align:null},"List of ID's to log the phases of during phase consistency processing for debug purposes."),(0,l.kt)("td",{parentName:"tr",align:null},"List","[String]"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"[]"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"defaultPhaseOption")),(0,l.kt)("td",{parentName:"tr",align:null},"Controls how phases are added to equipment with unknown phases."),(0,l.kt)("td",{parentName:"tr",align:null},"String - ",(0,l.kt)("inlineCode",{parentName:"td"},"THREE_PHASE")," or ",(0,l.kt)("inlineCode",{parentName:"td"},"SPREAD")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"THREE_PHASE"))))),(0,l.kt)("h2",{id:"output-config"},"Output Config"),(0,l.kt)("p",null,"Customisations to the output from the ingestor."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Attribute"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Data type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ewbDataPath")),(0,l.kt)("td",{parentName:"tr",align:null},"The root path for the EWB data."),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ewb"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"detailedLog")),(0,l.kt)("td",{parentName:"tr",align:null},"Controls if a detailed set of errors are logged, or just the summary."),(0,l.kt)("td",{parentName:"tr",align:null},"Boolean"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"saveOnException")),(0,l.kt)("td",{parentName:"tr",align:null},"Indicates that unexpected exceptions should be trapped and the database should still be saved, even though it may be in a broken state. If this is enabled, the migrator will exit with a ",(0,l.kt)("inlineCode",{parentName:"td"},"FAILED_TO_PROCESS")," code on exceptions."),(0,l.kt)("td",{parentName:"tr",align:null},"Boolean"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"false"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"metrics")),(0,l.kt)("td",{parentName:"tr",align:null},"Optional configuration to generate metrics about ingestion runs."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#metrics-config"},"Metrics Config")),(0,l.kt)("td",{parentName:"tr",align:null},"None.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"completionCallback")),(0,l.kt)("td",{parentName:"tr",align:null},"Optional completion callback configuration."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#completion-callback-config"},"Completion Callback Config")),(0,l.kt)("td",{parentName:"tr",align:null},"None.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"cloudUploader")),(0,l.kt)("td",{parentName:"tr",align:null},"Optional cloud upload configuration. If provided, the ingestor will upload the generated EWB database to the cloud location."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#aws-s3-cloud-storage-config"},"AWS S3 Cloud Storage Config")),(0,l.kt)("td",{parentName:"tr",align:null},"None.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"quality")),(0,l.kt)("td",{parentName:"tr",align:null},"Configuration to control what, if any, quality checks are run."),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#quality-config"},"Quality Config")),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("h3",{id:"metrics-config"},"Metrics Config"),(0,l.kt)("p",null,"Optional configuration for writing metrics to a PostgresSQL database."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Attribute"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Data type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"host")),(0,l.kt)("td",{parentName:"tr",align:null},"The hostname of the metrics database."),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"port")),(0,l.kt)("td",{parentName:"tr",align:null},"The port number of the metrics database."),(0,l.kt)("td",{parentName:"tr",align:null},"Integer - 1..65535"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"5432"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"database")),(0,l.kt)("td",{parentName:"tr",align:null},"The name of the database on the Postgres host containing the metrics schema."),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"metrics"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"urlOptions")),(0,l.kt)("td",{parentName:"tr",align:null},"Additional options to attach to the Postgres JDBC URL, including the ",(0,l.kt)("inlineCode",{parentName:"td"},"?")," separator. This may include things such as the user"),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"None.")))),(0,l.kt)("h3",{id:"completion-callback-config"},"Completion Callback Config"),(0,l.kt)("p",null,"Configuration for an optional callback to make with the execution status when the ingestion is complete."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Attribute"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Data type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"url")),(0,l.kt)("td",{parentName:"tr",align:null},"The full URL to send the callback response to, including any parameters e.g. callback tokens etc."),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"verifyCertificates")),(0,l.kt)("td",{parentName:"tr",align:null},"Indicates if the certificate of the callback URL should be validated."),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true"))))),(0,l.kt)("h3",{id:"aws-s3-cloud-storage-config"},"AWS S3 Cloud Storage Config"),(0,l.kt)("p",null,"To configure the ingestor to upload the generated EWB database to AWS S3 storage, set the ",(0,l.kt)("inlineCode",{parentName:"p"},"cloudUploader")," provider to ",(0,l.kt)("inlineCode",{parentName:"p"},"S3")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Attribute"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Data type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"provider")),(0,l.kt)("td",{parentName:"tr",align:null},"The provider of the cloud storage to upload into."),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"S3"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"region")),(0,l.kt)("td",{parentName:"tr",align:null},"Optional override of the default region. If not provided, the region configured by the AWS SDK will be used."),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},"None.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"bucketName")),(0,l.kt)("td",{parentName:"tr",align:null},"The name of the S3 bucket."),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("h3",{id:"quality-config"},"Quality Config"),(0,l.kt)("p",null,"Configuration for controlling the quality checks and outputs of the ingestor."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Attribute"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:null},"Data type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"enabled")),(0,l.kt)("td",{parentName:"tr",align:null},"Whether to process quality or not."),(0,l.kt)("td",{parentName:"tr",align:null},"Boolean"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"true"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"path")),(0,l.kt)("td",{parentName:"tr",align:null},"Controls the output directory of the quality checks."),(0,l.kt)("td",{parentName:"tr",align:null},"String"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"quality"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"checks")),(0,l.kt)("td",{parentName:"tr",align:null},"Controls which quality checks are run. Comma separated list of valid quality checks."),(0,l.kt)("td",{parentName:"tr",align:null},"List[",(0,l.kt)("a",{parentName:"td",href:"#available-quality-checks"},"Available Quality Checks"),"]"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'["ALL"]'))))),(0,l.kt)("h4",{id:"available-quality-checks"},"Available Quality Checks"),(0,l.kt)("p",null,"The different checks that are available. If you include ",(0,l.kt)("inlineCode",{parentName:"p"},"ALL"),", everything else will be ignored and all checks will be run. Similarly, if you include ",(0,l.kt)("inlineCode",{parentName:"p"},"NONE")," with\nany other check it will be ignored."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Attribute"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"NONE")),(0,l.kt)("td",{parentName:"tr",align:null},"Don't run any checks.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"ALL")),(0,l.kt)("td",{parentName:"tr",align:null},"Run all checks.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"PHASES")),(0,l.kt)("td",{parentName:"tr",align:null},"Run phase checks.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"CUSTOMERS")),(0,l.kt)("td",{parentName:"tr",align:null},"Run customer validation checks.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"LOOPS")),(0,l.kt)("td",{parentName:"tr",align:null},"Run loop detection checks.")))),(0,l.kt)("h2",{id:"default-objects"},"Default Objects"),(0,l.kt)("p",null,"The values for the default instances are object representations of the objects defined in the\n",(0,l.kt)("a",{parentName:"p",href:"https://zepben.github.io/evolve/docs/cim/ewb/"},"Zepben CIM profile")," (see CIM documentation for field definitions)."),(0,l.kt)("h3",{id:"default-wire-info"},"Default Wire Info"),(0,l.kt)("p",null,"An instance of a ",(0,l.kt)("a",{parentName:"p",href:"https://zepben.github.io/evolve/docs/cim/ewb/IEC61968/AssetInfo/WireInfo"},"WireInfo"),". The value of ",(0,l.kt)("inlineCode",{parentName:"p"},"isOverhead")," will be used to create the\nappropriate subtype (",(0,l.kt)("inlineCode",{parentName:"p"},"OverheadWireInfo")," or ",(0,l.kt)("inlineCode",{parentName:"p"},"CableInfo"),"). All missing fields default to ",(0,l.kt)("inlineCode",{parentName:"p"},"null"),"."),(0,l.kt)("p",null,"Sample:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "defaultWireInfo": {\n    "isOverhead": true,\n    "ratedCurrent": 3,\n    "material": "copperCadmium"\n  }\n}\n')),(0,l.kt)("h3",{id:"default-per-length-sequence-impedance"},"Default Per-Length Sequence Impedance"),(0,l.kt)("p",null,"An instance of a ",(0,l.kt)("a",{parentName:"p",href:"https://zepben.github.io/evolve/docs/cim/ewb/IEC61970/Base/Wires/PerLengthSequenceImpedance"},"PerLengthSequenceImpedance"),". All missing fields\ndefault to ",(0,l.kt)("inlineCode",{parentName:"p"},"null"),"."),(0,l.kt)("p",null,"Sample:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "defaultPerLengthSequenceImpedance": {\n    "r": 0.0025,\n    "x": 0.003,\n    "r0": 0.0025,\n    "x0": 0.003\n  }\n}\n')),(0,l.kt)("h6",{id:"default-power-transformer-info"},"Default Power Transformer Info"),(0,l.kt)("p",null,"An instance of a ",(0,l.kt)("a",{parentName:"p",href:"https://zepben.github.io/evolve/docs/cim/ewb/IEC61968/AssetInfo/PowerTransformerInfo"},"PowerTransformerInfo"),". This includes nested copies of\nany associations. All missing fields default to ",(0,l.kt)("inlineCode",{parentName:"p"},"null"),"."),(0,l.kt)("p",null,"Sample:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "defaultPowerTransformerInfo": {\n    "transformerTankInfos": [\n      {\n        "transformerEndInfos": [\n          {\n            "connectionKind": "D",\n            "emergencyS": 1,\n            "endNumber": 1,\n            "insulationU": 3,\n            "r": 4.4,\n            "ratedS": 5,\n            "ratedU": 6,\n            "shortTermS": 7,\n            "transformerStarImpedance": {\n              "r": 1.1,\n              "r0": 2.2,\n              "x": 3.3,\n              "x0": 4.4\n            },\n            "energisedEndNoLoadTests": {\n              "energisedEndVoltage": 1,\n              "excitingCurrent": 2.2,\n              "excitingCurrentZero": 3.3,\n              "loss": 4,\n              "lossZero": 5\n            },\n            "energisedEndShortCircuitTests": {\n              "current": 1.1,\n              "energisedEndStep": 2,\n              "groundedEndStep": 3,\n              "leakageImpedance": 4.4,\n              "leakageImpedanceZero": 5.5,\n              "loss": 6,\n              "lossZero": 7,\n              "power": 8,\n              "voltage": 9.9,\n              "voltageOhmicPart": 10.10\n            }\n          },\n          {\n            "connectionKind": "Y",\n            "emergencyS": 1,\n            "endNumber": 2,\n            "insulationU": 3,\n            "phaseAngleClock": 30,\n            "r": 4.4,\n            "ratedS": 5,\n            "ratedU": 6,\n            "shortTermS": 7\n          }\n        ]\n      }\n    ]\n  }\n}\n')))}k.isMDXComponent=!0}}]);