"use strict";(self.webpackChunkopendss_model_processor_doco=self.webpackChunkopendss_model_processor_doco||[]).push([[307],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return k}});var a=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=a.createContext({}),d=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},p=function(e){var n=d(e.components);return a.createElement(s.Provider,{value:n},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},c=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,l=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),m=d(t),c=i,k=m["".concat(s,".").concat(c)]||m[c]||u[c]||l;return t?a.createElement(k,r(r({ref:n},p),{},{components:t})):a.createElement(k,r({ref:n},p))}));function k(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var l=t.length,r=new Array(l);r[0]=c;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o[m]="string"==typeof e?e:i,r[1]=o;for(var d=2;d<l;d++)r[d]=t[d];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}c.displayName="MDXCreateElement"},9053:function(e,n,t){t.r(n),t.d(n,{contentTitle:function(){return s},default:function(){return c},frontMatter:function(){return o},metadata:function(){return d},toc:function(){return p}});var a=t(7462),i=t(3366),l=(t(7294),t(3905)),r=["components"],o={},s=void 0,d={type:"mdx",permalink:"/ewb/docs/opendss-model-processor/release-notes",source:"@site/src/pages/release-notes.md",description:"Release History",frontMatter:{}},p=[{value:"Release History",id:"release-history",level:4},{value:"Breaking Changes",id:"breaking-changes",level:3},{value:"New Features",id:"new-features",level:3},{value:"Enhancements",id:"enhancements",level:3},{value:"Fixes",id:"fixes",level:3},{value:"Notes",id:"notes",level:3},{value:"Breaking Changes",id:"breaking-changes-1",level:3},{value:"New Features",id:"new-features-1",level:3},{value:"Enhancements",id:"enhancements-1",level:3},{value:"Fixes",id:"fixes-1",level:3},{value:"Notes",id:"notes-1",level:3},{value:"Breaking Changes",id:"breaking-changes-2",level:3},{value:"New Features",id:"new-features-2",level:3},{value:"Enhancements",id:"enhancements-2",level:3},{value:"Fixes",id:"fixes-2",level:3},{value:"Notes",id:"notes-2",level:3}],m={toc:p},u="wrapper";function c(e){var n=e.components,t=(0,i.Z)(e,r);return(0,l.kt)(u,(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h4",{id:"release-history"},"Release History"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Version"),(0,l.kt)("th",{parentName:"tr",align:null},"Released"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#070"},"0.7.0")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"02 October 2025"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#v060"},"0.6.0")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"08 August 2025"))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"#v050"},"0.5.0")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"30 July 2025"))))),(0,l.kt)("hr",null),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"breaking-changes"},"Breaking Changes"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Support new PQV schema. This requires latest hosting capacity service to be deployed.")),(0,l.kt)("h3",{id:"new-features"},"New Features"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Added ",(0,l.kt)("inlineCode",{parentName:"li"},"ctPrimScalingFactor")," to ",(0,l.kt)("inlineCode",{parentName:"li"},"ModelConfig")," to allow CTPrim calculation when creating zone sub transformers when proxy load is not in use.")),(0,l.kt)("h3",{id:"enhancements"},"Enhancements"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Changed ",(0,l.kt)("inlineCode",{parentName:"li"},"fetchLoadTime")," variable in both ",(0,l.kt)("inlineCode",{parentName:"li"},"LoadTime")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"LocalLoadTime")," to ",(0,l.kt)("inlineCode",{parentName:"li"},"loadTime")," for naming consistency and ease of use."),(0,l.kt)("li",{parentName:"ul"},"Add support for load profile set up with ",(0,l.kt)("inlineCode",{parentName:"li"},"FixedTimeLoadOverride")," instead of only supporting a single value for each variable."),(0,l.kt)("li",{parentName:"ul"},"Update load fetcher to work with the new schema update."),(0,l.kt)("li",{parentName:"ul"},"Separate load and generator vMinPu and vMaxPu configuration so generator no longer uses value from load settings. New variables are as follows:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"loadVMinPu")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"loadVMaxPu")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"genVMinPu")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"genVMaxPu"))))),(0,l.kt)("h3",{id:"fixes"},"Fixes"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"None.")),(0,l.kt)("h3",{id:"notes"},"Notes"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"None.\\n\\n---\\n")),(0,l.kt)("h3",{id:"breaking-changes-1"},"Breaking Changes"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"None.")),(0,l.kt)("h3",{id:"new-features-1"},"New Features"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"None.")),(0,l.kt)("h3",{id:"enhancements-1"},"Enhancements"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"None.")),(0,l.kt)("h3",{id:"fixes-1"},"Fixes"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"None.")),(0,l.kt)("h3",{id:"notes-1"},"Notes"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"None.\\n\\n---\\n")),(0,l.kt)("h3",{id:"breaking-changes-2"},"Breaking Changes"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Updated to use new zepben commons library ",(0,l.kt)("inlineCode",{parentName:"li"},"com.zepben.commons"),". This should not be breaking on output, but is high risk so act like it is."),(0,l.kt)("li",{parentName:"ul"},"Removed factory function ",(0,l.kt)("inlineCode",{parentName:"li"},"suspend (Feeder, Double) -> LoadScalingFactor?")," from type alias ",(0,l.kt)("inlineCode",{parentName:"li"},"CimTranslatorCreator"),", since load scaling factors are now inferred\nfrom the CIM model after applying a scenario, via the ",(0,l.kt)("inlineCode",{parentName:"li"},"ratedPower")," on ",(0,l.kt)("inlineCode",{parentName:"li"},"UsagePoint"),"s. This affects ",(0,l.kt)("inlineCode",{parentName:"li"},"createCimToOpenDss: CimTranslatorCreator")," in\n",(0,l.kt)("inlineCode",{parentName:"li"},"ExplicitProcessor")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"ExplicitStorageBackendProcessor"),".")),(0,l.kt)("h3",{id:"new-features-2"},"New Features"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Added support for node level results. Configured via adding a ",(0,l.kt)("inlineCode",{parentName:"li"},"NodeLevelResults")," object to the ",(0,l.kt)("inlineCode",{parentName:"li"},"nodeLevelResults")," field of ",(0,l.kt)("inlineCode",{parentName:"li"},"GeneratorConfig"),"."),(0,l.kt)("li",{parentName:"ul"},"Added support for controlling the simplification of the CIM model prior to OpenDSS model generation. The new Boolean fields (all ",(0,l.kt)("inlineCode",{parentName:"li"},"true")," by default) in ",(0,l.kt)("inlineCode",{parentName:"li"},"ModelConfig")," are:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"simplifyNetwork")," - Setting to ",(0,l.kt)("inlineCode",{parentName:"li"},"false")," completely disables network simplification."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"collapseNegligibleImpedances")," - Setting to ",(0,l.kt)("inlineCode",{parentName:"li"},"false")," stops conductors of negligible impedance being removed."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"combineCommonImpedances")," - Setting to ",(0,l.kt)("inlineCode",{parentName:"li"},"false")," stops connected conductors with the same impedance from being combined into a single conductor.\nNote: Without these network simplification operations enabled the final OpenDSS model may have extremely degraded performance or may not converge."))),(0,l.kt)("li",{parentName:"ul"},"The ",(0,l.kt)("inlineCode",{parentName:"li"},"Processor")," now adjusts the simplified network in ",(0,l.kt)("inlineCode",{parentName:"li"},"processScenario")," to prepare it for the TimescaleDB-backed profile service in EWB:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Adds virtual ",(0,l.kt)("inlineCode",{parentName:"li"},"UsagePoint")," to each PEU added in the scenario"),(0,l.kt)("li",{parentName:"ul"},"Adjusts ",(0,l.kt)("inlineCode",{parentName:"li"},"ratedPower")," of usage points to correspond to percentage scaling applied to the profile backing each one:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Loadshapes for DER are normalised in the input DB, so a 12kW PV system would have a ",(0,l.kt)("inlineCode",{parentName:"li"},"ratedPower")," of 1200"),(0,l.kt)("li",{parentName:"ul"},"Profiles for CPIs are absolute, so a ",(0,l.kt)("inlineCode",{parentName:"li"},"ratedPower")," of 100 means no load scaling and 150 means 150% load scaling."))))),(0,l.kt)("li",{parentName:"ul"},"Added ",(0,l.kt)("inlineCode",{parentName:"li"},"useSpanLevelThreshold")," to ",(0,l.kt)("inlineCode",{parentName:"li"},"CommonImpedancceCollapsor")," so it can be used to make ",(0,l.kt)("inlineCode",{parentName:"li"},"AcLineSegment")," collapse base off ",(0,l.kt)("inlineCode",{parentName:"li"},"designRating")," and not ",(0,l.kt)("inlineCode",{parentName:"li"},"ratedCurrent"),"."),(0,l.kt)("li",{parentName:"ul"},"Added ",(0,l.kt)("inlineCode",{parentName:"li"},"ImpedanceNormalizer")," to ",(0,l.kt)("inlineCode",{parentName:"li"},"NetworkSimplifier")," so AcLineSegment with similar PLSI can be normalized to have same PLSI when value differences are within a threshold."),(0,l.kt)("li",{parentName:"ul"},"Added ",(0,l.kt)("inlineCode",{parentName:"li"},"ratingThreshold")," to ",(0,l.kt)("inlineCode",{parentName:"li"},"CommonImpedanceCollapsor")," so it can be used to loosen up ",(0,l.kt)("inlineCode",{parentName:"li"},"AcLineSegment")," collapse through",(0,l.kt)("inlineCode",{parentName:"li"},"designRating")," or ",(0,l.kt)("inlineCode",{parentName:"li"},"ratedCurrent"),"."),(0,l.kt)("li",{parentName:"ul"},"Added ",(0,l.kt)("inlineCode",{parentName:"li"},"emergAmpScaling")," to ",(0,l.kt)("inlineCode",{parentName:"li"},"ModelConfig")," so emergency amp rating of ",(0,l.kt)("inlineCode",{parentName:"li"},"LineCode")," can be scaled base on user input."),(0,l.kt)("li",{parentName:"ul"},"Added support for translating generation equipment in the CIM model to PvSystems controlled by InvControl's in OpenDss depending on configuration in ",(0,l.kt)("inlineCode",{parentName:"li"},"inverterControlConfig")," field of ",(0,l.kt)("inlineCode",{parentName:"li"},"ModelConfig"),".")),(0,l.kt)("h3",{id:"enhancements-2"},"Enhancements"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Added command line flag ",(0,l.kt)("inlineCode",{parentName:"li"},"--write-out-sample-list")," to enable writing out the node level result sample points to disk if ",(0,l.kt)("inlineCode",{parentName:"li"},"--output-models-path")," has also been provided."),(0,l.kt)("li",{parentName:"ul"},"Added better error logging during ",(0,l.kt)("inlineCode",{parentName:"li"},"OpenDssToCim")," processing to help with debugging process."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Processor")," now uses the ",(0,l.kt)("inlineCode",{parentName:"li"},"SyfDecoded")," DTO from ",(0,l.kt)("inlineCode",{parentName:"li"},"commons")," instead of ",(0,l.kt)("inlineCode",{parentName:"li"},"SyfJob"),", which serves the same function."),(0,l.kt)("li",{parentName:"ul"},"Added command line flag ",(0,l.kt)("inlineCode",{parentName:"li"},"--forecast-equipment-commission-month-day")," to allow configuring the day of the year that will be used as the ",(0,l.kt)("inlineCode",{parentName:"li"},"commissionDate")," for equipment added during forecast scenario generation."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"PqvLoadFetcher")," now has the ability to fall back on to ",(0,l.kt)("inlineCode",{parentName:"li"},"FixedTimeLoadFetcher")," during a calibration work package if no data was retrieved from the PQV table.")),(0,l.kt)("h3",{id:"fixes-2"},"Fixes"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Number of step of a fixed time model will now check the number of entry of the largest load profile in the model and use that as the step number."),(0,l.kt)("li",{parentName:"ul"},"Fix issue where ",(0,l.kt)("inlineCode",{parentName:"li"},"ctPrimScalingFactor")," was used even when unset resulting in incorrectly configured OpenDSS models"),(0,l.kt)("li",{parentName:"ul"},"Only create a virtual usage point once for each PowerElectronicsUnit when applying a scenario"),(0,l.kt)("li",{parentName:"ul"},"The ",(0,l.kt)("inlineCode",{parentName:"li"},"aggregateUsagePoints")," function in ",(0,l.kt)("inlineCode",{parentName:"li"},"LoadUtils")," now correctly aggregates ",(0,l.kt)("inlineCode",{parentName:"li"},"UsagePoint")," loads."),(0,l.kt)("li",{parentName:"ul"},"Fixed issue with conditions that determine if an isolation transformer should map to a REFCL transformer in the CIM to OpenDSS translation."),(0,l.kt)("li",{parentName:"ul"},"Fixed load aggregation for energy consumers with multiple usage points.")),(0,l.kt)("h3",{id:"notes-2"},"Notes"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Updated to ",(0,l.kt)("inlineCode",{parentName:"li"},"com.zepben.commons")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"com.zepben.ewb")," v1.1.0"),(0,l.kt)("li",{parentName:"ul"},"Updated to use EWB schema 63.\\n\\n---\\n")))}c.isMDXComponent=!0}}]);