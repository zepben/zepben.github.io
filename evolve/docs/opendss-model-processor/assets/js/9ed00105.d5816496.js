"use strict";(self.webpackChunkopendss_model_processor_doco=self.webpackChunkopendss_model_processor_doco||[]).push([[4],{3905:function(t,e,n){n.d(e,{Zo:function(){return p},kt:function(){return g}});var r=n(7294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function l(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},o=Object.keys(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var d=r.createContext({}),s=function(t){var e=r.useContext(d),n=e;return t&&(n="function"==typeof t?t(e):l(l({},e),t)),n},p=function(t){var e=s(t.components);return r.createElement(d.Provider,{value:e},t.children)},u="mdxType",m={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},c=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,o=t.originalType,d=t.parentName,p=i(t,["components","mdxType","originalType","parentName"]),u=s(n),c=a,g=u["".concat(d,".").concat(c)]||u[c]||m[c]||o;return n?r.createElement(g,l(l({ref:e},p),{},{components:n})):r.createElement(g,l({ref:e},p))}));function g(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var o=n.length,l=new Array(o);l[0]=c;var i={};for(var d in e)hasOwnProperty.call(e,d)&&(i[d]=e[d]);i.originalType=t,i[u]="string"==typeof t?t:a,l[1]=i;for(var s=2;s<o;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},9733:function(t,e,n){n.r(e),n.d(e,{assets:function(){return p},contentTitle:function(){return d},default:function(){return g},frontMatter:function(){return i},metadata:function(){return s},toc:function(){return u}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),l=["components"],i={id:"configuration",title:"Configuration"},d=void 0,s={unversionedId:"configuration",id:"configuration",title:"Configuration",description:"The opendss model processor takes is configuration using both CLI flags and a configuration JSON file. Help for the CLI flags can be found using the help",source:"@site/docs/configuration.md",sourceDirName:".",slug:"/configuration",permalink:"/ewb/docs/opendss-model-processor/configuration",draft:!1,tags:[],version:"current",frontMatter:{id:"configuration",title:"Configuration"},sidebar:"sidebar",previous:{title:"Overview",permalink:"/ewb/docs/opendss-model-processor/"},next:{title:"Network Fixer",permalink:"/ewb/docs/opendss-model-processor/network-fixer"}},p={},u=[],m={toc:u},c="wrapper";function g(t){var e=t.components,n=(0,a.Z)(t,l);return(0,o.kt)(c,(0,r.Z)({},m,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The opendss model processor takes is configuration using both CLI flags and a configuration JSON file. Help for the CLI flags can be found using the ",(0,o.kt)("inlineCode",{parentName:"p"},"help"),"\ncommnd. For the JSON configuration file, the options are listed below:"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Name"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"),(0,o.kt)("th",{parentName:"tr",align:null},"Default"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"pFactorBaseExports"),(0,o.kt)("td",{parentName:"tr",align:null},"Power factor to set for base model Generators during model translation. If null the model will use the reactive power specified in the load profiles."),(0,o.kt)("td",{parentName:"tr",align:null},"null")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"pFactorBaseImports"),(0,o.kt)("td",{parentName:"tr",align:null},"Power factor to set for base model Loads during model translation. If null the model will use the reactive power specified in the load profiles."),(0,o.kt)("td",{parentName:"tr",align:null},"null")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"pFactorForecastPv"),(0,o.kt)("td",{parentName:"tr",align:null},"Power factor to set for scenario (forecast) model Generators during model translation."),(0,o.kt)("td",{parentName:"tr",align:null},"1.0")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"fixSinglePhaseLoads"),(0,o.kt)("td",{parentName:"tr",align:null},"Whether to fix single phase loads with too much load for a single phase service line."),(0,o.kt)("td",{parentName:"tr",align:null},"true")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"maxSinglePhaseLoad"),(0,o.kt)("td",{parentName:"tr",align:null},"The maximum allowed wattage for a single phase load in watts. Above this value, three-phase will be applied upstream to the first three-phase asset."),(0,o.kt)("td",{parentName:"tr",align:null},"30000")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"fixOverloadingConsumers"),(0,o.kt)("td",{parentName:"tr",align:null},"Whether to fix consumers that have more load/generation than their transformers support."),(0,o.kt)("td",{parentName:"tr",align:null},"true")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"maxLoadTxRatio"),(0,o.kt)("td",{parentName:"tr",align:null},"The maximum allowed ratio of load to the sum of their transformers ratedS'. Loads with more than this ratio to TX will be moved to the HV side of the transformer and treated as HV customers."),(0,o.kt)("td",{parentName:"tr",align:null},"3.0")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"maxGenTxRatio"),(0,o.kt)("td",{parentName:"tr",align:null},"The maximum allowed ratio of generation to the sum of their transformers ratedS'. Generators with more than this ratio to TX will be moved to the HV side of the transformer and treated as HV customers."),(0,o.kt)("td",{parentName:"tr",align:null},"10.0")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"fixUndersizedServiceLines"),(0,o.kt)("td",{parentName:"tr",align:null},"Whether to fix service lines with too low ratings for the corresponding downstream load."),(0,o.kt)("td",{parentName:"tr",align:null},"true")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"maxLoadLineRatio"),(0,o.kt)("td",{parentName:"tr",align:null},"The maximum allowed ratio of load to its upstream conductors ratings. Lines with downstream load exceeding this ratio will be upgraded to a conductor type with higher rating and its corresponding impedances."),(0,o.kt)("td",{parentName:"tr",align:null},"1.5")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"collapseLvNetworks"),(0,o.kt)("td",{parentName:"tr",align:null},"Flag to control whether to collapse lv network"),(0,o.kt)("td",{parentName:"tr",align:null},"false")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"feederScenarioAllocationStrategy"),(0,o.kt)("td",{parentName:"tr",align:null},"Strategy for scenario ev, pv and bess allocation. Possible values are: RANDOM - allocations are done randomly for each year, ADDITIVE - allocations are preserved between years"),(0,o.kt)("td",{parentName:"tr",align:null},"RANDOM")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"includeEnergyConsumerMeterGroup"),(0,o.kt)("td",{parentName:"tr",align:null},"Flag to control whether to include calibration energy meters."),(0,o.kt)("td",{parentName:"tr",align:null},"null")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"closedLoopVRegEnabled"),(0,o.kt)("td",{parentName:"tr",align:null},"Create Model with Closed Loop Voltage Regulator."),(0,o.kt)("td",{parentName:"tr",align:null},"true")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"closedLoopVRegReplaceAll"),(0,o.kt)("td",{parentName:"tr",align:null},"Replace all existing Voltage Regulator with Closed Loop Voltage Regulator."),(0,o.kt)("td",{parentName:"tr",align:null},"true")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"closedLoopVRegSetPoint"),(0,o.kt)("td",{parentName:"tr",align:null},"Scaling factor for the base voltage to form the set point (0.0-2.0)."),(0,o.kt)("td",{parentName:"tr",align:null},"0.985")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"closedLoopVBand"),(0,o.kt)("td",{parentName:"tr",align:null},"VBand value in percentage."),(0,o.kt)("td",{parentName:"tr",align:null},"1.0")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"closedLoopTimeDelay"),(0,o.kt)("td",{parentName:"tr",align:null},"Time delay in seconds."),(0,o.kt)("td",{parentName:"tr",align:null},"100")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"closedLoopVLimit"),(0,o.kt)("td",{parentName:"tr",align:null},"Maximum voltage at regulating transformer's secondary bus."),(0,o.kt)("td",{parentName:"tr",align:null},"1.1")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},"seed"),(0,o.kt)("td",{parentName:"tr",align:null},"Optional seed (integer) to use when generating a scenario model. If no seed is provided, allocations of PV, EV, and BESS will be distributed randomly."),(0,o.kt)("td",{parentName:"tr",align:null},"null")))))}g.isMDXComponent=!0}}]);