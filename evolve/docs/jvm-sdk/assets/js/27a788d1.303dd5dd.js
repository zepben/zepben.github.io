"use strict";(self.webpackChunkevolve_sdk_jvm_doco=self.webpackChunkevolve_sdk_jvm_doco||[]).push([[858],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>v});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),s=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,u=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=s(n),d=a,v=p["".concat(u,".").concat(d)]||p[d]||m[d]||l;return n?r.createElement(v,o(o({ref:t},c),{},{components:n})):r.createElement(v,o({ref:t},c))}));function v(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=d;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i[p]="string"==typeof e?e:a,o[1]=i;for(var s=2;s<l;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>o});var r=n(7294),a=n(4334);const l={tabItem:"tabItem_Ymn6"};function o(e){let{children:t,hidden:n,className:o}=e;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(l.tabItem,o),hidden:n},t)}},4866:(e,t,n)=>{n.d(t,{Z:()=>w});var r=n(7462),a=n(7294),l=n(4334),o=n(2466),i=n(6550),u=n(1980),s=n(7392),c=n(12);function p(e){return function(e){return a.Children.map(e,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')}))}(e).map((e=>{let{props:{value:t,label:n,attributes:r,default:a}}=e;return{value:t,label:n,attributes:r,default:a}}))}function m(e){const{values:t,children:n}=e;return(0,a.useMemo)((()=>{const e=null!=t?t:p(n);return function(e){const t=(0,s.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error('Docusaurus error: Duplicate values "'+t.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[t,n])}function d(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function v(e){let{queryString:t=!1,groupId:n}=e;const r=(0,i.k6)(),l=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=n?n:null}({queryString:t,groupId:n});return[(0,u._X)(l),(0,a.useCallback)((e=>{if(!l)return;const t=new URLSearchParams(r.location.search);t.set(l,e),r.replace({...r.location,search:t.toString()})}),[l,r])]}function h(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,l=m(e),[o,i]=(0,a.useState)((()=>function(e){var t;let{defaultValue:n,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!d({value:n,tabValues:r}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+n+'" but none of its children has the corresponding value. Available values are: '+r.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return n}const a=null!=(t=r.find((e=>e.default)))?t:r[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:t,tabValues:l}))),[u,s]=v({queryString:n,groupId:r}),[p,h]=function(e){let{groupId:t}=e;const n=function(e){return e?"docusaurus.tab."+e:null}(t),[r,l]=(0,c.Nk)(n);return[r,(0,a.useCallback)((e=>{n&&l.set(e)}),[n,l])]}({groupId:r}),g=(()=>{const e=null!=u?u:p;return d({value:e,tabValues:l})?e:null})();(0,a.useLayoutEffect)((()=>{g&&i(g)}),[g]);return{selectedValue:o,selectValue:(0,a.useCallback)((e=>{if(!d({value:e,tabValues:l}))throw new Error("Can't select invalid tab value="+e);i(e),s(e),h(e)}),[s,h,l]),tabValues:l}}var g=n(2389);const k={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function y(e){let{className:t,block:n,selectedValue:i,selectValue:u,tabValues:s}=e;const c=[],{blockElementScrollPositionUntilNextRender:p}=(0,o.o5)(),m=e=>{const t=e.currentTarget,n=c.indexOf(t),r=s[n].value;r!==i&&(p(t),u(r))},d=e=>{var t;let n=null;switch(e.key){case"Enter":m(e);break;case"ArrowRight":{var r;const t=c.indexOf(e.currentTarget)+1;n=null!=(r=c[t])?r:c[0];break}case"ArrowLeft":{var a;const t=c.indexOf(e.currentTarget)-1;n=null!=(a=c[t])?a:c[c.length-1];break}}null==(t=n)||t.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":n},t)},s.map((e=>{let{value:t,label:n,attributes:o}=e;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:i===t?0:-1,"aria-selected":i===t,key:t,ref:e=>c.push(e),onKeyDown:d,onClick:m},o,{className:(0,l.Z)("tabs__item",k.tabItem,null==o?void 0:o.className,{"tabs__item--active":i===t})}),null!=n?n:t)})))}function f(e){let{lazy:t,children:n,selectedValue:r}=e;if(n=Array.isArray(n)?n:[n],t){const e=n.find((e=>e.props.value===r));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},n.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==r}))))}function b(e){const t=h(e);return a.createElement("div",{className:(0,l.Z)("tabs-container",k.tabList)},a.createElement(y,(0,r.Z)({},e,t)),a.createElement(f,(0,r.Z)({},e,t)))}function w(e){const t=(0,g.Z)();return a.createElement(b,(0,r.Z)({key:String(t)},e))}},4323:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>u,default:()=>v,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var r=n(7462),a=(n(7294),n(3905)),l=n(4866),o=n(5162);const i={id:"query-network-state-client",title:"Query Network State Client"},u=void 0,s={unversionedId:"query-network-state-client",id:"query-network-state-client",title:"Query Network State Client",description:"The QueryNetworkStateClient will allow you to interact with a server running the QueryNetworkStateService. It provides an object-oriented",source:"@site/docs/query-network-state-client.mdx",sourceDirName:".",slug:"/query-network-state-client",permalink:"/evolve/docs/jvm-sdk/next/query-network-state-client",draft:!1,tags:[],version:"current",frontMatter:{id:"query-network-state-client",title:"Query Network State Client"},sidebar:"someSidebar",previous:{title:"Ingestion Jobs and Metrics",permalink:"/evolve/docs/jvm-sdk/next/sdk-metrics"},next:{title:"Query Network State Service",permalink:"/evolve/docs/jvm-sdk/next/query-network-state-service"}},c={},p=[{value:"Creating a gRPC channel",id:"creating-a-grpc-channel",level:2},{value:"Using a gRPC channel with your client",id:"using-a-grpc-channel-with-your-client",level:2},{value:"Using your client to query the network state",id:"using-your-client-to-query-the-network-state",level:2},{value:"Querying current network state",id:"querying-current-network-state",level:3}],m={toc:p},d="wrapper";function v(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"QueryNetworkStateClient")," will allow you to interact with a server running the ",(0,a.kt)("inlineCode",{parentName:"p"},"QueryNetworkStateService"),". It provides an object-oriented\nwrapper for the gRPC library, with the ability to retrieve information about the state of the network. This is done with the following 3 steps:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Create a gRPC connection to the server."),(0,a.kt)("li",{parentName:"ol"},"Create an instance of the ",(0,a.kt)("inlineCode",{parentName:"li"},"QueryNetworkStateClient")," using your gRPC connection."),(0,a.kt)("li",{parentName:"ol"},"Use your ",(0,a.kt)("inlineCode",{parentName:"li"},"QueryNetworkStateClient")," to retrieve the state of the network.")),(0,a.kt)("h2",{id:"creating-a-grpc-channel"},"Creating a gRPC channel"),(0,a.kt)("p",null,"The channel gRPC channel can be directly from the gPRC libray, or the channel wrapped in our ",(0,a.kt)("inlineCode",{parentName:"p"},"GrpcChannel")," helper, which implements the ",(0,a.kt)("inlineCode",{parentName:"p"},"AutoClosable")," interface\nand performs shutdown operations for you. At its most basic, this can be achieved with:"),(0,a.kt)(l.Z,{groupId:"code-example",defaultValue:"java",values:[{label:"Java",value:"java"},{label:"Kotlin",value:"kotlin"}],mdxType:"Tabs"},(0,a.kt)(o.Z,{value:"java",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"import com.zepben.evolve.streaming.grpc.GrpcChannel;\nimport io.grpc.ManagedChannelBuilder;\n\nvar channel = new GrpcChannel(ManagedChannelBuilder.forAddress(host, port).usePlaintext().build());\n"))),(0,a.kt)(o.Z,{value:"kotlin",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},"import com.zepben.evolve.streaming.grpc.GrpcChannel\nimport io.grpc.ManagedChannelBuilder\n\nval channel = GrpcChannel(ManagedChannelBuilder.forAddress(host, port).usePlaintext().build())\n")))),(0,a.kt)("p",null,"For more in depth options for using a gRPC channel, see the ",(0,a.kt)("a",{parentName:"p",href:"https://grpc.io/docs/languages/"},"gRPC documentation"),", or look up a tutorial."),(0,a.kt)("h2",{id:"using-a-grpc-channel-with-your-client"},"Using a gRPC channel with your client"),(0,a.kt)("p",null,"Using your gRPC channel with the ",(0,a.kt)("inlineCode",{parentName:"p"},"QueryNetworkStateClient")," is as simple as passing it to the constructor."),(0,a.kt)(l.Z,{groupId:"code-example",defaultValue:"java",values:[{label:"Java",value:"java"},{label:"Kotlin",value:"kotlin"}],mdxType:"Tabs"},(0,a.kt)(o.Z,{value:"java",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"import com.zepben.evolve.streaming.get.QueryNetworkStateClient;\n\nvar client = new QueryNetworkStateClient(channel);\n"))),(0,a.kt)(o.Z,{value:"kotlin",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},"import com.zepben.evolve.streaming.get.QueryNetworkStateClient\n\nval client = QueryNetworkStateClient(channel)\n")))),(0,a.kt)("h2",{id:"using-your-client-to-query-the-network-state"},"Using your client to query the network state"),(0,a.kt)("p",null,"Now that you have a client, you can use it to query the state of the network on the connected server."),(0,a.kt)("h3",{id:"querying-current-network-state"},"Querying current network state"),(0,a.kt)("p",null,"The current state of the network between two date/times can be retrieved using the ",(0,a.kt)("inlineCode",{parentName:"p"},"getCurrentStates")," or the ",(0,a.kt)("inlineCode",{parentName:"p"},"getCurrentStatesStream")," function on the ",(0,a.kt)("inlineCode",{parentName:"p"},"QueryNetworkStateClient"),"."),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"For Java interoperability, prefer using the ",(0,a.kt)("inlineCode",{parentName:"p"},"getCurrentStatesStream")," function, as it returns a Stream compatible with Java's standard library.")),(0,a.kt)(l.Z,{groupId:"code-example",defaultValue:"java",values:[{label:"Java",value:"java"},{label:"Kotlin",value:"kotlin"}],mdxType:"Tabs"},(0,a.kt)(o.Z,{value:"java",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-java"},"import com.zepben.evolve.streaming.data.CurrentStateEvent;\n\nimport java.time.LocalDateTime;\nimport java.util.List;\nimport java.util.stream.Stream;\n\nStream<List<CurrentStateEvent>> response = client.getCurrentStatesStream(1, LocalDateTime.now().plusDays(-1), LocalDateTime.now());\n\nresponse.forEach(events -> {\n    // process the list of events here.\n});\n"))),(0,a.kt)(o.Z,{value:"kotlin",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},"import java.time.LocalDateTime\n\nval response = client.getCurrentStatesS(1, LocalDateTime.now().plusDays(-1), LocalDateTime.now())\n\nresponse.forEach { events ->\n    // process the list of events here.\n}\n")))))}v.isMDXComponent=!0}}]);