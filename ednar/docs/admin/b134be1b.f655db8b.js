(window.webpackJsonp=window.webpackJsonp||[]).push([[130],{204:function(e,n,r){"use strict";r.r(n),r.d(n,"frontMatter",(function(){return o})),r.d(n,"metadata",(function(){return i})),r.d(n,"toc",(function(){return c})),r.d(n,"default",(function(){return p}));var t=r(3),a=r(7),s=(r(0),r(281)),o={id:"ednar-ldap-user-sync-service",title:"EDNAR LDAP User Sync Service",slug:"/ednar-ldap-user-sync-service"},i={unversionedId:"ednar-ldap-user-sync-service",id:"ednar-ldap-user-sync-service",isDocsHomePage:!1,title:"EDNAR LDAP User Sync Service",description:"The EDNAR LDAP User Sync Service is a standalone Java application that binds to an AD using LDAP, polls user data from both the AD and EDNAR App Server, then reconciles them and maps them into a http request that is sent to EDNAR to create and/or update those users.",source:"@site/docs\\ednar-ldap-user-sync-service.md",slug:"/ednar-ldap-user-sync-service",permalink:"/ednar/docs/admin/next/ednar-ldap-user-sync-service",editUrl:"https://github.com/zepben/docs/ednar-ldap-user-sync-service.md",version:"current",sidebar:"sidebar",previous:{title:"EDNAR User Management Service",permalink:"/ednar/docs/admin/next/ednar-user-management-service"},next:{title:"Customer Details",permalink:"/ednar/docs/admin/next/api/customers"}},c=[{value:"Running the LDAP User Sync Service",id:"running-the-ldap-user-sync-service",children:[{value:"Sample Config",id:"sample-config",children:[]}]}],l={toc:c};function p(e){var n=e.components,r=Object(a.a)(e,["components"]);return Object(s.a)("wrapper",Object(t.a)({},l,r,{components:n,mdxType:"MDXLayout"}),Object(s.a)("p",null,"The EDNAR LDAP User Sync Service is a standalone Java application that binds to an AD using LDAP, polls user data from both the AD and EDNAR App Server, then reconciles them and maps them into a http request that is sent to EDNAR to create and/or update those users."),Object(s.a)("hr",null),Object(s.a)("h2",{id:"running-the-ldap-user-sync-service"},"Running the LDAP User Sync Service"),Object(s.a)("p",null,"You can use the following command to run the LDAP User Sync Service. The config file format is outlined below."),Object(s.a)("p",null,Object(s.a)("inlineCode",{parentName:"p"},"java -jar ldap-user-sync-service.jar -c <path to config.json>")),Object(s.a)("h3",{id:"sample-config"},"Sample Config"),Object(s.a)("pre",null,Object(s.a)("code",Object(t.a)({parentName:"pre"},{className:"language-json"}),'{\n    "ldapServer": {\n        "ldapHostName": "localhost",\n        "ldapPort": 1389,\n        // base DN to start searching for users\n        "baseDn": "dc=example,dc=com",\n        // DN of user to bind with\n        "bindDn": "cn=read-only-admin,dc=example,dc=com",\n        "bindPassword": "password for above bindDn"\n    },\n    "ldapMappings": {\n        "groupNamesMappings": {\n            "cn=readers,ou=users,dc=example,dc=org": "Role Name in EDNAR",\n            "ou=mathematicians,dc=example,dc=com": "Different role name in EDNAR",\n            "ou=chemists,dc=example,dc=com": "Requester",\n            "ou=scientists,dc=example,dc=com": "Admin",\n            "ou=italians,ou=scientists,dc=example,dc=com": "Super User"\n        },\n        "groupMembersAttrKey": "uniqueMember",\n        "userAttrsClaimsMappings": {\n            "username": "uid",\n            "firstName": "givenName",\n            "lastName": "sn",\n            "email": "mail",\n            "mobile": "telephoneNumber",\n            "phone": "telephoneNumber",\n            "fax": "missing",\n            "position": "position",\n            "depot": "depot",\n            "organisation": "o"\n        }\n    },\n    "ednarServer": {\n        "host": "localhost",\n        "port": 5501,\n        "protocol": "HTTP",\n        "clientId": "<EDNAR API client ID>",\n        "clientSecret": "<EDNAR API client secret>",\n        "verifyCertificate": false\n    },\n    "timeUnit": "SECONDS",\n    "retryPeriod": 35,\n    "initialDelay": 4\n}\n')),Object(s.a)("h4",{id:"sample-request-to-post-apiv0configusersbulk-endpoint-on-ednar-app-server"},"Sample Request to POST /api/v0/config/users/bulk endpoint on EDNAR App Server"),Object(s.a)("pre",null,Object(s.a)("code",Object(t.a)({parentName:"pre"},{className:"language-json"}),' {\n  "users": [\n    {\n      "username": "testUser1",\n      "isDisabled": true,\n      "firstName": "John",\n      "lastName": "Smith",\n      "email": "email@email.com",\n      "mobile": "mobile123",\n      "position": "job title goes here",\n      "roleNames": ["Requester"]\n    },\n    {\n      "username": "TestUser2",\n      "isDisabled": false,\n      "firstName": "Bob",\n      "lastName": "Brown",\n      "email": "testuser2@test.com",\n      "mobile": "mobile123543",\n      "position": "job title goes here",\n      "depotName": "Albury",\n      "roleNames": []\n    }\n  ],\n  "updateRoles": true\n}\n')),Object(s.a)("h4",{id:"sample-response"},"Sample Response"),Object(s.a)("pre",null,Object(s.a)("code",Object(t.a)({parentName:"pre"},{className:"language-json"}),'{\n  "failedUsers": [\n    {\n      "username": "testUser1",\n      "error": "ErrorsDto(errors=[Some error message])"\n    }\n  ],\n  "successfulUsers": [\n    "TestUser2"\n  ]\n}\n')))}p.isMDXComponent=!0},281:function(e,n,r){"use strict";r.d(n,"a",(function(){return m}));var t=r(0),a=r.n(t);function s(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){s(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function c(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},s=Object.keys(e);for(t=0;t<s.length;t++)r=s[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(t=0;t<s.length;t++)r=s[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=a.a.createContext({}),p=function(e){var n=a.a.useContext(l),r=n;return e&&(r="function"==typeof e?e(n):i({},n,{},e)),r},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},d=Object(t.forwardRef)((function(e,n){var r=e.components,t=e.mdxType,s=e.originalType,o=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=p(r),m=t,b=d["".concat(o,".").concat(m)]||d[m]||u[m]||s;return r?a.a.createElement(b,i({ref:n},l,{components:r})):a.a.createElement(b,i({ref:n},l))}));function m(e,n){var r=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var s=r.length,o=new Array(s);o[0]=d;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:t,o[1]=i;for(var l=2;l<s;l++)o[l]=r[l];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,r)}d.displayName="MDXCreateElement"}}]);