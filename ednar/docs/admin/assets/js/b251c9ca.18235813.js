"use strict";(self.webpackChunkednar_admin_docs=self.webpackChunkednar_admin_docs||[]).push([[4364],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return g}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),u=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,s=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=u(r),h=o,g=p["".concat(l,".").concat(h)]||p[h]||d[h]||s;return r?n.createElement(g,a(a({ref:t},c),{},{components:r})):n.createElement(g,a({ref:t},c))}));function g(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=r.length,a=new Array(s);a[0]=h;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[p]="string"==typeof e?e:o,a[1]=i;for(var u=2;u<s;u++)a[u]=r[u];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}h.displayName="MDXCreateElement"},437:function(e,t,r){r.r(t),r.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return g},frontMatter:function(){return i},metadata:function(){return u},toc:function(){return p}});var n=r(7462),o=r(3366),s=(r(7294),r(3905)),a=["components"],i={id:"debugging-steps",title:"Steps to debug EDNAR",slug:"/debugging-steps"},l=void 0,u={unversionedId:"debugging-steps",id:"version-5.20.0/debugging-steps",title:"Steps to debug EDNAR",description:"This guide covers some of the steps to perform when debugging EDNAR. These steps can help clients discover the causes of issues, and access information that Zepben may need to further investigate.",source:"@site/versioned_docs/version-5.20.0/debugging-steps.md",sourceDirName:".",slug:"/debugging-steps",permalink:"/ednar/docs/admin/5.20.0/debugging-steps",draft:!1,tags:[],version:"5.20.0",frontMatter:{id:"debugging-steps",title:"Steps to debug EDNAR",slug:"/debugging-steps"},sidebar:"version-5.20.0-sidebar",previous:{title:"Exporting SQL Server config",permalink:"/ednar/docs/admin/5.20.0/export-sql-server-config"},next:{title:"Editing clientOverrides lang files",permalink:"/ednar/docs/admin/5.20.0/editing-clientoverrides-lang-files"}},c={},p=[{value:"EDNAR App Server Logs",id:"ednar-app-server-logs",level:3},{value:"Debugging from UI/Web Client",id:"debugging-from-uiweb-client",level:3}],d={toc:p},h="wrapper";function g(e){var t=e.components,i=(0,o.Z)(e,a);return(0,s.kt)(h,(0,n.Z)({},d,i,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"This guide covers some of the steps to perform when debugging EDNAR. These steps can help clients discover the causes of issues, and access information that Zepben may need to further investigate."),(0,s.kt)("h3",{id:"ednar-app-server-logs"},"EDNAR App Server Logs"),(0,s.kt)("p",null,"The EDNAR App Server produces 2 main log outputs - the server log and the HTTP request log. There is also a blocked threads log, but this is rarely useful unless debugging serious performance issues. "),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("strong",{parentName:"li"},"Server Log")," ",(0,s.kt)("br",null),'\nThese files are formatted as ednar-server.log or ednar-server.YYYY-MM-DD.log. These contain the output from when EDNAR starts up, as well as any errors that the server might output.\nIf you read this log, you may be able to identify where the issue is and what the cause is, but you can also identify what content needs to be sent to Zepben by searching for "ERROR" in the text.'),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("strong",{parentName:"li"},"HTTP Request Log"),(0,s.kt)("br",null),"\nThese files are formatted as ednar-server_http.log or ednar-server_http.YYYY-MM-DD.0.log. These contain lots of information about all the HTTP requests that have been made to the server, most of which is not too useful for debugging.\nThe main items you'll want to look for are the response code, which is the first number after the quote marks on each line - in the example below, the response code is 401:\n",(0,s.kt)("inlineCode",{parentName:"li"},'"POST /api/v0/system-notifications HTTP/1.1" 401')," ",(0,s.kt)("br",null),"\nThe codes you'll most want to look for are:")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"400 - Bad request - typically means the EDNAR UI has sent a request to the server in the incorrect format, or with data that does not meet the schema requirements."),(0,s.kt)("li",{parentName:"ul"},"401 - Unauthorised - means the request does not have the correct authentication credentials, so it is refused. Typically occurs when a user needs to login or re-login to EDNAR."),(0,s.kt)("li",{parentName:"ul"},"403 - Forbidden - means that authentication credentials are provided, but they do not have the appropriate permissions. Typically occurs when the user performs an action that they do not have the correct privileges for (e.g. producing reports)"),(0,s.kt)("li",{parentName:"ul"},"404 - Not Found - typically means the URL accessed cannot be found, or is not being served correctly by the App Server (or another front end server, depending on infrastructure setup)"),(0,s.kt)("li",{parentName:"ul"},"500 - Internal server error - typically means something has happened that EDNAR does not know how to handle, and returns this error code. Should be rare, but may still occur"),(0,s.kt)("li",{parentName:"ul"},"502 - Bad gateway - typically occurs when making a request to an external system (CDM, OMS, customer notifications, SMTP) that either cannot be found or returns a response other than 200 (success)")),(0,s.kt)("h3",{id:"debugging-from-uiweb-client"},"Debugging from UI/Web Client"),(0,s.kt)("p",null,"Typically the most effective way to debug EDNAR is via the web browser console. For most Chromium-based browsers (Chrome, Firefox, Edge, Opera, Brave etc.), you can press F12 to open the browser developer tools.\nOnce your developer tools are open, you'll want to find the Network tab.",(0,s.kt)("br",null),(0,s.kt)("br",null),"\n",(0,s.kt)("img",{alt:"Browser Console",src:r(8994).Z,width:"811",height:"363"})),(0,s.kt)("p",null,"With this open, if you refresh the EDNAR browser page, the browser console will show all the requests the client is making and the responses it's receiving from the server.\nIf one of the requests in the list is red, it means that the request returned an error response code (typically one of the ones listed above). These are a good place to start looking for issues.\nIf you click on one of these requests, it will show you more details about the request and response - if you open the Preview tab after clicking on one of these requests, it will show you the response data in a human-readable format.",(0,s.kt)("br",null),"\n",(0,s.kt)("img",{alt:"Response Preview",src:r(8857).Z,width:"952",height:"490"}),(0,s.kt)("br",null),(0,s.kt)("br",null),"\nThis should have more information about any errors, or if the request is successful, it will contain the data being received. To send this data to Zepben, you can open the Response tab to get the full JSON-formatted reponse payload, which is easier for Zepben to view and debug."))}g.isMDXComponent=!0},8857:function(e,t,r){t.Z=r.p+"assets/images/network-tab-response-preview-0e84404ff817c0de6569862d065de9ac.png"},8994:function(e,t,r){t.Z=r.p+"assets/images/network-tab1-f5b7c5054975f69986137dce8d1b7cba.png"}}]);