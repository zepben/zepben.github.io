name: Deploy Evolve docs

on: 
  repository_dispatch:
    types: [deploy-evolve-docs]

jobs:
  deploy-docs:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v2

      - name: Wait for remote repository dispatch workflow to finish and download the artifact
        run: |
          sleep 10s
          # download latest artifact from the other repository 
          gh run download -R zepben/python-lib-ci-test `gh run list -R zepben/python-lib-ci-test --workflow=python-lib-build-test.yml -L1 --json headBranch,databaseId | jq '.[].databaseId'` -p docs 
          ls -R docs
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.CI_GITHUB_TOKEN }}

      - name: Parse GH url
        if: contains(github.event.client_payload.download_url, 'github.com')
        run: |
          url=${{ github.event.client_payload.download_url }}
          IFS='/' read -ra url_path <<< ${url/"https://github.com/"/}
          echo "REPO=${url_path[0]}/${url_path[1]}" >> $GITHUB_ENV
          echo "TAG=${url_path[4]}" >> $GITHUB_ENV
          echo "DOCS_FILE_NAME=${url_path[5]}" >> $GITHUB_ENV
        shell: bash
      - name: use vars
        if: contains(github.event.client_payload.download_url, 'github.com')
        run: |
          echo ${{ env.REPO }}
          echo ${{ env.TAG }}
          echo ${{ env.DOCS_FILE_NAME }}
        shell: bash
      - uses: dsaltares/fetch-gh-release-asset@master
        if: contains(github.event.client_payload.download_url, 'github.com')
        with:
          repo: "${{ env.REPO }}"
          version: "tags/${{ env.TAG }}"
          file: "${{ env.DOCS_FILE_NAME }}"
          target: "docs.zip"
          token: ${{ secrets.CI_GITHUB_TOKEN }}

      - name: Download doc site from Bitbucket
        if: contains(github.event.client_payload.download_url, 'bitbucket.org')
        run: |
          curl -v -L -u "${CI_BB_USERNAME}:${CI_BB_TOKEN}" -o docs.zip ${{ github.event.client_payload.download_url }}
        shell: bash
        env:
          CI_BB_USERNAME: ${{ secrets.CI_BB_USERNAME }}
          CI_BB_TOKEN: ${{ secrets.CI_BB_TOKEN }}

      - name: Replace docs site with the downloaded one
        run: |
          rm -rf ./evolve/docs/${{ github.event.client_payload.product_key }}
          mkdir ./evolve/docs/${{ github.event.client_payload.product_key }}
          unzip docs.zip -d ./evolve/docs/${{ github.event.client_payload.product_key }}
          git add ./evolve/docs/${{ github.event.client_payload.product_key }}/*
          staged_files=$(git diff --staged --name-only "${docs_path}*")
          if [[ ! -z "$staged_files" ]]; then
          git config user.email "ci.github@zepben.com"
          git config user.name "Github CI"
          git commit -m "Updated site for ${{ github.event.client_payload.product_key }}"
          git push origin master
          fi
        shell: bash
